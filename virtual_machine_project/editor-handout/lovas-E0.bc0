C0 C0 FF EE       # magic number
00 0D             # version 6, arch = 1 (64 bits)

00 04             # int pool count
# int pool
7F FF FF FF
80 00 00 00
7F FF FF FF
80 00 00 00

40 A9             # string pool total size
# string pool
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 31 39 2E 36 2D 31 39 2E 35 30 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/string.h0:19.6-19.50: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 32 33 2E 36 2D 32 34 2E 35 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0:23.6-24.55: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 33 31 2E 36 2D 33 31 2E 36 39 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/string.h0:31.6-31.69: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 33 32 2E 36 2D 33 32 2E 35 32 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0:32.6-32.52: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 33 37 2E 36 2D 33 37 2E 34 34 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0:37.6-37.44: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 34 33 2E 36 2D 34 33 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/string.h0:43.6-43.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 34 34 2E 36 2D 34 34 2E 34 32 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0:44.6-44.42: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 34 35 2E 31 34 2D 34 35 2E 33 39 00  # "/afs/andrew/course/15/122/lib/string.h0:45.14-45.39"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 34 35 2E 36 2D 34 35 2E 34 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0:45.6-45.45: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 35 32 2E 36 2D 35 32 2E 34 31 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/string.h0:52.6-52.41: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 35 36 2E 36 2D 35 36 2E 35 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0:56.6-56.55: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 35 37 2E 31 34 2D 35 37 2E 36 32 00  # "/afs/andrew/course/15/122/lib/string.h0:57.14-57.62"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 35 37 2E 36 2D 35 37 2E 36 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0:57.6-57.63: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 36 32 2E 31 35 2D 36 32 2E 34 37 00  # "/afs/andrew/course/15/122/lib/string.h0:62.15-62.47"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 36 32 2E 36 2D 36 32 2E 34 38 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/string.h0:62.6-62.48: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 36 33 2E 36 2D 36 33 2E 35 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0:63.6-63.55: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 36 37 2E 36 2D 36 37 2E 34 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0:67.6-67.45: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 36 39 2E 36 2D 36 39 2E 33 34 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/string.h0:69.6-69.34: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
67 61 70 62 75 66 2E 63 30 3A 34 33 2E 34 2D 34 33 2E 32 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "gapbuf.c0:43.4-43.23: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
67 61 70 62 75 66 2E 63 30 3A 34 35 2E 37 2D 34 35 2E 34 35 3A 20 40 61 73 73 65 72 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "gapbuf.c0:45.7-45.45: @assert annotation failed"
67 61 70 62 75 66 2E 63 30 3A 35 37 2E 33 31 2D 35 37 2E 35 31 00  # "gapbuf.c0:57.31-57.51"
67 61 70 62 75 66 2E 63 30 3A 36 34 2E 34 2D 36 34 2E 32 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "gapbuf.c0:64.4-64.23: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
67 61 70 62 75 66 2E 63 30 3A 36 35 2E 31 33 2D 36 35 2E 32 35 00  # "gapbuf.c0:65.13-65.25"
67 61 70 62 75 66 2E 63 30 3A 36 35 2E 34 2D 36 35 2E 32 36 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "gapbuf.c0:65.4-65.26: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
67 61 70 62 75 66 2E 63 30 3A 37 31 2E 34 2D 37 31 2E 32 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "gapbuf.c0:71.4-71.23: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
67 61 70 62 75 66 2E 63 30 3A 37 32 2E 31 33 2D 37 32 2E 32 35 00  # "gapbuf.c0:72.13-72.25"
67 61 70 62 75 66 2E 63 30 3A 37 32 2E 34 2D 37 32 2E 32 36 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "gapbuf.c0:72.4-72.26: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
67 61 70 62 75 66 2E 63 30 3A 37 38 2E 34 2D 37 38 2E 32 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "gapbuf.c0:78.4-78.23: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
67 61 70 62 75 66 2E 63 30 3A 37 39 2E 31 33 2D 37 39 2E 32 35 00  # "gapbuf.c0:79.13-79.25"
67 61 70 62 75 66 2E 63 30 3A 37 39 2E 34 2D 37 39 2E 32 36 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "gapbuf.c0:79.4-79.26: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
67 61 70 62 75 66 2E 63 30 3A 38 35 2E 34 2D 38 35 2E 32 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "gapbuf.c0:85.4-85.23: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
67 61 70 62 75 66 2E 63 30 3A 38 36 2E 31 33 2D 38 36 2E 32 35 00  # "gapbuf.c0:86.13-86.25"
67 61 70 62 75 66 2E 63 30 3A 38 36 2E 34 2D 38 36 2E 32 36 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "gapbuf.c0:86.4-86.26: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
67 61 70 62 75 66 2E 63 30 3A 39 33 2E 34 2D 39 33 2E 32 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "gapbuf.c0:93.4-93.23: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
67 61 70 62 75 66 2E 63 30 3A 39 34 2E 33 31 2D 39 34 2E 34 39 00  # "gapbuf.c0:94.31-94.49"
67 61 70 62 75 66 2E 63 30 3A 39 34 2E 34 2D 39 34 2E 35 30 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "gapbuf.c0:94.4-94.50: @ensures annotation failed"
67 61 70 62 75 66 2E 63 30 3A 39 35 2E 31 32 2D 39 35 2E 33 33 00  # "gapbuf.c0:95.12-95.33"
67 61 70 62 75 66 2E 63 30 3A 39 35 2E 34 2D 39 35 2E 33 34 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "gapbuf.c0:95.4-95.34: @ensures annotation failed"
67 61 70 62 75 66 2E 63 30 3A 39 36 2E 31 32 2D 39 36 2E 33 35 00  # "gapbuf.c0:96.12-96.35"
67 61 70 62 75 66 2E 63 30 3A 39 36 2E 33 39 2D 39 36 2E 36 33 00  # "gapbuf.c0:96.39-96.63"
67 61 70 62 75 66 2E 63 30 3A 39 36 2E 34 2D 39 36 2E 36 34 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "gapbuf.c0:96.4-96.64: @ensures annotation failed"
67 61 70 62 75 66 2E 63 30 3A 31 30 37 2E 32 36 2D 31 30 37 2E 33 38 00  # "gapbuf.c0:107.26-107.38"
67 61 70 62 75 66 2E 63 30 3A 31 30 37 2E 34 2D 31 30 37 2E 33 39 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "gapbuf.c0:107.4-107.39: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
67 61 70 62 75 66 2E 63 30 3A 31 30 38 2E 31 35 2D 31 30 38 2E 33 30 00  # "gapbuf.c0:108.15-108.30"
67 61 70 62 75 66 2E 63 30 3A 31 30 38 2E 33 34 2D 31 30 38 2E 35 32 00  # "gapbuf.c0:108.34-108.52"
67 61 70 62 75 66 2E 63 30 3A 31 30 38 2E 34 2D 31 30 38 2E 35 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "gapbuf.c0:108.4-108.55: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
67 61 70 62 75 66 2E 63 30 3A 31 30 39 2E 32 34 2D 31 30 39 2E 33 36 00  # "gapbuf.c0:109.24-109.36"
67 61 70 62 75 66 2E 63 30 3A 31 30 39 2E 34 2D 31 30 39 2E 33 37 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "gapbuf.c0:109.4-109.37: @ensures annotation failed"
67 61 70 62 75 66 2E 63 30 3A 31 30 39 2E 32 34 2D 31 30 39 2E 33 36 00  # "gapbuf.c0:109.24-109.36"
67 61 70 62 75 66 2E 63 30 3A 31 30 39 2E 34 2D 31 30 39 2E 33 37 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "gapbuf.c0:109.4-109.37: @ensures annotation failed"
67 61 70 62 75 66 2E 63 30 3A 31 32 32 2E 32 36 2D 31 32 32 2E 33 38 00  # "gapbuf.c0:122.26-122.38"
67 61 70 62 75 66 2E 63 30 3A 31 32 32 2E 34 2D 31 32 32 2E 33 39 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "gapbuf.c0:122.4-122.39: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
67 61 70 62 75 66 2E 63 30 3A 31 32 33 2E 31 35 2D 31 32 33 2E 33 30 00  # "gapbuf.c0:123.15-123.30"
67 61 70 62 75 66 2E 63 30 3A 31 32 33 2E 33 34 2D 31 32 33 2E 35 31 00  # "gapbuf.c0:123.34-123.51"
67 61 70 62 75 66 2E 63 30 3A 31 32 33 2E 34 2D 31 32 33 2E 35 34 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "gapbuf.c0:123.4-123.54: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
67 61 70 62 75 66 2E 63 30 3A 31 32 34 2E 32 34 2D 31 32 34 2E 33 36 00  # "gapbuf.c0:124.24-124.36"
67 61 70 62 75 66 2E 63 30 3A 31 32 34 2E 34 2D 31 32 34 2E 33 37 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "gapbuf.c0:124.4-124.37: @ensures annotation failed"
67 61 70 62 75 66 2E 63 30 3A 31 32 34 2E 32 34 2D 31 32 34 2E 33 36 00  # "gapbuf.c0:124.24-124.36"
67 61 70 62 75 66 2E 63 30 3A 31 32 34 2E 34 2D 31 32 34 2E 33 37 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "gapbuf.c0:124.4-124.37: @ensures annotation failed"
67 61 70 62 75 66 2E 63 30 3A 31 33 38 2E 32 36 2D 31 33 38 2E 33 38 00  # "gapbuf.c0:138.26-138.38"
67 61 70 62 75 66 2E 63 30 3A 31 33 38 2E 34 2D 31 33 38 2E 33 39 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "gapbuf.c0:138.4-138.39: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
67 61 70 62 75 66 2E 63 30 3A 31 33 39 2E 31 34 2D 31 33 39 2E 32 38 00  # "gapbuf.c0:139.14-139.28"
67 61 70 62 75 66 2E 63 30 3A 31 33 39 2E 34 2D 31 33 39 2E 32 39 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "gapbuf.c0:139.4-139.29: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
67 61 70 62 75 66 2E 63 30 3A 31 34 30 2E 32 34 2D 31 34 30 2E 33 36 00  # "gapbuf.c0:140.24-140.36"
67 61 70 62 75 66 2E 63 30 3A 31 34 30 2E 34 2D 31 34 30 2E 33 37 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "gapbuf.c0:140.4-140.37: @ensures annotation failed"
67 61 70 62 75 66 2E 63 30 3A 31 34 31 2E 31 34 2D 31 34 31 2E 32 39 00  # "gapbuf.c0:141.14-141.29"
67 61 70 62 75 66 2E 63 30 3A 31 34 31 2E 34 2D 31 34 31 2E 33 30 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "gapbuf.c0:141.4-141.30: @ensures annotation failed"
67 61 70 62 75 66 2E 63 30 3A 31 34 30 2E 32 34 2D 31 34 30 2E 33 36 00  # "gapbuf.c0:140.24-140.36"
67 61 70 62 75 66 2E 63 30 3A 31 34 30 2E 34 2D 31 34 30 2E 33 37 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "gapbuf.c0:140.4-140.37: @ensures annotation failed"
67 61 70 62 75 66 2E 63 30 3A 31 34 31 2E 31 34 2D 31 34 31 2E 32 39 00  # "gapbuf.c0:141.14-141.29"
67 61 70 62 75 66 2E 63 30 3A 31 34 31 2E 34 2D 31 34 31 2E 33 30 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "gapbuf.c0:141.4-141.30: @ensures annotation failed"
67 61 70 62 75 66 2E 63 30 3A 31 35 32 2E 32 36 2D 31 35 32 2E 33 38 00  # "gapbuf.c0:152.26-152.38"
67 61 70 62 75 66 2E 63 30 3A 31 35 32 2E 34 2D 31 35 32 2E 33 39 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "gapbuf.c0:152.4-152.39: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
67 61 70 62 75 66 2E 63 30 3A 31 35 33 2E 31 34 2D 31 35 33 2E 32 39 00  # "gapbuf.c0:153.14-153.29"
67 61 70 62 75 66 2E 63 30 3A 31 35 33 2E 33 34 2D 31 35 33 2E 35 31 00  # "gapbuf.c0:153.34-153.51"
67 61 70 62 75 66 2E 63 30 3A 31 35 33 2E 34 2D 31 35 33 2E 35 32 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "gapbuf.c0:153.4-153.52: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
67 61 70 62 75 66 2E 63 30 3A 31 35 34 2E 32 34 2D 31 35 34 2E 33 36 00  # "gapbuf.c0:154.24-154.36"
67 61 70 62 75 66 2E 63 30 3A 31 35 34 2E 34 2D 31 35 34 2E 33 37 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "gapbuf.c0:154.4-154.37: @ensures annotation failed"
67 61 70 62 75 66 2E 63 30 3A 31 35 34 2E 32 34 2D 31 35 34 2E 33 36 00  # "gapbuf.c0:154.24-154.36"
67 61 70 62 75 66 2E 63 30 3A 31 35 34 2E 34 2D 31 35 34 2E 33 37 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "gapbuf.c0:154.4-154.37: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 63 6F 6E 69 6F 2E 68 30 3A 31 34 2E 36 2D 31 34 2E 32 32 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/conio.h0:14.6-14.22: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 38 2E 31 2D 39 2E 33 33 00  # "/afs/andrew/course/15/122/lib/util.h0:8.1-9.33"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 39 2E 36 2D 39 2E 32 37 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.h0:9.6-9.27: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 31 30 2E 31 2D 31 31 2E 34 32 00  # "/afs/andrew/course/15/122/lib/util.h0:10.1-11.42"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 31 31 2E 36 2D 31 31 2E 33 36 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.h0:11.6-11.36: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 31 32 2E 31 2D 31 33 2E 34 33 00  # "/afs/andrew/course/15/122/lib/util.h0:12.1-13.43"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 31 33 2E 36 2D 31 33 2E 33 37 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.h0:13.6-13.37: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 31 37 2E 31 39 2D 31 37 2E 32 38 00  # "/afs/andrew/course/15/122/lib/util.h0:17.19-17.28"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 31 37 2E 36 2D 31 37 2E 32 39 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/util.h0:17.6-17.29: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 31 36 2E 31 2D 31 39 2E 34 38 00  # "/afs/andrew/course/15/122/lib/util.h0:16.1-19.48"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 31 38 2E 36 2D 31 38 2E 32 37 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.h0:18.6-18.27: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 31 39 2E 36 2D 31 39 2E 34 32 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.h0:19.6-19.42: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 32 32 2E 31 2D 32 34 2E 34 39 00  # "/afs/andrew/course/15/122/lib/util.h0:22.1-24.49"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 32 33 2E 36 2D 32 33 2E 34 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.h0:23.6-23.43: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 32 34 2E 36 2D 32 34 2E 34 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.h0:24.6-24.43: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 32 37 2E 31 2D 32 39 2E 34 39 00  # "/afs/andrew/course/15/122/lib/util.h0:27.1-29.49"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 32 38 2E 36 2D 32 38 2E 34 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.h0:28.6-28.43: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 32 39 2E 36 2D 32 39 2E 34 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.h0:29.6-29.43: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 31 33 2E 34 2D 31 33 2E 34 31 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.c0:13.4-13.41: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 31 34 2E 34 2D 31 34 2E 34 31 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.c0:14.4-14.41: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 32 31 2E 34 2D 32 31 2E 34 31 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.c0:21.4-21.41: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 32 32 2E 34 2D 32 32 2E 34 31 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.c0:22.4-22.41: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 32 39 2E 31 37 2D 32 39 2E 32 36 00  # "/afs/andrew/course/15/122/lib/util.c0:29.17-29.26"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 32 39 2E 34 2D 32 39 2E 32 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/util.c0:29.4-29.27: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 33 30 2E 34 2D 33 30 2E 32 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.c0:30.4-30.25: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 33 37 2E 34 2D 33 37 2E 33 30 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/util.c0:37.4-37.30: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 34 30 2E 32 31 2D 34 30 2E 33 34 00  # "/afs/andrew/course/15/122/lib/util.c0:40.21-40.34"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 34 30 2E 31 32 2D 34 30 2E 33 39 00  # "/afs/andrew/course/15/122/lib/util.c0:40.12-40.39"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 34 32 2E 32 31 2D 34 32 2E 33 34 00  # "/afs/andrew/course/15/122/lib/util.c0:42.21-42.34"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 34 32 2E 31 32 2D 34 32 2E 34 34 00  # "/afs/andrew/course/15/122/lib/util.c0:42.12-42.44"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 35 31 2E 31 38 2D 35 31 2E 32 38 00  # "/afs/andrew/course/15/122/lib/util.c0:51.18-51.28"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 35 35 2E 38 2D 35 35 2E 34 35 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.c0:55.8-55.45: @loop_invariant annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 35 37 2E 32 33 2D 35 37 2E 34 33 00  # "/afs/andrew/course/15/122/lib/util.c0:57.23-57.43"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 36 30 2E 31 30 2D 36 30 2E 33 34 00  # "/afs/andrew/course/15/122/lib/util.c0:60.10-60.34"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 34 39 2E 34 30 2D 34 39 2E 35 30 00  # "/afs/andrew/course/15/122/lib/util.c0:49.40-49.50"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 34 39 2E 34 2D 34 39 2E 35 31 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.c0:49.4-49.51: @ensures annotation failed"
64 6C 6C 5F 70 74 2E 63 30 3A 34 33 2E 34 2D 34 33 2E 34 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "dll_pt.c0:43.4-43.43: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
64 6C 6C 5F 70 74 2E 63 30 3A 34 38 2E 31 38 2D 34 38 2E 35 31 00  # "dll_pt.c0:48.18-48.51"
64 6C 6C 5F 70 74 2E 63 30 3A 35 34 2E 34 2D 35 34 2E 35 39 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "dll_pt.c0:54.4-54.59: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
64 6C 6C 5F 70 74 2E 63 30 3A 36 36 2E 31 36 2D 36 36 2E 35 36 00  # "dll_pt.c0:66.16-66.56"
64 6C 6C 5F 70 74 2E 63 30 3A 37 31 2E 34 2D 37 31 2E 34 31 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "dll_pt.c0:71.4-71.41: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
64 6C 6C 5F 70 74 2E 63 30 3A 37 37 2E 32 30 2D 37 37 2E 35 33 00  # "dll_pt.c0:77.20-77.53"
64 6C 6C 5F 70 74 2E 63 30 3A 38 34 2E 34 2D 38 34 2E 36 30 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "dll_pt.c0:84.4-84.60: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
64 6C 6C 5F 70 74 2E 63 30 3A 39 31 2E 31 36 2D 39 31 2E 35 36 00  # "dll_pt.c0:91.16-91.56"
64 6C 6C 5F 70 74 2E 63 30 3A 39 35 2E 34 2D 39 35 2E 36 30 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "dll_pt.c0:95.4-95.60: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
64 6C 6C 5F 70 74 2E 63 30 3A 31 30 32 2E 34 2D 31 30 32 2E 34 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "dll_pt.c0:102.4-102.43: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
64 6C 6C 5F 70 74 2E 63 30 3A 31 30 38 2E 31 31 2D 31 30 38 2E 33 32 3A 20 40 61 73 73 65 72 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "dll_pt.c0:108.11-108.32: @assert annotation failed"
64 6C 6C 5F 70 74 2E 63 30 3A 31 31 30 2E 31 31 2D 31 31 30 2E 33 35 3A 20 40 61 73 73 65 72 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "dll_pt.c0:110.11-110.35: @assert annotation failed"
64 6C 6C 5F 70 74 2E 63 30 3A 31 32 38 2E 31 36 2D 31 32 38 2E 33 37 00  # "dll_pt.c0:128.16-128.37"
31 2E 35 00  # "1.5"
64 6C 6C 5F 70 74 2E 63 30 3A 31 33 31 2E 32 33 2D 31 33 31 2E 34 36 00  # "dll_pt.c0:131.23-131.46"
64 6C 6C 5F 70 74 2E 63 30 3A 31 33 31 2E 35 30 2D 31 33 31 2E 37 35 00  # "dll_pt.c0:131.50-131.75"
4E 45 58 54 20 49 53 20 46 41 4C 53 45 00  # "NEXT IS FALSE"
64 6C 6C 5F 70 74 2E 63 30 3A 31 33 33 2E 32 33 2D 31 33 33 2E 34 35 00  # "dll_pt.c0:133.23-133.45"
64 6C 6C 5F 70 74 2E 63 30 3A 31 33 33 2E 34 39 2D 31 33 33 2E 37 34 00  # "dll_pt.c0:133.49-133.74"
64 6C 6C 5F 70 74 2E 63 30 3A 31 33 34 2E 33 34 2D 31 33 34 2E 35 38 00  # "dll_pt.c0:134.34-134.58"
64 6C 6C 5F 70 74 2E 63 30 3A 31 34 32 2E 34 2D 31 34 32 2E 32 34 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "dll_pt.c0:142.4-142.24: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
64 6C 6C 5F 70 74 2E 63 30 3A 31 34 33 2E 31 33 2D 31 34 33 2E 32 35 00  # "dll_pt.c0:143.13-143.25"
64 6C 6C 5F 70 74 2E 63 30 3A 31 34 33 2E 34 2D 31 34 33 2E 32 36 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "dll_pt.c0:143.4-143.26: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
64 6C 6C 5F 70 74 2E 63 30 3A 31 34 36 2E 37 2D 31 34 36 2E 33 33 3A 20 40 61 73 73 65 72 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "dll_pt.c0:146.7-146.33: @assert annotation failed"
64 6C 6C 5F 70 74 2E 63 30 3A 31 34 34 2E 31 32 2D 31 34 34 2E 32 34 00  # "dll_pt.c0:144.12-144.24"
64 6C 6C 5F 70 74 2E 63 30 3A 31 34 34 2E 34 2D 31 34 34 2E 32 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "dll_pt.c0:144.4-144.25: @ensures annotation failed"
64 6C 6C 5F 70 74 2E 63 30 3A 31 35 31 2E 34 2D 31 35 31 2E 32 34 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "dll_pt.c0:151.4-151.24: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
64 6C 6C 5F 70 74 2E 63 30 3A 31 35 32 2E 31 33 2D 31 35 32 2E 32 35 00  # "dll_pt.c0:152.13-152.25"
64 6C 6C 5F 70 74 2E 63 30 3A 31 35 32 2E 34 2D 31 35 32 2E 32 36 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "dll_pt.c0:152.4-152.26: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
64 6C 6C 5F 70 74 2E 63 30 3A 31 35 35 2E 37 2D 31 35 35 2E 33 33 3A 20 40 61 73 73 65 72 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "dll_pt.c0:155.7-155.33: @assert annotation failed"
64 6C 6C 5F 70 74 2E 63 30 3A 31 35 33 2E 31 32 2D 31 35 33 2E 32 34 00  # "dll_pt.c0:153.12-153.24"
64 6C 6C 5F 70 74 2E 63 30 3A 31 35 33 2E 34 2D 31 35 33 2E 32 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "dll_pt.c0:153.4-153.25: @ensures annotation failed"
64 6C 6C 5F 70 74 2E 63 30 3A 31 36 30 2E 34 2D 31 36 30 2E 32 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "dll_pt.c0:160.4-160.23: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
64 6C 6C 5F 70 74 2E 63 30 3A 31 36 31 2E 31 33 2D 31 36 31 2E 32 35 00  # "dll_pt.c0:161.13-161.25"
64 6C 6C 5F 70 74 2E 63 30 3A 31 36 31 2E 34 2D 31 36 31 2E 32 36 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "dll_pt.c0:161.4-161.26: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
64 6C 6C 5F 70 74 2E 63 30 3A 31 36 32 2E 31 35 2D 31 36 32 2E 33 33 00  # "dll_pt.c0:162.15-162.33"
64 6C 6C 5F 70 74 2E 63 30 3A 31 36 32 2E 34 2D 31 36 32 2E 33 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "dll_pt.c0:162.4-162.35: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
64 6C 6C 5F 70 74 2E 63 30 3A 31 36 35 2E 37 2D 31 36 35 2E 33 32 3A 20 40 61 73 73 65 72 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "dll_pt.c0:165.7-165.32: @assert annotation failed"
64 6C 6C 5F 70 74 2E 63 30 3A 31 36 33 2E 31 32 2D 31 36 33 2E 32 34 00  # "dll_pt.c0:163.12-163.24"
64 6C 6C 5F 70 74 2E 63 30 3A 31 36 33 2E 34 2D 31 36 33 2E 32 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "dll_pt.c0:163.4-163.25: @ensures annotation failed"
64 6C 6C 5F 70 74 2E 63 30 3A 31 36 33 2E 31 32 2D 31 36 33 2E 32 34 00  # "dll_pt.c0:163.12-163.24"
64 6C 6C 5F 70 74 2E 63 30 3A 31 36 33 2E 34 2D 31 36 33 2E 32 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "dll_pt.c0:163.4-163.25: @ensures annotation failed"
64 6C 6C 5F 70 74 2E 63 30 3A 31 37 32 2E 34 2D 31 37 32 2E 32 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "dll_pt.c0:172.4-172.23: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
64 6C 6C 5F 70 74 2E 63 30 3A 31 37 33 2E 31 33 2D 31 37 33 2E 32 35 00  # "dll_pt.c0:173.13-173.25"
64 6C 6C 5F 70 74 2E 63 30 3A 31 37 33 2E 34 2D 31 37 33 2E 32 36 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "dll_pt.c0:173.4-173.26: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
64 6C 6C 5F 70 74 2E 63 30 3A 31 37 34 2E 31 35 2D 31 37 34 2E 33 32 00  # "dll_pt.c0:174.15-174.32"
64 6C 6C 5F 70 74 2E 63 30 3A 31 37 34 2E 34 2D 31 37 34 2E 33 34 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "dll_pt.c0:174.4-174.34: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
64 6C 6C 5F 70 74 2E 63 30 3A 31 37 37 2E 38 2D 31 37 37 2E 33 33 3A 20 40 61 73 73 65 72 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "dll_pt.c0:177.8-177.33: @assert annotation failed"
64 6C 6C 5F 70 74 2E 63 30 3A 31 37 35 2E 31 32 2D 31 37 35 2E 32 34 00  # "dll_pt.c0:175.12-175.24"
64 6C 6C 5F 70 74 2E 63 30 3A 31 37 35 2E 34 2D 31 37 35 2E 32 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "dll_pt.c0:175.4-175.25: @ensures annotation failed"
64 6C 6C 5F 70 74 2E 63 30 3A 31 37 35 2E 31 32 2D 31 37 35 2E 32 34 00  # "dll_pt.c0:175.12-175.24"
64 6C 6C 5F 70 74 2E 63 30 3A 31 37 35 2E 34 2D 31 37 35 2E 32 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "dll_pt.c0:175.4-175.25: @ensures annotation failed"
64 6C 6C 5F 70 74 2E 63 30 3A 31 38 34 2E 34 2D 31 38 34 2E 32 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "dll_pt.c0:184.4-184.23: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
64 6C 6C 5F 70 74 2E 63 30 3A 31 38 35 2E 31 33 2D 31 38 35 2E 32 35 00  # "dll_pt.c0:185.13-185.25"
64 6C 6C 5F 70 74 2E 63 30 3A 31 38 35 2E 34 2D 31 38 35 2E 32 36 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "dll_pt.c0:185.4-185.26: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
64 6C 6C 5F 70 74 2E 63 30 3A 31 38 36 2E 31 35 2D 31 38 36 2E 35 32 00  # "dll_pt.c0:186.15-186.52"
64 6C 6C 5F 70 74 2E 63 30 3A 31 38 36 2E 34 2D 31 38 36 2E 35 34 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "dll_pt.c0:186.4-186.54: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
64 6C 6C 5F 70 74 2E 63 30 3A 31 38 38 2E 31 35 2D 31 38 38 2E 33 33 00  # "dll_pt.c0:188.15-188.33"
64 6C 6C 5F 70 74 2E 63 30 3A 31 38 38 2E 33 37 2D 31 38 38 2E 35 34 00  # "dll_pt.c0:188.37-188.54"
64 6C 6C 5F 70 74 2E 63 30 3A 31 38 38 2E 34 2D 31 38 38 2E 35 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "dll_pt.c0:188.4-188.57: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
64 6C 6C 5F 70 74 2E 63 30 3A 31 38 39 2E 31 32 2D 31 38 39 2E 32 34 00  # "dll_pt.c0:189.12-189.24"
64 6C 6C 5F 70 74 2E 63 30 3A 31 38 39 2E 34 2D 31 38 39 2E 32 36 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "dll_pt.c0:189.4-189.26: @ensures annotation failed"
64 6C 6C 5F 70 74 2E 63 30 3A 31 39 35 2E 31 32 2D 31 39 35 2E 36 39 3A 20 40 61 73 73 65 72 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "dll_pt.c0:195.12-195.69: @assert annotation failed"
64 6C 6C 5F 70 74 2E 63 30 3A 31 38 39 2E 31 32 2D 31 38 39 2E 32 34 00  # "dll_pt.c0:189.12-189.24"
64 6C 6C 5F 70 74 2E 63 30 3A 31 38 39 2E 34 2D 31 38 39 2E 32 36 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "dll_pt.c0:189.4-189.26: @ensures annotation failed"
64 6C 6C 5F 70 74 2E 63 30 3A 31 38 39 2E 31 32 2D 31 38 39 2E 32 34 00  # "dll_pt.c0:189.12-189.24"
64 6C 6C 5F 70 74 2E 63 30 3A 31 38 39 2E 34 2D 31 38 39 2E 32 36 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "dll_pt.c0:189.4-189.26: @ensures annotation failed"
74 62 75 66 2E 63 30 3A 33 30 2E 34 2D 33 30 2E 32 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "tbuf.c0:30.4-30.23: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
74 62 75 66 2E 63 30 3A 33 31 2E 31 33 2D 33 31 2E 32 35 00  # "tbuf.c0:31.13-31.25"
74 62 75 66 2E 63 30 3A 33 31 2E 34 2D 33 31 2E 32 36 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "tbuf.c0:31.4-31.26: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
74 62 75 66 2E 63 30 3A 33 37 2E 31 32 2D 33 37 2E 33 30 3A 20 40 61 73 73 65 72 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "tbuf.c0:37.12-37.30: @assert annotation failed"
74 62 75 66 2E 63 30 3A 33 39 2E 31 34 2D 33 39 2E 32 36 00  # "tbuf.c0:39.14-39.26"
74 62 75 66 2E 63 30 3A 33 32 2E 31 32 2D 33 32 2E 32 34 00  # "tbuf.c0:32.12-32.24"
74 62 75 66 2E 63 30 3A 33 32 2E 34 2D 33 32 2E 32 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "tbuf.c0:32.4-32.25: @ensures annotation failed"
74 62 75 66 2E 63 30 3A 33 32 2E 31 32 2D 33 32 2E 32 34 00  # "tbuf.c0:32.12-32.24"
74 62 75 66 2E 63 30 3A 33 32 2E 34 2D 33 32 2E 32 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "tbuf.c0:32.4-32.25: @ensures annotation failed"
74 62 75 66 2E 63 30 3A 34 31 2E 31 32 2D 34 31 2E 33 30 3A 20 40 61 73 73 65 72 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "tbuf.c0:41.12-41.30: @assert annotation failed"
74 62 75 66 2E 63 30 3A 33 32 2E 31 32 2D 33 32 2E 32 34 00  # "tbuf.c0:32.12-32.24"
74 62 75 66 2E 63 30 3A 33 32 2E 34 2D 33 32 2E 32 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "tbuf.c0:32.4-32.25: @ensures annotation failed"
74 62 75 66 2E 63 30 3A 34 38 2E 34 2D 34 38 2E 32 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "tbuf.c0:48.4-48.23: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
74 62 75 66 2E 63 30 3A 34 39 2E 31 33 2D 34 39 2E 32 35 00  # "tbuf.c0:49.13-49.25"
74 62 75 66 2E 63 30 3A 34 39 2E 34 2D 34 39 2E 32 36 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "tbuf.c0:49.4-49.26: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
74 62 75 66 2E 63 30 3A 36 31 2E 31 37 2D 36 31 2E 33 35 00  # "tbuf.c0:61.17-61.35"
74 62 75 66 2E 63 30 3A 35 30 2E 31 32 2D 35 30 2E 32 34 00  # "tbuf.c0:50.12-50.24"
74 62 75 66 2E 63 30 3A 35 30 2E 34 2D 35 30 2E 32 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "tbuf.c0:50.4-50.25: @ensures annotation failed"
74 62 75 66 2E 63 30 3A 36 35 2E 31 36 2D 36 35 2E 33 33 00  # "tbuf.c0:65.16-65.33"
74 62 75 66 2E 63 30 3A 35 30 2E 31 32 2D 35 30 2E 32 34 00  # "tbuf.c0:50.12-50.24"
74 62 75 66 2E 63 30 3A 35 30 2E 34 2D 35 30 2E 32 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "tbuf.c0:50.4-50.25: @ensures annotation failed"
74 62 75 66 2E 63 30 3A 35 30 2E 31 32 2D 35 30 2E 32 34 00  # "tbuf.c0:50.12-50.24"
74 62 75 66 2E 63 30 3A 35 30 2E 34 2D 35 30 2E 32 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "tbuf.c0:50.4-50.25: @ensures annotation failed"
74 62 75 66 2E 63 30 3A 37 35 2E 34 2D 37 35 2E 32 34 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "tbuf.c0:75.4-75.24: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
74 62 75 66 2E 63 30 3A 37 36 2E 31 33 2D 37 36 2E 32 35 00  # "tbuf.c0:76.13-76.25"
74 62 75 66 2E 63 30 3A 37 36 2E 34 2D 37 36 2E 32 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "tbuf.c0:76.4-76.27: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
74 62 75 66 2E 63 30 3A 38 30 2E 39 2D 38 30 2E 34 30 3A 20 40 61 73 73 65 72 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "tbuf.c0:80.9-80.40: @assert annotation failed"
74 62 75 66 2E 63 30 3A 37 37 2E 31 32 2D 37 37 2E 32 34 00  # "tbuf.c0:77.12-77.24"
74 62 75 66 2E 63 30 3A 37 37 2E 34 2D 37 37 2E 32 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "tbuf.c0:77.4-77.25: @ensures annotation failed"
74 62 75 66 2E 63 30 3A 38 39 2E 31 37 2D 38 39 2E 33 34 3A 20 40 61 73 73 65 72 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "tbuf.c0:89.17-89.34: @assert annotation failed"
74 62 75 66 2E 63 30 3A 39 30 2E 31 37 2D 39 30 2E 33 38 00  # "tbuf.c0:90.17-90.38"
74 62 75 66 2E 63 30 3A 37 37 2E 31 32 2D 37 37 2E 32 34 00  # "tbuf.c0:77.12-77.24"
74 62 75 66 2E 63 30 3A 37 37 2E 34 2D 37 37 2E 32 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "tbuf.c0:77.4-77.25: @ensures annotation failed"
74 62 75 66 2E 63 30 3A 37 37 2E 31 32 2D 37 37 2E 32 34 00  # "tbuf.c0:77.12-77.24"
74 62 75 66 2E 63 30 3A 37 37 2E 34 2D 37 37 2E 32 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "tbuf.c0:77.4-77.25: @ensures annotation failed"
74 62 75 66 2E 63 30 3A 31 30 33 2E 31 32 2D 31 30 33 2E 32 34 00  # "tbuf.c0:103.12-103.24"
74 62 75 66 2E 63 30 3A 31 30 35 2E 31 34 2D 31 30 35 2E 33 34 00  # "tbuf.c0:105.14-105.34"
74 62 75 66 2E 63 30 3A 31 30 35 2E 33 38 2D 31 30 35 2E 35 36 00  # "tbuf.c0:105.38-105.56"
74 62 75 66 2E 63 30 3A 31 30 35 2E 36 30 2D 31 30 35 2E 37 37 00  # "tbuf.c0:105.60-105.77"
74 62 75 66 2E 63 30 3A 31 31 35 2E 38 2D 31 31 35 2E 32 38 3A 20 40 61 73 73 65 72 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "tbuf.c0:115.8-115.28: @assert annotation failed"
74 62 75 66 2E 63 30 3A 31 31 39 2E 32 34 2D 31 31 39 2E 33 38 00  # "tbuf.c0:119.24-119.38"
74 62 75 66 2E 63 30 3A 31 32 30 2E 31 35 2D 31 32 30 2E 34 32 00  # "tbuf.c0:120.15-120.42"
74 62 75 66 2E 63 30 3A 31 32 30 2E 34 36 2D 31 32 30 2E 37 36 00  # "tbuf.c0:120.46-120.76"
74 62 75 66 2E 63 30 3A 31 32 30 2E 38 2D 31 32 30 2E 37 37 3A 20 40 61 73 73 65 72 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "tbuf.c0:120.8-120.77: @assert annotation failed"
74 62 75 66 2E 63 30 3A 31 31 32 2E 31 32 2D 31 31 32 2E 32 38 00  # "tbuf.c0:112.12-112.28"
74 62 75 66 2E 63 30 3A 31 31 32 2E 34 2D 31 31 32 2E 33 30 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "tbuf.c0:112.4-112.30: @ensures annotation failed"
74 62 75 66 2E 63 30 3A 31 33 38 2E 34 2D 31 33 38 2E 32 34 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "tbuf.c0:138.4-138.24: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
74 62 75 66 2E 63 30 3A 31 33 39 2E 31 33 2D 31 33 39 2E 32 33 00  # "tbuf.c0:139.13-139.23"
74 62 75 66 2E 63 30 3A 31 33 39 2E 34 2D 31 33 39 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "tbuf.c0:139.4-139.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
74 62 75 66 2E 63 30 3A 31 34 30 2E 33 33 2D 31 34 30 2E 36 30 00  # "tbuf.c0:140.33-140.60"
74 62 75 66 2E 63 30 3A 31 34 30 2E 34 2D 31 34 30 2E 36 31 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "tbuf.c0:140.4-140.61: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
74 62 75 66 2E 63 30 3A 31 35 33 2E 38 2D 31 35 33 2E 34 30 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "tbuf.c0:153.8-153.40: @loop_invariant annotation failed"
74 62 75 66 2E 63 30 3A 31 36 30 2E 31 38 2D 31 36 30 2E 34 39 3A 20 40 61 73 73 65 72 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "tbuf.c0:160.18-160.49: @assert annotation failed"
74 62 75 66 2E 63 30 3A 31 37 32 2E 31 37 2D 31 37 32 2E 34 38 3A 20 40 61 73 73 65 72 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "tbuf.c0:172.17-172.48: @assert annotation failed"
74 62 75 66 2E 63 30 3A 31 38 34 2E 31 39 2D 31 38 34 2E 32 39 00  # "tbuf.c0:184.19-184.29"
74 62 75 66 2E 63 30 3A 31 38 34 2E 33 33 2D 31 38 34 2E 35 38 00  # "tbuf.c0:184.33-184.58"
74 62 75 66 2E 63 30 3A 31 38 34 2E 31 32 2D 31 38 34 2E 35 39 3A 20 40 61 73 73 65 72 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "tbuf.c0:184.12-184.59: @assert annotation failed"
74 62 75 66 2E 63 30 3A 31 38 38 2E 32 31 2D 31 38 38 2E 33 35 00  # "tbuf.c0:188.21-188.35"
74 62 75 66 2E 63 30 3A 31 39 32 2E 31 39 2D 31 39 32 2E 33 31 00  # "tbuf.c0:192.19-192.31"
74 62 75 66 2E 63 30 3A 31 39 32 2E 31 32 2D 31 39 32 2E 33 33 3A 20 40 61 73 73 65 72 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "tbuf.c0:192.12-192.33: @assert annotation failed"
74 62 75 66 2E 63 30 3A 31 39 33 2E 32 32 2D 31 39 33 2E 33 31 00  # "tbuf.c0:193.22-193.31"
74 62 75 66 2E 63 30 3A 31 39 39 2E 31 39 2D 31 39 39 2E 32 39 00  # "tbuf.c0:199.19-199.29"
74 62 75 66 2E 63 30 3A 31 39 39 2E 31 32 2D 31 39 39 2E 33 31 3A 20 40 61 73 73 65 72 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "tbuf.c0:199.12-199.31: @assert annotation failed"
74 62 75 66 2E 63 30 3A 31 34 31 2E 31 32 2D 31 34 31 2E 32 32 00  # "tbuf.c0:141.12-141.22"
74 62 75 66 2E 63 30 3A 31 34 31 2E 34 2D 31 34 31 2E 32 34 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "tbuf.c0:141.4-141.24: @ensures annotation failed"
74 62 75 66 2E 63 30 3A 31 34 32 2E 31 33 2D 31 34 32 2E 34 30 00  # "tbuf.c0:142.13-142.40"
74 62 75 66 2E 63 30 3A 31 34 32 2E 34 2D 31 34 32 2E 34 32 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "tbuf.c0:142.4-142.42: @ensures annotation failed"
74 62 75 66 2E 63 30 3A 32 30 34 2E 31 39 2D 32 30 34 2E 32 39 00  # "tbuf.c0:204.19-204.29"
74 62 75 66 2E 63 30 3A 32 30 34 2E 33 33 2D 32 30 34 2E 35 38 00  # "tbuf.c0:204.33-204.58"
74 62 75 66 2E 63 30 3A 32 30 34 2E 31 32 2D 32 30 34 2E 35 39 3A 20 40 61 73 73 65 72 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "tbuf.c0:204.12-204.59: @assert annotation failed"
74 62 75 66 2E 63 30 3A 32 30 38 2E 32 31 2D 32 30 38 2E 33 35 00  # "tbuf.c0:208.21-208.35"
74 62 75 66 2E 63 30 3A 32 31 32 2E 31 39 2D 32 31 32 2E 33 31 00  # "tbuf.c0:212.19-212.31"
74 62 75 66 2E 63 30 3A 32 31 32 2E 31 32 2D 32 31 32 2E 33 33 3A 20 40 61 73 73 65 72 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "tbuf.c0:212.12-212.33: @assert annotation failed"
74 62 75 66 2E 63 30 3A 32 31 33 2E 32 32 2D 32 31 33 2E 33 31 00  # "tbuf.c0:213.22-213.31"
74 62 75 66 2E 63 30 3A 32 31 39 2E 31 39 2D 32 31 39 2E 32 39 00  # "tbuf.c0:219.19-219.29"
74 62 75 66 2E 63 30 3A 32 31 39 2E 31 32 2D 32 31 39 2E 33 31 3A 20 40 61 73 73 65 72 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "tbuf.c0:219.12-219.31: @assert annotation failed"
74 62 75 66 2E 63 30 3A 31 34 31 2E 31 32 2D 31 34 31 2E 32 32 00  # "tbuf.c0:141.12-141.22"
74 62 75 66 2E 63 30 3A 31 34 31 2E 34 2D 31 34 31 2E 32 34 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "tbuf.c0:141.4-141.24: @ensures annotation failed"
74 62 75 66 2E 63 30 3A 31 34 32 2E 31 33 2D 31 34 32 2E 34 30 00  # "tbuf.c0:142.13-142.40"
74 62 75 66 2E 63 30 3A 31 34 32 2E 34 2D 31 34 32 2E 34 32 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "tbuf.c0:142.4-142.42: @ensures annotation failed"
74 62 75 66 2E 63 30 3A 31 34 31 2E 31 32 2D 31 34 31 2E 32 32 00  # "tbuf.c0:141.12-141.22"
74 62 75 66 2E 63 30 3A 31 34 31 2E 34 2D 31 34 31 2E 32 34 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "tbuf.c0:141.4-141.24: @ensures annotation failed"
74 62 75 66 2E 63 30 3A 31 34 32 2E 31 33 2D 31 34 32 2E 34 30 00  # "tbuf.c0:142.13-142.40"
74 62 75 66 2E 63 30 3A 31 34 32 2E 34 2D 31 34 32 2E 34 32 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "tbuf.c0:142.4-142.42: @ensures annotation failed"
74 62 75 66 2E 63 30 3A 32 32 39 2E 34 2D 32 32 39 2E 32 34 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "tbuf.c0:229.4-229.24: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
74 62 75 66 2E 63 30 3A 32 33 30 2E 31 33 2D 32 33 30 2E 32 33 00  # "tbuf.c0:230.13-230.23"
74 62 75 66 2E 63 30 3A 32 33 30 2E 34 2D 32 33 30 2E 32 34 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "tbuf.c0:230.4-230.24: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
74 62 75 66 2E 63 30 3A 32 33 33 2E 33 36 2D 32 33 33 2E 36 37 00  # "tbuf.c0:233.36-233.67"
74 62 75 66 2E 63 30 3A 32 33 35 2E 38 2D 32 33 35 2E 33 38 00  # "tbuf.c0:235.8-235.38"
74 62 75 66 2E 63 30 3A 32 33 36 2E 31 38 2D 32 33 36 2E 32 38 00  # "tbuf.c0:236.18-236.28"
74 62 75 66 2E 63 30 3A 32 33 36 2E 31 31 2D 32 33 36 2E 33 30 3A 20 40 61 73 73 65 72 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "tbuf.c0:236.11-236.30: @assert annotation failed"
74 62 75 66 2E 63 30 3A 32 33 38 2E 31 36 2D 32 33 38 2E 34 37 00  # "tbuf.c0:238.16-238.47"
74 62 75 66 2E 63 30 3A 32 33 38 2E 34 38 2D 32 33 38 2E 37 38 00  # "tbuf.c0:238.48-238.78"
74 62 75 66 2E 63 30 3A 32 33 31 2E 31 32 2D 32 33 31 2E 32 32 00  # "tbuf.c0:231.12-231.22"
74 62 75 66 2E 63 30 3A 32 33 31 2E 34 2D 32 33 31 2E 32 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "tbuf.c0:231.4-231.23: @ensures annotation failed"
74 62 75 66 2E 63 30 3A 32 33 31 2E 31 32 2D 32 33 31 2E 32 32 00  # "tbuf.c0:231.12-231.22"
74 62 75 66 2E 63 30 3A 32 33 31 2E 34 2D 32 33 31 2E 32 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "tbuf.c0:231.4-231.23: @ensures annotation failed"
74 62 75 66 2E 63 30 3A 32 33 31 2E 31 32 2D 32 33 31 2E 32 32 00  # "tbuf.c0:231.12-231.22"
74 62 75 66 2E 63 30 3A 32 33 31 2E 34 2D 32 33 31 2E 32 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "tbuf.c0:231.4-231.23: @ensures annotation failed"
74 62 75 66 2E 63 30 3A 32 34 35 2E 34 2D 32 34 35 2E 32 34 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "tbuf.c0:245.4-245.24: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
74 62 75 66 2E 63 30 3A 32 34 36 2E 31 33 2D 32 34 36 2E 32 33 00  # "tbuf.c0:246.13-246.23"
74 62 75 66 2E 63 30 3A 32 34 36 2E 34 2D 32 34 36 2E 32 34 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "tbuf.c0:246.4-246.24: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
74 62 75 66 2E 63 30 3A 32 34 39 2E 31 31 2D 32 34 39 2E 34 31 00  # "tbuf.c0:249.11-249.41"
74 62 75 66 2E 63 30 3A 32 34 39 2E 34 33 2D 32 34 39 2E 37 34 00  # "tbuf.c0:249.43-249.74"
74 62 75 66 2E 63 30 3A 32 35 30 2E 31 33 2D 32 35 30 2E 34 33 00  # "tbuf.c0:250.13-250.43"
74 62 75 66 2E 63 30 3A 32 35 32 2E 38 2D 32 35 32 2E 33 39 00  # "tbuf.c0:252.8-252.39"
74 62 75 66 2E 63 30 3A 32 35 33 2E 31 38 2D 32 35 33 2E 32 38 00  # "tbuf.c0:253.18-253.28"
74 62 75 66 2E 63 30 3A 32 35 33 2E 31 31 2D 32 35 33 2E 33 30 3A 20 40 61 73 73 65 72 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "tbuf.c0:253.11-253.30: @assert annotation failed"
74 62 75 66 2E 63 30 3A 32 34 37 2E 31 32 2D 32 34 37 2E 32 32 00  # "tbuf.c0:247.12-247.22"
74 62 75 66 2E 63 30 3A 32 34 37 2E 34 2D 32 34 37 2E 32 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "tbuf.c0:247.4-247.23: @ensures annotation failed"
74 62 75 66 2E 63 30 3A 32 34 37 2E 31 32 2D 32 34 37 2E 32 32 00  # "tbuf.c0:247.12-247.22"
74 62 75 66 2E 63 30 3A 32 34 37 2E 34 2D 32 34 37 2E 32 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "tbuf.c0:247.4-247.23: @ensures annotation failed"
74 62 75 66 2E 63 30 3A 32 34 37 2E 31 32 2D 32 34 37 2E 32 32 00  # "tbuf.c0:247.12-247.22"
74 62 75 66 2E 63 30 3A 32 34 37 2E 34 2D 32 34 37 2E 32 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "tbuf.c0:247.4-247.23: @ensures annotation failed"
74 62 75 66 2E 63 30 3A 32 36 30 2E 34 2D 32 36 30 2E 32 34 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "tbuf.c0:260.4-260.24: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
74 62 75 66 2E 63 30 3A 32 36 31 2E 31 33 2D 32 36 31 2E 32 33 00  # "tbuf.c0:261.13-261.23"
74 62 75 66 2E 63 30 3A 32 36 31 2E 34 2D 32 36 31 2E 32 34 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "tbuf.c0:261.4-261.24: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
74 62 75 66 2E 63 30 3A 32 36 35 2E 39 2D 32 36 35 2E 32 36 00  # "tbuf.c0:265.9-265.26"
74 62 75 66 2E 63 30 3A 32 36 37 2E 37 2D 32 36 37 2E 32 39 00  # "tbuf.c0:267.7-267.29"
74 62 75 66 2E 63 30 3A 32 36 32 2E 31 32 2D 32 36 32 2E 32 32 00  # "tbuf.c0:262.12-262.22"
74 62 75 66 2E 63 30 3A 32 36 32 2E 34 2D 32 36 32 2E 32 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "tbuf.c0:262.4-262.23: @ensures annotation failed"
74 62 75 66 2E 63 30 3A 32 37 32 2E 36 2D 32 37 32 2E 32 32 00  # "tbuf.c0:272.6-272.22"
74 62 75 66 2E 63 30 3A 32 37 33 2E 36 2D 32 37 33 2E 33 38 00  # "tbuf.c0:273.6-273.38"
74 62 75 66 2E 63 30 3A 32 36 32 2E 31 32 2D 32 36 32 2E 32 32 00  # "tbuf.c0:262.12-262.22"
74 62 75 66 2E 63 30 3A 32 36 32 2E 34 2D 32 36 32 2E 32 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "tbuf.c0:262.4-262.23: @ensures annotation failed"
74 62 75 66 2E 63 30 3A 32 36 32 2E 31 32 2D 32 36 32 2E 32 32 00  # "tbuf.c0:262.12-262.22"
74 62 75 66 2E 63 30 3A 32 36 32 2E 34 2D 32 36 32 2E 32 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "tbuf.c0:262.4-262.23: @ensures annotation failed"
74 62 75 66 2E 63 30 3A 32 38 31 2E 34 2D 32 38 31 2E 32 34 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "tbuf.c0:281.4-281.24: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
74 62 75 66 2E 63 30 3A 32 38 32 2E 31 33 2D 32 38 32 2E 32 33 00  # "tbuf.c0:282.13-282.23"
74 62 75 66 2E 63 30 3A 32 38 32 2E 34 2D 32 38 32 2E 32 34 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "tbuf.c0:282.4-282.24: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
74 62 75 66 2E 63 30 3A 32 38 37 2E 31 31 2D 32 38 37 2E 33 31 00  # "tbuf.c0:287.11-287.31"
74 62 75 66 2E 63 30 3A 32 38 37 2E 33 33 2D 32 38 37 2E 35 32 00  # "tbuf.c0:287.33-287.52"
74 62 75 66 2E 63 30 3A 32 38 39 2E 31 34 2D 32 38 39 2E 33 32 00  # "tbuf.c0:289.14-289.32"
74 62 75 66 2E 63 30 3A 32 38 39 2E 33 36 2D 32 38 39 2E 35 36 00  # "tbuf.c0:289.36-289.56"
74 62 75 66 2E 63 30 3A 32 39 35 2E 31 38 2D 32 39 35 2E 33 33 00  # "tbuf.c0:295.18-295.33"
74 62 75 66 2E 63 30 3A 32 39 35 2E 31 31 2D 32 39 35 2E 33 35 3A 20 40 61 73 73 65 72 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "tbuf.c0:295.11-295.35: @assert annotation failed"
74 62 75 66 2E 63 30 3A 32 39 36 2E 38 2D 32 39 36 2E 32 37 00  # "tbuf.c0:296.8-296.27"
74 62 75 66 2E 63 30 3A 32 38 33 2E 31 32 2D 32 38 33 2E 32 32 00  # "tbuf.c0:283.12-283.22"
74 62 75 66 2E 63 30 3A 32 38 33 2E 34 2D 32 38 33 2E 32 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "tbuf.c0:283.4-283.23: @ensures annotation failed"
74 62 75 66 2E 63 30 3A 32 39 39 2E 38 2D 32 39 39 2E 32 36 00  # "tbuf.c0:299.8-299.26"
74 62 75 66 2E 63 30 3A 32 38 33 2E 31 32 2D 32 38 33 2E 32 32 00  # "tbuf.c0:283.12-283.22"
74 62 75 66 2E 63 30 3A 32 38 33 2E 34 2D 32 38 33 2E 32 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "tbuf.c0:283.4-283.23: @ensures annotation failed"
74 62 75 66 2E 63 30 3A 33 31 31 2E 32 31 2D 33 31 31 2E 33 31 00  # "tbuf.c0:311.21-311.31"
74 62 75 66 2E 63 30 3A 33 31 31 2E 31 34 2D 33 31 31 2E 33 33 3A 20 40 61 73 73 65 72 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "tbuf.c0:311.14-311.33: @assert annotation failed"
74 62 75 66 2E 63 30 3A 32 38 33 2E 31 32 2D 32 38 33 2E 32 32 00  # "tbuf.c0:283.12-283.22"
74 62 75 66 2E 63 30 3A 32 38 33 2E 34 2D 32 38 33 2E 32 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "tbuf.c0:283.4-283.23: @ensures annotation failed"
74 62 75 66 2E 63 30 3A 33 32 30 2E 32 31 2D 33 32 30 2E 33 31 00  # "tbuf.c0:320.21-320.31"
74 62 75 66 2E 63 30 3A 33 32 30 2E 31 34 2D 33 32 30 2E 33 33 3A 20 40 61 73 73 65 72 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "tbuf.c0:320.14-320.33: @assert annotation failed"
74 62 75 66 2E 63 30 3A 32 38 33 2E 31 32 2D 32 38 33 2E 32 32 00  # "tbuf.c0:283.12-283.22"
74 62 75 66 2E 63 30 3A 32 38 33 2E 34 2D 32 38 33 2E 32 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "tbuf.c0:283.4-283.23: @ensures annotation failed"
74 62 75 66 2E 63 30 3A 32 38 33 2E 31 32 2D 32 38 33 2E 32 32 00  # "tbuf.c0:283.12-283.22"
74 62 75 66 2E 63 30 3A 32 38 33 2E 34 2D 32 38 33 2E 32 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "tbuf.c0:283.4-283.23: @ensures annotation failed"
6C 6F 76 61 73 2D 45 30 2E 63 30 3A 33 32 2E 33 38 2D 33 32 2E 35 31 00  # "lovas-E0.c0:32.38-32.51"
6C 6F 76 61 73 2D 45 30 2E 63 30 3A 33 33 2E 32 35 2D 33 33 2E 33 39 00  # "lovas-E0.c0:33.25-33.39"
6C 6F 76 61 73 2D 45 30 2E 63 30 3A 33 35 2E 33 38 2D 33 35 2E 34 39 00  # "lovas-E0.c0:35.38-35.49"
6C 6F 76 61 73 2D 45 30 2E 63 30 3A 33 39 2E 32 31 2D 33 39 2E 33 32 00  # "lovas-E0.c0:39.21-39.32"
6C 6F 76 61 73 2D 45 30 2E 63 30 3A 32 38 2E 34 2D 32 38 2E 34 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "lovas-E0.c0:28.4-28.45: @ensures annotation failed"
6C 6F 76 61 73 2D 45 30 2E 63 30 3A 34 34 2E 31 33 2D 34 34 2E 32 35 00  # "lovas-E0.c0:44.13-44.25"
6C 6F 76 61 73 2D 45 30 2E 63 30 3A 34 34 2E 34 2D 34 34 2E 32 36 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "lovas-E0.c0:44.4-44.26: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
6C 6F 76 61 73 2D 45 30 2E 63 30 3A 34 37 2E 34 34 2D 34 37 2E 37 38 00  # "lovas-E0.c0:47.44-47.78"
6C 6F 76 61 73 2D 45 30 2E 63 30 3A 34 39 2E 37 2D 34 39 2E 34 32 00  # "lovas-E0.c0:49.7-49.42"
6C 6F 76 61 73 2D 45 30 2E 63 30 3A 34 35 2E 31 32 2D 34 35 2E 32 34 00  # "lovas-E0.c0:45.12-45.24"
6C 6F 76 61 73 2D 45 30 2E 63 30 3A 34 35 2E 34 2D 34 35 2E 32 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "lovas-E0.c0:45.4-45.25: @ensures annotation failed"
6C 6F 76 61 73 2D 45 30 2E 63 30 3A 35 33 2E 31 33 2D 35 33 2E 32 33 00  # "lovas-E0.c0:53.13-53.23"
6C 6F 76 61 73 2D 45 30 2E 63 30 3A 35 33 2E 34 2D 35 33 2E 32 34 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "lovas-E0.c0:53.4-53.24: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
6C 6F 76 61 73 2D 45 30 2E 63 30 3A 36 34 2E 39 2D 36 34 2E 34 31 00  # "lovas-E0.c0:64.9-64.41"
6C 6F 76 61 73 2D 45 30 2E 63 30 3A 36 38 2E 31 37 2D 36 38 2E 34 33 00  # "lovas-E0.c0:68.17-68.43"
6C 6F 76 61 73 2D 45 30 2E 63 30 3A 35 34 2E 31 32 2D 35 34 2E 32 32 00  # "lovas-E0.c0:54.12-54.22"
6C 6F 76 61 73 2D 45 30 2E 63 30 3A 35 34 2E 34 2D 35 34 2E 32 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "lovas-E0.c0:54.4-54.23: @ensures annotation failed"
6C 6F 76 61 73 2D 45 30 2E 63 30 3A 37 36 2E 33 34 2D 37 36 2E 34 37 00  # "lovas-E0.c0:76.34-76.47"
45 30 2C 20 74 68 65 20 6D 69 6E 69 6D 61 6C 69 73 74 20 65 64 69 74 6F 72 20 2D 2D 20 5E 58 20 74 6F 20 65 78 69 74 2C 20 5E 4C 20 74 6F 20 72 65 66 72 65 73 68 00  # "E0, the minimalist editor -- ^X to exit, ^L to refresh"
6C 6F 76 61 73 2D 45 30 2E 63 30 3A 38 36 2E 33 34 2D 38 36 2E 34 37 00  # "lovas-E0.c0:86.34-86.47"
6C 6F 76 61 73 2D 45 30 2E 63 30 3A 39 35 2E 32 31 2D 39 35 2E 33 34 00  # "lovas-E0.c0:95.21-95.34"
6C 6F 76 61 73 2D 45 30 2E 63 30 3A 39 39 2E 32 31 2D 39 39 2E 33 34 00  # "lovas-E0.c0:99.21-99.34"
6C 6F 76 61 73 2D 45 30 2E 63 30 3A 31 30 32 2E 32 31 2D 31 30 32 2E 33 32 00  # "lovas-E0.c0:102.21-102.32"
6C 6F 76 61 73 2D 45 30 2E 63 30 3A 31 30 37 2E 31 33 2D 31 30 37 2E 32 35 00  # "lovas-E0.c0:107.13-107.25"
6C 6F 76 61 73 2D 45 30 2E 63 30 3A 31 30 37 2E 34 2D 31 30 37 2E 32 36 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "lovas-E0.c0:107.4-107.26: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
6C 6F 76 61 73 2D 45 30 2E 63 30 3A 31 31 30 2E 34 34 2D 31 31 30 2E 37 33 00  # "lovas-E0.c0:110.44-110.73"
6C 6F 76 61 73 2D 45 30 2E 63 30 3A 31 31 32 2E 31 37 2D 31 31 32 2E 33 30 00  # "lovas-E0.c0:112.17-112.30"
6C 6F 76 61 73 2D 45 30 2E 63 30 3A 31 31 33 2E 36 35 2D 31 31 33 2E 37 38 00  # "lovas-E0.c0:113.65-113.78"
6C 6F 76 61 73 2D 45 30 2E 63 30 3A 31 31 34 2E 31 37 2D 31 31 34 2E 33 30 00  # "lovas-E0.c0:114.17-114.30"
6C 6F 76 61 73 2D 45 30 2E 63 30 3A 31 31 36 2E 34 39 2D 31 31 36 2E 37 38 00  # "lovas-E0.c0:116.49-116.78"
6C 6F 76 61 73 2D 45 30 2E 63 30 3A 31 30 38 2E 31 32 2D 31 30 38 2E 32 34 00  # "lovas-E0.c0:108.12-108.24"
6C 6F 76 61 73 2D 45 30 2E 63 30 3A 31 30 38 2E 34 2D 31 30 38 2E 32 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "lovas-E0.c0:108.4-108.25: @ensures annotation failed"
6C 6F 76 61 73 2D 45 30 2E 63 30 3A 31 32 30 2E 31 33 2D 31 32 30 2E 32 33 00  # "lovas-E0.c0:120.13-120.23"
6C 6F 76 61 73 2D 45 30 2E 63 30 3A 31 32 30 2E 34 2D 31 32 30 2E 32 34 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "lovas-E0.c0:120.4-120.24: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
20 2A 2A 00  # " **"
3C 2E 2E 00  # "<.."
20 3C 2D 3E 20 00  # " <-> "
6C 6F 76 61 73 2D 45 30 2E 63 30 3A 31 34 32 2E 39 2D 31 34 32 2E 33 35 00  # "lovas-E0.c0:142.9-142.35"
20 3C 2D 3E 20 00  # " <-> "
2A 2A 20 00  # "** "
2E 2E 3E 00  # "..>"
6C 6F 76 61 73 2D 45 30 2E 63 30 3A 31 32 31 2E 31 32 2D 31 32 31 2E 32 32 00  # "lovas-E0.c0:121.12-121.22"
6C 6F 76 61 73 2D 45 30 2E 63 30 3A 31 32 31 2E 34 2D 31 32 31 2E 32 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "lovas-E0.c0:121.4-121.23: @ensures annotation failed"
28 6E 6F 6E 65 29 00  # "(none)"
6C 6F 76 61 73 2D 45 30 2E 63 30 3A 31 38 36 2E 31 35 2D 31 38 36 2E 32 35 00  # "lovas-E0.c0:186.15-186.25"
6C 6F 76 61 73 2D 45 30 2E 63 30 3A 31 38 38 2E 35 2D 31 38 38 2E 32 36 00  # "lovas-E0.c0:188.5-188.26"
6C 6F 76 61 73 2D 45 30 2E 63 30 3A 31 38 39 2E 35 2D 31 38 39 2E 32 36 00  # "lovas-E0.c0:189.5-189.26"
6C 6F 76 61 73 2D 45 30 2E 63 30 3A 31 39 33 2E 39 2D 31 39 33 2E 33 30 00  # "lovas-E0.c0:193.9-193.30"
6C 6F 76 61 73 2D 45 30 2E 63 30 3A 31 39 34 2E 39 2D 31 39 34 2E 33 32 00  # "lovas-E0.c0:194.9-194.32"
6C 6F 76 61 73 2D 45 30 2E 63 30 3A 31 39 38 2E 33 38 2D 31 39 38 2E 35 39 00  # "lovas-E0.c0:198.38-198.59"
6C 6F 76 61 73 2D 45 30 2E 63 30 3A 31 39 39 2E 33 38 2D 31 39 39 2E 35 39 00  # "lovas-E0.c0:199.38-199.59"
6C 6F 76 61 73 2D 45 30 2E 63 30 3A 32 30 31 2E 34 34 2D 32 30 31 2E 35 38 00  # "lovas-E0.c0:201.44-201.58"
6C 6F 76 61 73 2D 45 30 2E 63 30 3A 32 30 32 2E 34 30 2D 32 30 32 2E 35 36 00  # "lovas-E0.c0:202.40-202.56"
6C 6F 76 61 73 2D 45 30 2E 63 30 3A 32 30 33 2E 34 30 2D 32 30 33 2E 35 35 00  # "lovas-E0.c0:203.40-203.55"
6C 6F 76 61 73 2D 45 30 2E 63 30 3A 32 30 34 2E 34 30 2D 32 30 34 2E 36 30 00  # "lovas-E0.c0:204.40-204.60"
6C 6F 76 61 73 2D 45 30 2E 63 30 3A 32 30 35 2E 35 35 2D 32 30 35 2E 36 36 00  # "lovas-E0.c0:205.55-205.66"
6C 6F 76 61 73 2D 45 30 2E 63 30 3A 32 30 35 2E 34 30 2D 32 30 35 2E 36 37 00  # "lovas-E0.c0:205.40-205.67"
74 68 61 6E 6B 73 20 66 6F 72 20 66 6C 79 69 6E 67 20 45 20 21 08 08 00  # "thanks for flying E !\b\b"

00 44             # function count
# function_pool

#<main>
00 00             # number of arguments = 0
00 0F             # number of local variables = 15
01 B6             # code length = 438 bytes
14 3F 3C # aldc 16188      # s[16188] = "(none)"
36 00    # vstore 0        # _caller = "(none)";
B7 00 1F # invokenative 31 # c_initscr()
36 02    # vstore 2        # mainwin = c_initscr();
B7 00 20 # invokenative 32 # c_cbreak()
57       # pop             # (ignore result)
B7 00 21 # invokenative 33 # c_noecho()
57       # pop             # (ignore result)
15 02    # vload 2         # mainwin
10 01    # bipush 1        # true
B7 00 22 # invokenative 34 # c_keypad(mainwin, true)
57       # pop             # (ignore result)
10 00    # bipush 0        # 0
B7 00 23 # invokenative 35 # c_curs_set(0)
36 03    # vstore 3        # vis = c_curs_set(0);
15 02    # vload 2         # mainwin
B7 00 14 # invokenative 20 # cc_getmaxx(mainwin)
36 04    # vstore 4        # ncols = cc_getmaxx(mainwin);
15 02    # vload 2         # mainwin
B7 00 24 # invokenative 36 # cc_getmaxy(mainwin)
36 05    # vstore 5        # nlines = cc_getmaxy(mainwin);
15 02    # vload 2         # mainwin
B7 00 13 # invokenative 19 # cc_getbegx(mainwin)
36 06    # vstore 6        # begx = cc_getbegx(mainwin);
15 02    # vload 2         # mainwin
B7 00 25 # invokenative 37 # cc_getbegy(mainwin)
36 07    # vstore 7        # begy = cc_getbegy(mainwin);
15 02    # vload 2         # mainwin
15 05    # vload 5         # nlines
10 03    # bipush 3        # 3
64       # isub            # (nlines - 3)
15 04    # vload 4         # ncols
15 07    # vload 7         # begy
10 01    # bipush 1        # 1
60       # iadd            # (begy + 1)
15 06    # vload 6         # begx
B7 00 26 # invokenative 38 # c_subwin(mainwin, (nlines - 3), ncols, (begy + 1), begx)
36 08    # vstore 8        # canvas = c_subwin(mainwin, (nlines - 3), ncols, (begy + 1), begx);
15 02    # vload 2         # mainwin
10 01    # bipush 1        # 1
15 04    # vload 4         # ncols
15 07    # vload 7         # begy
15 06    # vload 6         # begx
B7 00 26 # invokenative 38 # c_subwin(mainwin, 1, ncols, begy, begx)
36 09    # vstore 9        # topbar = c_subwin(mainwin, 1, ncols, begy, begx);
15 02    # vload 2         # mainwin
10 01    # bipush 1        # 1
15 04    # vload 4         # ncols
15 05    # vload 5         # nlines
10 02    # bipush 2        # 2
64       # isub            # (nlines - 2)
15 06    # vload 6         # begx
B7 00 26 # invokenative 38 # c_subwin(mainwin, 1, ncols, (nlines - 2), begx)
36 0A    # vstore 10       # botbar = c_subwin(mainwin, 1, ncols, (nlines - 2), begx);
15 02    # vload 2         # mainwin
10 01    # bipush 1        # 1
15 04    # vload 4         # ncols
15 05    # vload 5         # nlines
10 01    # bipush 1        # 1
64       # isub            # (nlines - 1)
15 06    # vload 6         # begx
B7 00 26 # invokenative 38 # c_subwin(mainwin, 1, ncols, (nlines - 1), begx)
36 0B    # vstore 11       # minibuf = c_subwin(mainwin, 1, ncols, (nlines - 1), begx);
14 3F 43 # aldc 16195      # s[16195] = "lovas-E0.c0:186.15-186.25"
B8 00 32 # invokestatic 50 # tbuf_new("lovas-E0.c0:186.15-186.25")
36 0C    # vstore 12       # B = tbuf_new("lovas-E0.c0:186.15-186.25");
15 09    # vload 9         # topbar
14 3F 5D # aldc 16221      # s[16221] = "lovas-E0.c0:188.5-188.26"
B8 00 3F # invokestatic 63 # render_topbar(topbar, "lovas-E0.c0:188.5-188.26")
57       # pop             # (ignore result)
15 0A    # vload 10        # botbar
14 3F 76 # aldc 16246      # s[16246] = "lovas-E0.c0:189.5-189.26"
B8 00 40 # invokestatic 64 # render_botbar(botbar, "lovas-E0.c0:189.5-189.26")
57       # pop             # (ignore result)
10 01    # bipush 1        # true
36 0D    # vstore 13       # go = true;
# <739:loop>
A7 00 03 # goto +3         # goto <740:body>
# <740:body>
15 0D    # vload 13        # go
10 01    # bipush 1        # true
9F 00 06 # if_cmpeq +6     # if (go == true) goto <742:then>
A7 00 EB # goto +235       # goto <743:else>
# <742:then>
15 0C    # vload 12        # B
15 08    # vload 8         # canvas
14 3F 8F # aldc 16271      # s[16271] = "lovas-E0.c0:193.9-193.30"
B8 00 3E # invokestatic 62 # render_buf(B, canvas, "lovas-E0.c0:193.9-193.30")
57       # pop             # (ignore result)
15 0C    # vload 12        # B
15 0B    # vload 11        # minibuf
14 3F A8 # aldc 16296      # s[16296] = "lovas-E0.c0:194.9-194.32"
B8 00 43 # invokestatic 67 # vrender_buf(B, minibuf, "lovas-E0.c0:194.9-194.32")
57       # pop             # (ignore result)
B7 00 27 # invokenative 39 # c_getch()
36 0E    # vstore 14       # c = c_getch();
15 0E    # vload 14        # c
10 18    # bipush 24       # 24
9F 00 06 # if_cmpeq +6     # if (c == 24) goto <745:then>
A7 00 0A # goto +10        # goto <746:else>
# <745:then>
10 00    # bipush 0        # false
36 0D    # vstore 13       # go = false;
A7 00 BC # goto +188       # goto <747:endif>
# <746:else>
15 0E    # vload 14        # c
10 0C    # bipush 12       # 12
9F 00 06 # if_cmpeq +6     # if (c == 12) goto <748:then>
A7 00 24 # goto +36        # goto <749:else>
# <748:then>
15 02    # vload 2         # mainwin
B7 00 1C # invokenative 28 # c_wclear(mainwin)
57       # pop             # (ignore result)
15 09    # vload 9         # topbar
14 3F C1 # aldc 16321      # s[16321] = "lovas-E0.c0:198.38-198.59"
B8 00 3F # invokestatic 63 # render_topbar(topbar, "lovas-E0.c0:198.38-198.59")
57       # pop             # (ignore result)
15 0A    # vload 10        # botbar
14 3F DB # aldc 16347      # s[16347] = "lovas-E0.c0:199.38-199.59"
B8 00 40 # invokestatic 64 # render_botbar(botbar, "lovas-E0.c0:199.38-199.59")
57       # pop             # (ignore result)
15 02    # vload 2         # mainwin
B7 00 12 # invokenative 18 # c_wrefresh(mainwin)
57       # pop             # (ignore result)
A7 00 91 # goto +145       # goto <750:endif>
# <749:else>
15 0E    # vload 14        # c
B7 00 28 # invokenative 40 # cc_key_is_backspace(c)
10 01    # bipush 1        # true
9F 00 06 # if_cmpeq +6     # if (cc_key_is_backspace(c) == true) goto <751:then>
A7 00 0F # goto +15        # goto <752:else>
# <751:then>
15 0C    # vload 12        # B
14 3F F5 # aldc 16373      # s[16373] = "lovas-E0.c0:201.44-201.58"
B8 00 37 # invokestatic 55 # tbuf_delete(B, "lovas-E0.c0:201.44-201.58")
57       # pop             # (ignore result)
A7 00 78 # goto +120       # goto <753:endif>
# <752:else>
15 0E    # vload 14        # c
B7 00 29 # invokenative 41 # cc_key_is_left(c)
10 01    # bipush 1        # true
9F 00 06 # if_cmpeq +6     # if (cc_key_is_left(c) == true) goto <754:then>
A7 00 0F # goto +15        # goto <755:else>
# <754:then>
15 0C    # vload 12        # B
14 40 0F # aldc 16399      # s[16399] = "lovas-E0.c0:202.40-202.56"
B8 00 35 # invokestatic 53 # tbuf_backward(B, "lovas-E0.c0:202.40-202.56")
57       # pop             # (ignore result)
A7 00 5F # goto +95        # goto <756:endif>
# <755:else>
15 0E    # vload 14        # c
B7 00 2A # invokenative 42 # cc_key_is_right(c)
10 01    # bipush 1        # true
9F 00 06 # if_cmpeq +6     # if (cc_key_is_right(c) == true) goto <757:then>
A7 00 0F # goto +15        # goto <758:else>
# <757:then>
15 0C    # vload 12        # B
14 40 29 # aldc 16425      # s[16425] = "lovas-E0.c0:203.40-203.55"
B8 00 34 # invokestatic 52 # tbuf_forward(B, "lovas-E0.c0:203.40-203.55")
57       # pop             # (ignore result)
A7 00 46 # goto +70        # goto <759:endif>
# <758:else>
15 0E    # vload 14        # c
B7 00 2B # invokenative 43 # cc_key_is_enter(c)
10 01    # bipush 1        # true
9F 00 06 # if_cmpeq +6     # if (cc_key_is_enter(c) == true) goto <760:then>
A7 00 11 # goto +17        # goto <761:else>
# <760:then>
15 0C    # vload 12        # B
10 0A    # bipush 10       # '\n'
14 40 43 # aldc 16451      # s[16451] = "lovas-E0.c0:204.40-204.60"
B8 00 36 # invokestatic 54 # tbuf_insert(B, '\n', "lovas-E0.c0:204.40-204.60")
57       # pop             # (ignore result)
A7 00 2B # goto +43        # goto <762:endif>
# <761:else>
10 00    # bipush 0        # 0
15 0E    # vload 14        # c
A4 00 06 # if_icmple +6    # if (0 <= c) goto <766:and>
A7 00 21 # goto +33        # goto <764:else>
# <766:and>
15 0E    # vload 14        # c
10 7F    # bipush 127      # 127
A4 00 06 # if_icmple +6    # if (c <= 127) goto <763:then>
A7 00 17 # goto +23        # goto <764:else>
# <763:then>
15 0C    # vload 12        # B
15 0E    # vload 14        # c
14 40 5D # aldc 16477      # s[16477] = "lovas-E0.c0:205.55-205.66"
B8 00 0A # invokestatic 10 # char_chr__1(c, "lovas-E0.c0:205.55-205.66")
14 40 77 # aldc 16503      # s[16503] = "lovas-E0.c0:205.40-205.67"
B8 00 36 # invokestatic 54 # tbuf_insert(B, char_chr__1(c, "lovas-E0.c0:205.55-205.66"), "lovas-E0.c0:205.40-205.67")
57       # pop             # (ignore result)
A7 00 03 # goto +3         # goto <765:endif>
# <764:else>
# <765:endif>
# <762:endif>
# <759:endif>
# <756:endif>
# <753:endif>
# <750:endif>
# <747:endif>
A7 00 06 # goto +6         # goto <744:endif>
# <743:else>
A7 00 06 # goto +6         # break
# <744:endif>
A7 FF 08 # goto -248       # goto <739:loop>
# <741:exit>
15 03    # vload 3         # vis
B7 00 23 # invokenative 35 # c_curs_set(vis)
57       # pop             # (ignore result)
B7 00 2C # invokenative 44 # c_endwin()
57       # pop             # (ignore result)
14 40 91 # aldc 16529      # s[16529] = "thanks for flying E !\b\b"
B7 00 2D # invokenative 45 # print("thanks for flying E !\b\b")
57       # pop             # (ignore result)
10 00    # bipush 0        # 0
36 01    # vstore 1        # _result = 0;
15 01    # vload 1         # _result
B0       # return          # 


#<string_charat__1>
00 03             # number of arguments = 3
00 04             # number of local variables = 4
00 3E             # code length = 62 bytes
10 00    # bipush 0        # 0
15 01    # vload 1         # idx
A4 00 06 # if_icmple +6    # if (0 <= idx) goto <00:cond_true>
A7 00 1A # goto +26        # goto <01:cond_false>
# <00:cond_true>
15 01    # vload 1         # idx
15 00    # vload 0         # s
B7 00 00 # invokenative 0  # string_length(s)
A1 00 06 # if_icmplt +6    # if (idx < string_length(s)) goto <03:cond_true>
A7 00 08 # goto +8         # goto <04:cond_false>
# <03:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <05:cond_end>
# <04:cond_false>
10 00    # bipush 0        # false
# <05:cond_end>
A7 00 05 # goto +5         # goto <02:cond_end>
# <01:cond_false>
10 00    # bipush 0        # false
# <02:cond_end>
14 00 00 # aldc 0          # s[0] = "/afs/andrew/course/15/122/lib/string.h0:19.6-19.50: @requires annotation failed\n"
15 02    # vload 2         # _caller
14 00 51 # aldc 81         # s[81] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("/afs/andrew/course/15/122/lib/string.h0:19.6-19.50: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert((0 <= idx) && (idx < string_length(s))) [failure message on stack]
15 00    # vload 0         # s
15 01    # vload 1         # idx
B7 00 02 # invokenative 2  # string_charat(s, idx)
36 03    # vstore 3        # _result = string_charat(s, idx);
15 03    # vload 3         # _result
B0       # return          # 


#<string_join__1>
00 03             # number of arguments = 3
00 04             # number of local variables = 4
00 2D             # code length = 45 bytes
15 00    # vload 0         # a
15 01    # vload 1         # b
B7 00 01 # invokenative 1  # string_join(a, b)
36 03    # vstore 3        # _result = string_join(a, b);
15 03    # vload 3         # _result
B7 00 00 # invokenative 0  # string_length(_result)
15 00    # vload 0         # a
B7 00 00 # invokenative 0  # string_length(a)
15 01    # vload 1         # b
B7 00 00 # invokenative 0  # string_length(b)
60       # iadd            # (string_length(a) + string_length(b))
9F 00 06 # if_cmpeq +6     # if (string_length(_result) == (string_length(a) + string_length(b))) goto <06:cond_true>
A7 00 08 # goto +8         # goto <07:cond_false>
# <06:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <08:cond_end>
# <07:cond_false>
10 00    # bipush 0        # false
# <08:cond_end>
14 00 63 # aldc 99         # s[99] = "/afs/andrew/course/15/122/lib/string.h0:23.6-24.55: @ensures annotation failed"
CF       # assert          # assert(string_length(_result) == (string_length(a) + string_length(b))) [failure message on stack]
15 03    # vload 3         # _result
B0       # return          # 


#<string_sub__1>
00 04             # number of arguments = 4
00 05             # number of local variables = 5
00 65             # code length = 101 bytes
10 00    # bipush 0        # 0
15 01    # vload 1         # start
A4 00 06 # if_icmple +6    # if (0 <= start) goto <12:and>
A7 00 24 # goto +36        # goto <10:cond_false>
# <12:and>
15 01    # vload 1         # start
15 02    # vload 2         # end
A4 00 06 # if_icmple +6    # if (start <= end) goto <09:cond_true>
A7 00 1A # goto +26        # goto <10:cond_false>
# <09:cond_true>
15 02    # vload 2         # end
15 00    # vload 0         # a
B7 00 00 # invokenative 0  # string_length(a)
A4 00 06 # if_icmple +6    # if (end <= string_length(a)) goto <13:cond_true>
A7 00 08 # goto +8         # goto <14:cond_false>
# <13:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <15:cond_end>
# <14:cond_false>
10 00    # bipush 0        # false
# <15:cond_end>
A7 00 05 # goto +5         # goto <11:cond_end>
# <10:cond_false>
10 00    # bipush 0        # false
# <11:cond_end>
14 00 B2 # aldc 178        # s[178] = "/afs/andrew/course/15/122/lib/string.h0:31.6-31.69: @requires annotation failed\n"
15 03    # vload 3         # _caller
14 01 03 # aldc 259        # s[259] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("/afs/andrew/course/15/122/lib/string.h0:31.6-31.69: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert(((0 <= start) && (start <= end)) && (end <= string_length(a))) [failure message on stack]
15 00    # vload 0         # a
15 01    # vload 1         # start
15 02    # vload 2         # end
B7 00 03 # invokenative 3  # string_sub(a, start, end)
36 04    # vstore 4        # _result = string_sub(a, start, end);
15 04    # vload 4         # _result
B7 00 00 # invokenative 0  # string_length(_result)
15 02    # vload 2         # end
15 01    # vload 1         # start
64       # isub            # (end - start)
9F 00 06 # if_cmpeq +6     # if (string_length(_result) == (end - start)) goto <16:cond_true>
A7 00 08 # goto +8         # goto <17:cond_false>
# <16:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <18:cond_end>
# <17:cond_false>
10 00    # bipush 0        # false
# <18:cond_end>
14 01 15 # aldc 277        # s[277] = "/afs/andrew/course/15/122/lib/string.h0:32.6-32.52: @ensures annotation failed"
CF       # assert          # assert(string_length(_result) == (end - start)) [failure message on stack]
15 04    # vload 4         # _result
B0       # return          # 


#<string_compare__1>
00 03             # number of arguments = 3
00 05             # number of local variables = 5
00 30             # code length = 48 bytes
15 00    # vload 0         # a
15 01    # vload 1         # b
B7 00 04 # invokenative 4  # string_compare(a, b)
36 03    # vstore 3        # _result = string_compare(a, b);
10 FF    # bipush -1       # -1
15 03    # vload 3         # _result
A4 00 06 # if_icmple +6    # if (-(1) <= _result) goto <19:cond_true>
A7 00 17 # goto +23        # goto <20:cond_false>
# <19:cond_true>
15 03    # vload 3         # _result
10 01    # bipush 1        # 1
A4 00 06 # if_icmple +6    # if (_result <= 1) goto <22:cond_true>
A7 00 08 # goto +8         # goto <23:cond_false>
# <22:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <24:cond_end>
# <23:cond_false>
10 00    # bipush 0        # false
# <24:cond_end>
A7 00 05 # goto +5         # goto <21:cond_end>
# <20:cond_false>
10 00    # bipush 0        # false
# <21:cond_end>
14 01 64 # aldc 356        # s[356] = "/afs/andrew/course/15/122/lib/string.h0:37.6-37.44: @ensures annotation failed"
CF       # assert          # assert((-(1) <= _result) && (_result <= 1)) [failure message on stack]
15 03    # vload 3         # _result
B0       # return          # 


#<string_fromchar__1>
00 02             # number of arguments = 2
00 05             # number of local variables = 5
00 5F             # code length = 95 bytes
15 00    # vload 0         # c
10 00    # bipush 0        # '\000'
A0 00 06 # if_cmpne +6     # if (c != '\0') goto <25:cond_true>
A7 00 08 # goto +8         # goto <26:cond_false>
# <25:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <27:cond_end>
# <26:cond_false>
10 00    # bipush 0        # false
# <27:cond_end>
14 01 B3 # aldc 435        # s[435] = "/afs/andrew/course/15/122/lib/string.h0:43.6-43.25: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 02 04 # aldc 516        # s[516] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("/afs/andrew/course/15/122/lib/string.h0:43.6-43.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert(c != '\0') [failure message on stack]
15 00    # vload 0         # c
B7 00 05 # invokenative 5  # string_fromchar(c)
36 02    # vstore 2        # _result = string_fromchar(c);
15 02    # vload 2         # _result
B7 00 00 # invokenative 0  # string_length(_result)
10 01    # bipush 1        # 1
9F 00 06 # if_cmpeq +6     # if (string_length(_result) == 1) goto <28:cond_true>
A7 00 08 # goto +8         # goto <29:cond_false>
# <28:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <30:cond_end>
# <29:cond_false>
10 00    # bipush 0        # false
# <30:cond_end>
14 02 16 # aldc 534        # s[534] = "/afs/andrew/course/15/122/lib/string.h0:44.6-44.42: @ensures annotation failed"
CF       # assert          # assert(string_length(_result) == 1) [failure message on stack]
15 02    # vload 2         # _result
10 00    # bipush 0        # 0
14 02 65 # aldc 613        # s[613] = "/afs/andrew/course/15/122/lib/string.h0:45.14-45.39"
B8 00 01 # invokestatic 1  # string_charat__1(_result, 0, "/afs/andrew/course/15/122/lib/string.h0:45.14-45.39")
15 00    # vload 0         # c
9F 00 06 # if_cmpeq +6     # if (string_charat__1(_result, 0, "/afs/andrew/course/15/122/lib/string.h0:45.14-45.39") == c) goto <31:cond_true>
A7 00 08 # goto +8         # goto <32:cond_false>
# <31:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <33:cond_end>
# <32:cond_false>
10 00    # bipush 0        # false
# <33:cond_end>
14 02 99 # aldc 665        # s[665] = "/afs/andrew/course/15/122/lib/string.h0:45.6-45.45: @ensures annotation failed"
CF       # assert          # assert(string_charat__1(_result, 0, "/afs/andrew/course/15/122/lib/string.h0:45.14-45.39") == c) [failure message on stack]
15 02    # vload 2         # _result
B0       # return          # 


#<string_terminated__1>
00 03             # number of arguments = 3
00 05             # number of local variables = 5
00 3C             # code length = 60 bytes
10 00    # bipush 0        # 0
15 01    # vload 1         # n
A4 00 06 # if_icmple +6    # if (0 <= n) goto <34:cond_true>
A7 00 18 # goto +24        # goto <35:cond_false>
# <34:cond_true>
15 01    # vload 1         # n
15 00    # vload 0         # A
BE       # arraylength     # \length(A)
A4 00 06 # if_icmple +6    # if (n <= \length(A)) goto <37:cond_true>
A7 00 08 # goto +8         # goto <38:cond_false>
# <37:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <39:cond_end>
# <38:cond_false>
10 00    # bipush 0        # false
# <39:cond_end>
A7 00 05 # goto +5         # goto <36:cond_end>
# <35:cond_false>
10 00    # bipush 0        # false
# <36:cond_end>
14 02 E8 # aldc 744        # s[744] = "/afs/andrew/course/15/122/lib/string.h0:52.6-52.41: @requires annotation failed\n"
15 02    # vload 2         # _caller
14 03 39 # aldc 825        # s[825] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("/afs/andrew/course/15/122/lib/string.h0:52.6-52.41: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert((0 <= n) && (n <= \length(A))) [failure message on stack]
15 00    # vload 0         # A
15 01    # vload 1         # n
B7 00 06 # invokenative 6  # string_terminated(A, n)
36 03    # vstore 3        # _result = string_terminated(A, n);
15 03    # vload 3         # _result
B0       # return          # 


#<string_to_chararray__1>
00 02             # number of arguments = 2
00 05             # number of local variables = 5
00 3A             # code length = 58 bytes
15 00    # vload 0         # s
B7 00 07 # invokenative 7  # string_to_chararray(s)
36 02    # vstore 2        # _result = string_to_chararray(s);
15 02    # vload 2         # _result
BE       # arraylength     # \length(_result)
15 00    # vload 0         # s
B7 00 00 # invokenative 0  # string_length(s)
10 01    # bipush 1        # 1
60       # iadd            # (string_length(s) + 1)
A2 00 06 # if_icmpge +6    # if (\length(_result) >= (string_length(s) + 1)) goto <40:cond_true>
A7 00 08 # goto +8         # goto <41:cond_false>
# <40:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <42:cond_end>
# <41:cond_false>
10 00    # bipush 0        # false
# <42:cond_end>
14 03 4B # aldc 843        # s[843] = "/afs/andrew/course/15/122/lib/string.h0:56.6-56.55: @ensures annotation failed"
CF       # assert          # assert(\length(_result) >= (string_length(s) + 1)) [failure message on stack]
15 02    # vload 2         # _result
15 00    # vload 0         # s
B7 00 00 # invokenative 0  # string_length(s)
10 01    # bipush 1        # 1
60       # iadd            # (string_length(s) + 1)
14 03 9A # aldc 922        # s[922] = "/afs/andrew/course/15/122/lib/string.h0:57.14-57.62"
B8 00 06 # invokestatic 6  # string_terminated__1(_result, (string_length(s) + 1), "/afs/andrew/course/15/122/lib/string.h0:57.14-57.62")
14 03 CE # aldc 974        # s[974] = "/afs/andrew/course/15/122/lib/string.h0:57.6-57.63: @ensures annotation failed"
CF       # assert          # assertstring_terminated__1(_result, (string_length(s) + 1), "/afs/andrew/course/15/122/lib/string.h0:57.14-57.62") [failure message on stack]
15 02    # vload 2         # _result
B0       # return          # 


#<string_from_chararray__1>
00 02             # number of arguments = 2
00 05             # number of local variables = 5
00 40             # code length = 64 bytes
15 00    # vload 0         # A
15 00    # vload 0         # A
BE       # arraylength     # \length(A)
14 04 1D # aldc 1053       # s[1053] = "/afs/andrew/course/15/122/lib/string.h0:62.15-62.47"
B8 00 06 # invokestatic 6  # string_terminated__1(A, \length(A), "/afs/andrew/course/15/122/lib/string.h0:62.15-62.47")
14 04 51 # aldc 1105       # s[1105] = "/afs/andrew/course/15/122/lib/string.h0:62.6-62.48: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 04 A2 # aldc 1186       # s[1186] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("/afs/andrew/course/15/122/lib/string.h0:62.6-62.48: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assertstring_terminated__1(A, \length(A), "/afs/andrew/course/15/122/lib/string.h0:62.15-62.47") [failure message on stack]
15 00    # vload 0         # A
B7 00 08 # invokenative 8  # string_from_chararray(A)
36 02    # vstore 2        # _result = string_from_chararray(A);
15 02    # vload 2         # _result
B7 00 00 # invokenative 0  # string_length(_result)
10 01    # bipush 1        # 1
60       # iadd            # (string_length(_result) + 1)
15 00    # vload 0         # A
BE       # arraylength     # \length(A)
A4 00 06 # if_icmple +6    # if ((string_length(_result) + 1) <= \length(A)) goto <43:cond_true>
A7 00 08 # goto +8         # goto <44:cond_false>
# <43:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <45:cond_end>
# <44:cond_false>
10 00    # bipush 0        # false
# <45:cond_end>
14 04 B4 # aldc 1204       # s[1204] = "/afs/andrew/course/15/122/lib/string.h0:63.6-63.55: @ensures annotation failed"
CF       # assert          # assert((string_length(_result) + 1) <= \length(A)) [failure message on stack]
15 02    # vload 2         # _result
B0       # return          # 


#<char_ord__1>
00 02             # number of arguments = 2
00 05             # number of local variables = 5
00 2E             # code length = 46 bytes
15 00    # vload 0         # c
B7 00 09 # invokenative 9  # char_ord(c)
36 02    # vstore 2        # _result = char_ord(c);
10 00    # bipush 0        # 0
15 02    # vload 2         # _result
A4 00 06 # if_icmple +6    # if (0 <= _result) goto <46:cond_true>
A7 00 17 # goto +23        # goto <47:cond_false>
# <46:cond_true>
15 02    # vload 2         # _result
10 7F    # bipush 127      # 127
A4 00 06 # if_icmple +6    # if (_result <= 127) goto <49:cond_true>
A7 00 08 # goto +8         # goto <50:cond_false>
# <49:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <51:cond_end>
# <50:cond_false>
10 00    # bipush 0        # false
# <51:cond_end>
A7 00 05 # goto +5         # goto <48:cond_end>
# <47:cond_false>
10 00    # bipush 0        # false
# <48:cond_end>
14 05 03 # aldc 1283       # s[1283] = "/afs/andrew/course/15/122/lib/string.h0:67.6-67.45: @ensures annotation failed"
CF       # assert          # assert((0 <= _result) && (_result <= 127)) [failure message on stack]
15 02    # vload 2         # _result
B0       # return          # 


#<char_chr__1>
00 02             # number of arguments = 2
00 05             # number of local variables = 5
00 39             # code length = 57 bytes
10 00    # bipush 0        # 0
15 00    # vload 0         # n
A4 00 06 # if_icmple +6    # if (0 <= n) goto <52:cond_true>
A7 00 17 # goto +23        # goto <53:cond_false>
# <52:cond_true>
15 00    # vload 0         # n
10 7F    # bipush 127      # 127
A4 00 06 # if_icmple +6    # if (n <= 127) goto <55:cond_true>
A7 00 08 # goto +8         # goto <56:cond_false>
# <55:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <57:cond_end>
# <56:cond_false>
10 00    # bipush 0        # false
# <57:cond_end>
A7 00 05 # goto +5         # goto <54:cond_end>
# <53:cond_false>
10 00    # bipush 0        # false
# <54:cond_end>
14 05 52 # aldc 1362       # s[1362] = "/afs/andrew/course/15/122/lib/string.h0:69.6-69.34: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 05 A3 # aldc 1443       # s[1443] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("/afs/andrew/course/15/122/lib/string.h0:69.6-69.34: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert((0 <= n) && (n <= 127)) [failure message on stack]
15 00    # vload 0         # n
B7 00 0A # invokenative 10 # char_chr(n)
36 02    # vstore 2        # _result = char_chr(n);
15 02    # vload 2         # _result
B0       # return          # 


#<is_gapbuf>
00 02             # number of arguments = 2
00 07             # number of local variables = 7
00 C5             # code length = 197 bytes
15 00    # vload 0         # G
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (G != NULL) goto <64:cond_true>
A7 00 08 # goto +8         # goto <65:cond_false>
# <64:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <66:cond_end>
# <65:cond_false>
10 00    # bipush 0        # false
# <66:cond_end>
36 03    # vstore 3        # test_NULL = (G != NULL);
15 03    # vload 3         # test_NULL
10 01    # bipush 1        # true
9F 00 06 # if_cmpeq +6     # if (test_NULL == true) goto <67:then>
A7 00 A5 # goto +165       # goto <68:else>
# <67:then>
15 00    # vload 0         # G
62 00    # aaddf 0         # &G->limit
2E       # imload          # G->limit
10 00    # bipush 0        # 0
A3 00 06 # if_icmpgt +6    # if (G->limit > 0) goto <70:cond_true>
A7 00 08 # goto +8         # goto <71:cond_false>
# <70:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <72:cond_end>
# <71:cond_false>
10 00    # bipush 0        # false
# <72:cond_end>
36 04    # vstore 4        # lim = (G->limit > 0);
15 00    # vload 0         # G
62 10    # aaddf 16        # &G->gap_start
2E       # imload          # G->gap_start
10 00    # bipush 0        # 0
A2 00 06 # if_icmpge +6    # if (G->gap_start >= 0) goto <73:cond_true>
A7 00 1D # goto +29        # goto <74:cond_false>
# <73:cond_true>
15 00    # vload 0         # G
62 10    # aaddf 16        # &G->gap_start
2E       # imload          # G->gap_start
15 00    # vload 0         # G
62 14    # aaddf 20        # &G->gap_end
2E       # imload          # G->gap_end
A4 00 06 # if_icmple +6    # if (G->gap_start <= G->gap_end) goto <76:cond_true>
A7 00 08 # goto +8         # goto <77:cond_false>
# <76:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <78:cond_end>
# <77:cond_false>
10 00    # bipush 0        # false
# <78:cond_end>
A7 00 05 # goto +5         # goto <75:cond_end>
# <74:cond_false>
10 00    # bipush 0        # false
# <75:cond_end>
36 05    # vstore 5        # start = ((G->gap_start >= 0) && (G->gap_start <= G->gap_end));
15 00    # vload 0         # G
62 10    # aaddf 16        # &G->gap_start
2E       # imload          # G->gap_start
15 00    # vload 0         # G
62 14    # aaddf 20        # &G->gap_end
2E       # imload          # G->gap_end
A4 00 06 # if_icmple +6    # if (G->gap_start <= G->gap_end) goto <79:cond_true>
A7 00 1D # goto +29        # goto <80:cond_false>
# <79:cond_true>
15 00    # vload 0         # G
62 14    # aaddf 20        # &G->gap_end
2E       # imload          # G->gap_end
15 00    # vload 0         # G
62 00    # aaddf 0         # &G->limit
2E       # imload          # G->limit
A4 00 06 # if_icmple +6    # if (G->gap_end <= G->limit) goto <82:cond_true>
A7 00 08 # goto +8         # goto <83:cond_false>
# <82:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <84:cond_end>
# <83:cond_false>
10 00    # bipush 0        # false
# <84:cond_end>
A7 00 05 # goto +5         # goto <81:cond_end>
# <80:cond_false>
10 00    # bipush 0        # false
# <81:cond_end>
36 06    # vstore 6        # end = ((G->gap_start <= G->gap_end) && (G->gap_end <= G->limit));
15 04    # vload 4         # lim
10 01    # bipush 1        # true
9F 00 06 # if_cmpeq +6     # if (lim == true) goto <89:and>
A7 00 22 # goto +34        # goto <86:cond_false>
# <89:and>
15 05    # vload 5         # start
10 01    # bipush 1        # true
9F 00 06 # if_cmpeq +6     # if (start == true) goto <88:and>
A7 00 18 # goto +24        # goto <86:cond_false>
# <88:and>
15 00    # vload 0         # G
14 06 2A # aldc 1578       # s[1578] = "gapbuf.c0:57.31-57.51"
B8 00 15 # invokestatic 21 # buf_is_exp_length(G, "gapbuf.c0:57.31-57.51")
10 01    # bipush 1        # true
9F 00 06 # if_cmpeq +6     # if (buf_is_exp_length(G, "gapbuf.c0:57.31-57.51") == true) goto <85:cond_true>
A7 00 08 # goto +8         # goto <86:cond_false>
# <85:cond_true>
15 06    # vload 6         # end
A7 00 05 # goto +5         # goto <87:cond_end>
# <86:cond_false>
10 00    # bipush 0        # false
# <87:cond_end>
36 02    # vstore 2        # _result = (((lim && start) && buf_is_exp_length(G, "gapbuf.c0:57.31-57.51")) && end);
15 02    # vload 2         # _result
B0       # return          # 
A7 00 0A # goto +10        # goto <69:endif>
# <68:else>
10 00    # bipush 0        # false
36 02    # vstore 2        # _result = false;
15 02    # vload 2         # _result
B0       # return          # 
# <69:endif>


#<gapbuf_empty>
00 02             # number of arguments = 2
00 07             # number of local variables = 7
00 64             # code length = 100 bytes
15 00    # vload 0         # G
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (G != NULL) goto <90:cond_true>
A7 00 08 # goto +8         # goto <91:cond_false>
# <90:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <92:cond_end>
# <91:cond_false>
10 00    # bipush 0        # false
# <92:cond_end>
14 06 40 # aldc 1600       # s[1600] = "gapbuf.c0:64.4-64.23: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 06 73 # aldc 1651       # s[1651] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("gapbuf.c0:64.4-64.23: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert(G != NULL) [failure message on stack]
15 00    # vload 0         # G
14 06 85 # aldc 1669       # s[1669] = "gapbuf.c0:65.13-65.25"
B8 00 0B # invokestatic 11 # is_gapbuf(G, "gapbuf.c0:65.13-65.25")
14 06 9B # aldc 1691       # s[1691] = "gapbuf.c0:65.4-65.26: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 06 CE # aldc 1742       # s[1742] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("gapbuf.c0:65.4-65.26: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assertis_gapbuf(G, "gapbuf.c0:65.13-65.25") [failure message on stack]
15 00    # vload 0         # G
62 10    # aaddf 16        # &G->gap_start
2E       # imload          # G->gap_start
10 00    # bipush 0        # 0
9F 00 06 # if_cmpeq +6     # if (G->gap_start == 0) goto <93:cond_true>
A7 00 1D # goto +29        # goto <94:cond_false>
# <93:cond_true>
15 00    # vload 0         # G
62 14    # aaddf 20        # &G->gap_end
2E       # imload          # G->gap_end
15 00    # vload 0         # G
62 00    # aaddf 0         # &G->limit
2E       # imload          # G->limit
9F 00 06 # if_cmpeq +6     # if (G->gap_end == G->limit) goto <96:cond_true>
A7 00 08 # goto +8         # goto <97:cond_false>
# <96:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <98:cond_end>
# <97:cond_false>
10 00    # bipush 0        # false
# <98:cond_end>
A7 00 05 # goto +5         # goto <95:cond_end>
# <94:cond_false>
10 00    # bipush 0        # false
# <95:cond_end>
36 02    # vstore 2        # _result = ((G->gap_start == 0) && (G->gap_end == G->limit));
15 02    # vload 2         # _result
B0       # return          # 


#<gapbuf_full>
00 02             # number of arguments = 2
00 07             # number of local variables = 7
00 52             # code length = 82 bytes
15 00    # vload 0         # G
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (G != NULL) goto <99:cond_true>
A7 00 08 # goto +8         # goto <100:cond_false>
# <99:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <101:cond_end>
# <100:cond_false>
10 00    # bipush 0        # false
# <101:cond_end>
14 06 E0 # aldc 1760       # s[1760] = "gapbuf.c0:71.4-71.23: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 07 13 # aldc 1811       # s[1811] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("gapbuf.c0:71.4-71.23: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert(G != NULL) [failure message on stack]
15 00    # vload 0         # G
14 07 25 # aldc 1829       # s[1829] = "gapbuf.c0:72.13-72.25"
B8 00 0B # invokestatic 11 # is_gapbuf(G, "gapbuf.c0:72.13-72.25")
14 07 3B # aldc 1851       # s[1851] = "gapbuf.c0:72.4-72.26: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 07 6E # aldc 1902       # s[1902] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("gapbuf.c0:72.4-72.26: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assertis_gapbuf(G, "gapbuf.c0:72.13-72.25") [failure message on stack]
15 00    # vload 0         # G
62 10    # aaddf 16        # &G->gap_start
2E       # imload          # G->gap_start
15 00    # vload 0         # G
62 14    # aaddf 20        # &G->gap_end
2E       # imload          # G->gap_end
9F 00 06 # if_cmpeq +6     # if (G->gap_start == G->gap_end) goto <102:cond_true>
A7 00 08 # goto +8         # goto <103:cond_false>
# <102:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <104:cond_end>
# <103:cond_false>
10 00    # bipush 0        # false
# <104:cond_end>
36 02    # vstore 2        # _result = (G->gap_start == G->gap_end);
15 02    # vload 2         # _result
B0       # return          # 


#<gapbuf_at_left>
00 02             # number of arguments = 2
00 07             # number of local variables = 7
00 4F             # code length = 79 bytes
15 00    # vload 0         # G
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (G != NULL) goto <105:cond_true>
A7 00 08 # goto +8         # goto <106:cond_false>
# <105:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <107:cond_end>
# <106:cond_false>
10 00    # bipush 0        # false
# <107:cond_end>
14 07 80 # aldc 1920       # s[1920] = "gapbuf.c0:78.4-78.23: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 07 B3 # aldc 1971       # s[1971] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("gapbuf.c0:78.4-78.23: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert(G != NULL) [failure message on stack]
15 00    # vload 0         # G
14 07 C5 # aldc 1989       # s[1989] = "gapbuf.c0:79.13-79.25"
B8 00 0B # invokestatic 11 # is_gapbuf(G, "gapbuf.c0:79.13-79.25")
14 07 DB # aldc 2011       # s[2011] = "gapbuf.c0:79.4-79.26: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 08 0E # aldc 2062       # s[2062] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("gapbuf.c0:79.4-79.26: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assertis_gapbuf(G, "gapbuf.c0:79.13-79.25") [failure message on stack]
15 00    # vload 0         # G
62 10    # aaddf 16        # &G->gap_start
2E       # imload          # G->gap_start
10 00    # bipush 0        # 0
9F 00 06 # if_cmpeq +6     # if (G->gap_start == 0) goto <108:cond_true>
A7 00 08 # goto +8         # goto <109:cond_false>
# <108:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <110:cond_end>
# <109:cond_false>
10 00    # bipush 0        # false
# <110:cond_end>
36 02    # vstore 2        # _result = (G->gap_start == 0);
15 02    # vload 2         # _result
B0       # return          # 


#<gapbuf_at_right>
00 02             # number of arguments = 2
00 07             # number of local variables = 7
00 52             # code length = 82 bytes
15 00    # vload 0         # G
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (G != NULL) goto <111:cond_true>
A7 00 08 # goto +8         # goto <112:cond_false>
# <111:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <113:cond_end>
# <112:cond_false>
10 00    # bipush 0        # false
# <113:cond_end>
14 08 20 # aldc 2080       # s[2080] = "gapbuf.c0:85.4-85.23: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 08 53 # aldc 2131       # s[2131] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("gapbuf.c0:85.4-85.23: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert(G != NULL) [failure message on stack]
15 00    # vload 0         # G
14 08 65 # aldc 2149       # s[2149] = "gapbuf.c0:86.13-86.25"
B8 00 0B # invokestatic 11 # is_gapbuf(G, "gapbuf.c0:86.13-86.25")
14 08 7B # aldc 2171       # s[2171] = "gapbuf.c0:86.4-86.26: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 08 AE # aldc 2222       # s[2222] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("gapbuf.c0:86.4-86.26: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assertis_gapbuf(G, "gapbuf.c0:86.13-86.25") [failure message on stack]
15 00    # vload 0         # G
62 14    # aaddf 20        # &G->gap_end
2E       # imload          # G->gap_end
15 00    # vload 0         # G
62 00    # aaddf 0         # &G->limit
2E       # imload          # G->limit
9F 00 06 # if_cmpeq +6     # if (G->gap_end == G->limit) goto <114:cond_true>
A7 00 08 # goto +8         # goto <115:cond_false>
# <114:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <116:cond_end>
# <115:cond_false>
10 00    # bipush 0        # false
# <116:cond_end>
36 02    # vstore 2        # _result = (G->gap_end == G->limit);
15 02    # vload 2         # _result
B0       # return          # 


#<gapbuf_new>
00 02             # number of arguments = 2
00 07             # number of local variables = 7
00 90             # code length = 144 bytes
15 00    # vload 0         # limit
10 00    # bipush 0        # 0
A3 00 06 # if_icmpgt +6    # if (limit > 0) goto <117:cond_true>
A7 00 08 # goto +8         # goto <118:cond_false>
# <117:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <119:cond_end>
# <118:cond_false>
10 00    # bipush 0        # false
# <119:cond_end>
14 08 C0 # aldc 2240       # s[2240] = "gapbuf.c0:93.4-93.23: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 08 F3 # aldc 2291       # s[2291] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("gapbuf.c0:93.4-93.23: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert(limit > 0) [failure message on stack]
BB 18    # new 24          # alloc(struct gapbuf_header)
36 03    # vstore 3        # G = alloc(struct gapbuf_header);
15 03    # vload 3         # G
62 00    # aaddf 0         # &G->limit
15 00    # vload 0         # limit
4E       # imstore         # G->limit = limit;
15 03    # vload 3         # G
62 10    # aaddf 16        # &G->gap_start
10 00    # bipush 0        # 0
4E       # imstore         # G->gap_start = 0;
15 03    # vload 3         # G
62 14    # aaddf 20        # &G->gap_end
15 00    # vload 0         # limit
4E       # imstore         # G->gap_end = limit;
15 03    # vload 3         # G
62 08    # aaddf 8         # &G->buffer
15 00    # vload 0         # limit
BC 01    # newarray 1      # alloc_array(char, limit)
4F       # amstore         # G->buffer = alloc_array(char, limit);
15 03    # vload 3         # G
36 02    # vstore 2        # _result = G;
15 02    # vload 2         # _result
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (_result != NULL) goto <120:cond_true>
A7 00 0E # goto +14        # goto <121:cond_false>
# <120:cond_true>
15 02    # vload 2         # _result
14 09 05 # aldc 2309       # s[2309] = "gapbuf.c0:94.31-94.49"
B8 00 0B # invokestatic 11 # is_gapbuf(_result, "gapbuf.c0:94.31-94.49")
A7 00 05 # goto +5         # goto <122:cond_end>
# <121:cond_false>
10 00    # bipush 0        # false
# <122:cond_end>
14 09 1B # aldc 2331       # s[2331] = "gapbuf.c0:94.4-94.50: @ensures annotation failed"
CF       # assert          # assert((_result != NULL) && is_gapbuf(_result, "gapbuf.c0:94.31-94.49")) [failure message on stack]
15 02    # vload 2         # _result
14 09 4C # aldc 2380       # s[2380] = "gapbuf.c0:95.12-95.33"
B8 00 0C # invokestatic 12 # gapbuf_empty(_result, "gapbuf.c0:95.12-95.33")
14 09 62 # aldc 2402       # s[2402] = "gapbuf.c0:95.4-95.34: @ensures annotation failed"
CF       # assert          # assertgapbuf_empty(_result, "gapbuf.c0:95.12-95.33") [failure message on stack]
15 02    # vload 2         # _result
14 09 93 # aldc 2451       # s[2451] = "gapbuf.c0:96.12-96.35"
B8 00 0E # invokestatic 14 # gapbuf_at_left(_result, "gapbuf.c0:96.12-96.35")
10 01    # bipush 1        # true
9F 00 06 # if_cmpeq +6     # if (gapbuf_at_left(_result, "gapbuf.c0:96.12-96.35") == true) goto <123:cond_true>
A7 00 0E # goto +14        # goto <124:cond_false>
# <123:cond_true>
15 02    # vload 2         # _result
14 09 A9 # aldc 2473       # s[2473] = "gapbuf.c0:96.39-96.63"
B8 00 0F # invokestatic 15 # gapbuf_at_right(_result, "gapbuf.c0:96.39-96.63")
A7 00 05 # goto +5         # goto <125:cond_end>
# <124:cond_false>
10 00    # bipush 0        # false
# <125:cond_end>
14 09 BF # aldc 2495       # s[2495] = "gapbuf.c0:96.4-96.64: @ensures annotation failed"
CF       # assert          # assert(gapbuf_at_left(_result, "gapbuf.c0:96.12-96.35") && gapbuf_at_right(_result, "gapbuf.c0:96.39-96.63")) [failure message on stack]
15 02    # vload 2         # _result
B0       # return          # 


#<gapbuf_forward>
00 02             # number of arguments = 2
00 07             # number of local variables = 7
00 C5             # code length = 197 bytes
15 00    # vload 0         # G
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (G != NULL) goto <126:cond_true>
A7 00 0E # goto +14        # goto <127:cond_false>
# <126:cond_true>
15 00    # vload 0         # G
14 09 F0 # aldc 2544       # s[2544] = "gapbuf.c0:107.26-107.38"
B8 00 0B # invokestatic 11 # is_gapbuf(G, "gapbuf.c0:107.26-107.38")
A7 00 05 # goto +5         # goto <128:cond_end>
# <127:cond_false>
10 00    # bipush 0        # false
# <128:cond_end>
14 0A 08 # aldc 2568       # s[2568] = "gapbuf.c0:107.4-107.39: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 0A 3D # aldc 2621       # s[2621] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("gapbuf.c0:107.4-107.39: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert((G != NULL) && is_gapbuf(G, "gapbuf.c0:107.26-107.38")) [failure message on stack]
15 00    # vload 0         # G
14 0A 4F # aldc 2639       # s[2639] = "gapbuf.c0:108.15-108.30"
B8 00 0C # invokestatic 12 # gapbuf_empty(G, "gapbuf.c0:108.15-108.30")
10 01    # bipush 1        # true
9F 00 06 # if_cmpeq +6     # if (gapbuf_empty(G, "gapbuf.c0:108.15-108.30") == true) goto <129:cond_true>
A7 00 08 # goto +8         # goto <130:cond_false>
# <129:cond_true>
10 01    # bipush 1        # true
A7 00 0B # goto +11        # goto <131:cond_end>
# <130:cond_false>
15 00    # vload 0         # G
14 0A 67 # aldc 2663       # s[2663] = "gapbuf.c0:108.34-108.52"
B8 00 0F # invokestatic 15 # gapbuf_at_right(G, "gapbuf.c0:108.34-108.52")
# <131:cond_end>
10 01    # bipush 1        # 
82       # ixor            # !((gapbuf_empty(G, "gapbuf.c0:108.15-108.30") || gapbuf_at_right(G, "gapbuf.c0:108.34-108.52")))
14 0A 7F # aldc 2687       # s[2687] = "gapbuf.c0:108.4-108.55: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 0A B4 # aldc 2740       # s[2740] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("gapbuf.c0:108.4-108.55: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert!((gapbuf_empty(G, "gapbuf.c0:108.15-108.30") || gapbuf_at_right(G, "gapbuf.c0:108.34-108.52"))) [failure message on stack]
15 00    # vload 0         # G
62 10    # aaddf 16        # &G->gap_start
2E       # imload          # G->gap_start
36 02    # vstore 2        # initial = G->gap_start;
15 00    # vload 0         # G
62 08    # aaddf 8         # &G->buffer
2F       # amload          # G->buffer
15 00    # vload 0         # G
62 14    # aaddf 20        # &G->gap_end
2E       # imload          # G->gap_end
63       # aadds           # &G->buffer[G->gap_end]
34       # cmload          # G->buffer[G->gap_end]
36 03    # vstore 3        # char_to_shift = G->buffer[G->gap_end];
15 00    # vload 0         # G
62 08    # aaddf 8         # &G->buffer
2F       # amload          # G->buffer
15 02    # vload 2         # initial
63       # aadds           # &G->buffer[initial]
15 03    # vload 3         # char_to_shift
55       # cmstore         # G->buffer[initial] = char_to_shift;
15 00    # vload 0         # G
62 10    # aaddf 16        # &G->gap_start
15 02    # vload 2         # initial
10 01    # bipush 1        # 1
60       # iadd            # (initial + 1)
4E       # imstore         # G->gap_start = (initial + 1);
15 00    # vload 0         # G
62 14    # aaddf 20        # &G->gap_end
15 00    # vload 0         # G
62 14    # aaddf 20        # &G->gap_end
2E       # imload          # G->gap_end
10 01    # bipush 1        # 1
60       # iadd            # (G->gap_end + 1)
4E       # imstore         # G->gap_end = (G->gap_end + 1);
15 00    # vload 0         # G
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (G != NULL) goto <132:cond_true>
A7 00 0E # goto +14        # goto <133:cond_false>
# <132:cond_true>
15 00    # vload 0         # G
14 0A C6 # aldc 2758       # s[2758] = "gapbuf.c0:109.24-109.36"
B8 00 0B # invokestatic 11 # is_gapbuf(G, "gapbuf.c0:109.24-109.36")
A7 00 05 # goto +5         # goto <134:cond_end>
# <133:cond_false>
10 00    # bipush 0        # false
# <134:cond_end>
14 0A DE # aldc 2782       # s[2782] = "gapbuf.c0:109.4-109.37: @ensures annotation failed"
CF       # assert          # assert((G != NULL) && is_gapbuf(G, "gapbuf.c0:109.24-109.36")) [failure message on stack]
10 00    # bipush 0        # dummy return value
B0       # return          # 
15 00    # vload 0         # G
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (G != NULL) goto <135:cond_true>
A7 00 0E # goto +14        # goto <136:cond_false>
# <135:cond_true>
15 00    # vload 0         # G
14 0B 11 # aldc 2833       # s[2833] = "gapbuf.c0:109.24-109.36"
B8 00 0B # invokestatic 11 # is_gapbuf(G, "gapbuf.c0:109.24-109.36")
A7 00 05 # goto +5         # goto <137:cond_end>
# <136:cond_false>
10 00    # bipush 0        # false
# <137:cond_end>
14 0B 29 # aldc 2857       # s[2857] = "gapbuf.c0:109.4-109.37: @ensures annotation failed"
CF       # assert          # assert((G != NULL) && is_gapbuf(G, "gapbuf.c0:109.24-109.36")) [failure message on stack]
10 00    # bipush 0        # dummy return value
B0       # return          # 


#<gapbuf_backward>
00 02             # number of arguments = 2
00 07             # number of local variables = 7
00 CC             # code length = 204 bytes
15 00    # vload 0         # G
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (G != NULL) goto <138:cond_true>
A7 00 0E # goto +14        # goto <139:cond_false>
# <138:cond_true>
15 00    # vload 0         # G
14 0B 5C # aldc 2908       # s[2908] = "gapbuf.c0:122.26-122.38"
B8 00 0B # invokestatic 11 # is_gapbuf(G, "gapbuf.c0:122.26-122.38")
A7 00 05 # goto +5         # goto <140:cond_end>
# <139:cond_false>
10 00    # bipush 0        # false
# <140:cond_end>
14 0B 74 # aldc 2932       # s[2932] = "gapbuf.c0:122.4-122.39: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 0B A9 # aldc 2985       # s[2985] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("gapbuf.c0:122.4-122.39: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert((G != NULL) && is_gapbuf(G, "gapbuf.c0:122.26-122.38")) [failure message on stack]
15 00    # vload 0         # G
14 0B BB # aldc 3003       # s[3003] = "gapbuf.c0:123.15-123.30"
B8 00 0C # invokestatic 12 # gapbuf_empty(G, "gapbuf.c0:123.15-123.30")
10 01    # bipush 1        # true
9F 00 06 # if_cmpeq +6     # if (gapbuf_empty(G, "gapbuf.c0:123.15-123.30") == true) goto <141:cond_true>
A7 00 08 # goto +8         # goto <142:cond_false>
# <141:cond_true>
10 01    # bipush 1        # true
A7 00 0B # goto +11        # goto <143:cond_end>
# <142:cond_false>
15 00    # vload 0         # G
14 0B D3 # aldc 3027       # s[3027] = "gapbuf.c0:123.34-123.51"
B8 00 0E # invokestatic 14 # gapbuf_at_left(G, "gapbuf.c0:123.34-123.51")
# <143:cond_end>
10 01    # bipush 1        # 
82       # ixor            # !((gapbuf_empty(G, "gapbuf.c0:123.15-123.30") || gapbuf_at_left(G, "gapbuf.c0:123.34-123.51")))
14 0B EB # aldc 3051       # s[3051] = "gapbuf.c0:123.4-123.54: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 0C 20 # aldc 3104       # s[3104] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("gapbuf.c0:123.4-123.54: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert!((gapbuf_empty(G, "gapbuf.c0:123.15-123.30") || gapbuf_at_left(G, "gapbuf.c0:123.34-123.51"))) [failure message on stack]
15 00    # vload 0         # G
62 10    # aaddf 16        # &G->gap_start
2E       # imload          # G->gap_start
36 02    # vstore 2        # initial_start = G->gap_start;
15 00    # vload 0         # G
62 14    # aaddf 20        # &G->gap_end
2E       # imload          # G->gap_end
36 03    # vstore 3        # initial_end = G->gap_end;
15 00    # vload 0         # G
62 08    # aaddf 8         # &G->buffer
2F       # amload          # G->buffer
15 02    # vload 2         # initial_start
10 01    # bipush 1        # 1
64       # isub            # (initial_start - 1)
63       # aadds           # &G->buffer[(initial_start - 1)]
34       # cmload          # G->buffer[(initial_start - 1)]
36 04    # vstore 4        # char_to_shift = G->buffer[(initial_start - 1)];
15 00    # vload 0         # G
62 08    # aaddf 8         # &G->buffer
2F       # amload          # G->buffer
15 03    # vload 3         # initial_end
10 01    # bipush 1        # 1
64       # isub            # (initial_end - 1)
63       # aadds           # &G->buffer[(initial_end - 1)]
15 04    # vload 4         # char_to_shift
55       # cmstore         # G->buffer[(initial_end - 1)] = char_to_shift;
15 00    # vload 0         # G
62 10    # aaddf 16        # &G->gap_start
15 02    # vload 2         # initial_start
10 01    # bipush 1        # 1
64       # isub            # (initial_start - 1)
4E       # imstore         # G->gap_start = (initial_start - 1);
15 00    # vload 0         # G
62 14    # aaddf 20        # &G->gap_end
15 03    # vload 3         # initial_end
10 01    # bipush 1        # 1
64       # isub            # (initial_end - 1)
4E       # imstore         # G->gap_end = (initial_end - 1);
15 00    # vload 0         # G
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (G != NULL) goto <144:cond_true>
A7 00 0E # goto +14        # goto <145:cond_false>
# <144:cond_true>
15 00    # vload 0         # G
14 0C 32 # aldc 3122       # s[3122] = "gapbuf.c0:124.24-124.36"
B8 00 0B # invokestatic 11 # is_gapbuf(G, "gapbuf.c0:124.24-124.36")
A7 00 05 # goto +5         # goto <146:cond_end>
# <145:cond_false>
10 00    # bipush 0        # false
# <146:cond_end>
14 0C 4A # aldc 3146       # s[3146] = "gapbuf.c0:124.4-124.37: @ensures annotation failed"
CF       # assert          # assert((G != NULL) && is_gapbuf(G, "gapbuf.c0:124.24-124.36")) [failure message on stack]
10 00    # bipush 0        # dummy return value
B0       # return          # 
15 00    # vload 0         # G
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (G != NULL) goto <147:cond_true>
A7 00 0E # goto +14        # goto <148:cond_false>
# <147:cond_true>
15 00    # vload 0         # G
14 0C 7D # aldc 3197       # s[3197] = "gapbuf.c0:124.24-124.36"
B8 00 0B # invokestatic 11 # is_gapbuf(G, "gapbuf.c0:124.24-124.36")
A7 00 05 # goto +5         # goto <149:cond_end>
# <148:cond_false>
10 00    # bipush 0        # false
# <149:cond_end>
14 0C 95 # aldc 3221       # s[3221] = "gapbuf.c0:124.4-124.37: @ensures annotation failed"
CF       # assert          # assert((G != NULL) && is_gapbuf(G, "gapbuf.c0:124.24-124.36")) [failure message on stack]
10 00    # bipush 0        # dummy return value
B0       # return          # 


#<gapbuf_insert>
00 03             # number of arguments = 3
00 07             # number of local variables = 7
00 B2             # code length = 178 bytes
15 00    # vload 0         # G
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (G != NULL) goto <150:cond_true>
A7 00 0E # goto +14        # goto <151:cond_false>
# <150:cond_true>
15 00    # vload 0         # G
14 0C C8 # aldc 3272       # s[3272] = "gapbuf.c0:138.26-138.38"
B8 00 0B # invokestatic 11 # is_gapbuf(G, "gapbuf.c0:138.26-138.38")
A7 00 05 # goto +5         # goto <152:cond_end>
# <151:cond_false>
10 00    # bipush 0        # false
# <152:cond_end>
14 0C E0 # aldc 3296       # s[3296] = "gapbuf.c0:138.4-138.39: @requires annotation failed\n"
15 02    # vload 2         # _caller
14 0D 15 # aldc 3349       # s[3349] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("gapbuf.c0:138.4-138.39: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert((G != NULL) && is_gapbuf(G, "gapbuf.c0:138.26-138.38")) [failure message on stack]
15 00    # vload 0         # G
14 0D 27 # aldc 3367       # s[3367] = "gapbuf.c0:139.14-139.28"
B8 00 0D # invokestatic 13 # gapbuf_full(G, "gapbuf.c0:139.14-139.28")
10 01    # bipush 1        # 
82       # ixor            # !(gapbuf_full(G, "gapbuf.c0:139.14-139.28"))
14 0D 3F # aldc 3391       # s[3391] = "gapbuf.c0:139.4-139.29: @requires annotation failed\n"
15 02    # vload 2         # _caller
14 0D 74 # aldc 3444       # s[3444] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("gapbuf.c0:139.4-139.29: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert!(gapbuf_full(G, "gapbuf.c0:139.14-139.28")) [failure message on stack]
15 00    # vload 0         # G
62 08    # aaddf 8         # &G->buffer
2F       # amload          # G->buffer
15 00    # vload 0         # G
62 10    # aaddf 16        # &G->gap_start
2E       # imload          # G->gap_start
63       # aadds           # &G->buffer[G->gap_start]
15 01    # vload 1         # C
55       # cmstore         # G->buffer[G->gap_start] = C;
15 00    # vload 0         # G
62 10    # aaddf 16        # &G->gap_start
15 00    # vload 0         # G
62 10    # aaddf 16        # &G->gap_start
2E       # imload          # G->gap_start
10 01    # bipush 1        # 1
60       # iadd            # (G->gap_start + 1)
4E       # imstore         # G->gap_start = (G->gap_start + 1);
15 00    # vload 0         # G
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (G != NULL) goto <153:cond_true>
A7 00 0E # goto +14        # goto <154:cond_false>
# <153:cond_true>
15 00    # vload 0         # G
14 0D 86 # aldc 3462       # s[3462] = "gapbuf.c0:140.24-140.36"
B8 00 0B # invokestatic 11 # is_gapbuf(G, "gapbuf.c0:140.24-140.36")
A7 00 05 # goto +5         # goto <155:cond_end>
# <154:cond_false>
10 00    # bipush 0        # false
# <155:cond_end>
14 0D 9E # aldc 3486       # s[3486] = "gapbuf.c0:140.4-140.37: @ensures annotation failed"
CF       # assert          # assert((G != NULL) && is_gapbuf(G, "gapbuf.c0:140.24-140.36")) [failure message on stack]
15 00    # vload 0         # G
14 0D D1 # aldc 3537       # s[3537] = "gapbuf.c0:141.14-141.29"
B8 00 0C # invokestatic 12 # gapbuf_empty(G, "gapbuf.c0:141.14-141.29")
10 01    # bipush 1        # 
82       # ixor            # !(gapbuf_empty(G, "gapbuf.c0:141.14-141.29"))
14 0D E9 # aldc 3561       # s[3561] = "gapbuf.c0:141.4-141.30: @ensures annotation failed"
CF       # assert          # assert!(gapbuf_empty(G, "gapbuf.c0:141.14-141.29")) [failure message on stack]
10 00    # bipush 0        # dummy return value
B0       # return          # 
15 00    # vload 0         # G
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (G != NULL) goto <156:cond_true>
A7 00 0E # goto +14        # goto <157:cond_false>
# <156:cond_true>
15 00    # vload 0         # G
14 0E 1C # aldc 3612       # s[3612] = "gapbuf.c0:140.24-140.36"
B8 00 0B # invokestatic 11 # is_gapbuf(G, "gapbuf.c0:140.24-140.36")
A7 00 05 # goto +5         # goto <158:cond_end>
# <157:cond_false>
10 00    # bipush 0        # false
# <158:cond_end>
14 0E 34 # aldc 3636       # s[3636] = "gapbuf.c0:140.4-140.37: @ensures annotation failed"
CF       # assert          # assert((G != NULL) && is_gapbuf(G, "gapbuf.c0:140.24-140.36")) [failure message on stack]
15 00    # vload 0         # G
14 0E 67 # aldc 3687       # s[3687] = "gapbuf.c0:141.14-141.29"
B8 00 0C # invokestatic 12 # gapbuf_empty(G, "gapbuf.c0:141.14-141.29")
10 01    # bipush 1        # 
82       # ixor            # !(gapbuf_empty(G, "gapbuf.c0:141.14-141.29"))
14 0E 7F # aldc 3711       # s[3711] = "gapbuf.c0:141.4-141.30: @ensures annotation failed"
CF       # assert          # assert!(gapbuf_empty(G, "gapbuf.c0:141.14-141.29")) [failure message on stack]
10 00    # bipush 0        # dummy return value
B0       # return          # 


#<gapbuf_delete>
00 02             # number of arguments = 2
00 07             # number of local variables = 7
00 9B             # code length = 155 bytes
15 00    # vload 0         # G
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (G != NULL) goto <159:cond_true>
A7 00 0E # goto +14        # goto <160:cond_false>
# <159:cond_true>
15 00    # vload 0         # G
14 0E B2 # aldc 3762       # s[3762] = "gapbuf.c0:152.26-152.38"
B8 00 0B # invokestatic 11 # is_gapbuf(G, "gapbuf.c0:152.26-152.38")
A7 00 05 # goto +5         # goto <161:cond_end>
# <160:cond_false>
10 00    # bipush 0        # false
# <161:cond_end>
14 0E CA # aldc 3786       # s[3786] = "gapbuf.c0:152.4-152.39: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 0E FF # aldc 3839       # s[3839] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("gapbuf.c0:152.4-152.39: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert((G != NULL) && is_gapbuf(G, "gapbuf.c0:152.26-152.38")) [failure message on stack]
15 00    # vload 0         # G
14 0F 11 # aldc 3857       # s[3857] = "gapbuf.c0:153.14-153.29"
B8 00 0C # invokestatic 12 # gapbuf_empty(G, "gapbuf.c0:153.14-153.29")
10 01    # bipush 1        # true
9F 00 14 # if_cmpeq +20    # if (gapbuf_empty(G, "gapbuf.c0:153.14-153.29") == true) goto <163:cond_false>
A7 00 03 # goto +3         # goto <162:cond_true>
# <162:cond_true>
15 00    # vload 0         # G
14 0F 29 # aldc 3881       # s[3881] = "gapbuf.c0:153.34-153.51"
B8 00 0E # invokestatic 14 # gapbuf_at_left(G, "gapbuf.c0:153.34-153.51")
10 01    # bipush 1        # 
82       # ixor            # !(gapbuf_at_left(G, "gapbuf.c0:153.34-153.51"))
A7 00 05 # goto +5         # goto <164:cond_end>
# <163:cond_false>
10 00    # bipush 0        # false
# <164:cond_end>
14 0F 41 # aldc 3905       # s[3905] = "gapbuf.c0:153.4-153.52: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 0F 76 # aldc 3958       # s[3958] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("gapbuf.c0:153.4-153.52: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert(!(gapbuf_empty(G, "gapbuf.c0:153.14-153.29")) && !(gapbuf_at_left(G, "gapbuf.c0:153.34-153.51"))) [failure message on stack]
15 00    # vload 0         # G
62 10    # aaddf 16        # &G->gap_start
15 00    # vload 0         # G
62 10    # aaddf 16        # &G->gap_start
2E       # imload          # G->gap_start
10 01    # bipush 1        # 1
64       # isub            # (G->gap_start - 1)
4E       # imstore         # G->gap_start = (G->gap_start - 1);
15 00    # vload 0         # G
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (G != NULL) goto <165:cond_true>
A7 00 0E # goto +14        # goto <166:cond_false>
# <165:cond_true>
15 00    # vload 0         # G
14 0F 88 # aldc 3976       # s[3976] = "gapbuf.c0:154.24-154.36"
B8 00 0B # invokestatic 11 # is_gapbuf(G, "gapbuf.c0:154.24-154.36")
A7 00 05 # goto +5         # goto <167:cond_end>
# <166:cond_false>
10 00    # bipush 0        # false
# <167:cond_end>
14 0F A0 # aldc 4000       # s[4000] = "gapbuf.c0:154.4-154.37: @ensures annotation failed"
CF       # assert          # assert((G != NULL) && is_gapbuf(G, "gapbuf.c0:154.24-154.36")) [failure message on stack]
10 00    # bipush 0        # dummy return value
B0       # return          # 
15 00    # vload 0         # G
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (G != NULL) goto <168:cond_true>
A7 00 0E # goto +14        # goto <169:cond_false>
# <168:cond_true>
15 00    # vload 0         # G
14 0F D3 # aldc 4051       # s[4051] = "gapbuf.c0:154.24-154.36"
B8 00 0B # invokestatic 11 # is_gapbuf(G, "gapbuf.c0:154.24-154.36")
A7 00 05 # goto +5         # goto <170:cond_end>
# <169:cond_false>
10 00    # bipush 0        # false
# <170:cond_end>
14 0F EB # aldc 4075       # s[4075] = "gapbuf.c0:154.4-154.37: @ensures annotation failed"
CF       # assert          # assert((G != NULL) && is_gapbuf(G, "gapbuf.c0:154.24-154.36")) [failure message on stack]
10 00    # bipush 0        # dummy return value
B0       # return          # 


#<buf_is_exp_length>
00 02             # number of arguments = 2
00 05             # number of local variables = 5
00 42             # code length = 66 bytes
15 00    # vload 0         # G
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (G != NULL) goto <58:cond_true>
A7 00 08 # goto +8         # goto <59:cond_false>
# <58:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <60:cond_end>
# <59:cond_false>
10 00    # bipush 0        # false
# <60:cond_end>
14 05 B5 # aldc 1461       # s[1461] = "gapbuf.c0:43.4-43.23: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 05 E8 # aldc 1512       # s[1512] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("gapbuf.c0:43.4-43.23: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert(G != NULL) [failure message on stack]
15 00    # vload 0         # G
62 08    # aaddf 8         # &G->buffer
2F       # amload          # G->buffer
BE       # arraylength     # \length(G->buffer)
15 00    # vload 0         # G
62 00    # aaddf 0         # &G->limit
2E       # imload          # G->limit
9F 00 06 # if_cmpeq +6     # if (\length(G->buffer) == G->limit) goto <61:cond_true>
A7 00 08 # goto +8         # goto <62:cond_false>
# <61:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <63:cond_end>
# <62:cond_false>
10 00    # bipush 0        # false
# <63:cond_end>
14 05 FA # aldc 1530       # s[1530] = "gapbuf.c0:45.7-45.45: @assert annotation failed"
CF       # assert          # assert(\length(G->buffer) == G->limit) [failure message on stack]
10 01    # bipush 1        # true
36 02    # vstore 2        # _result = true;
15 02    # vload 2         # _result
B0       # return          # 


#<readline__1>
00 01             # number of arguments = 1
00 07             # number of local variables = 7
00 1D             # code length = 29 bytes
B7 00 0B # invokenative 11 # eof()
10 01    # bipush 1        # 
82       # ixor            # !(eof())
14 10 1E # aldc 4126       # s[4126] = "/afs/andrew/course/15/122/lib/conio.h0:14.6-14.22: @requires annotation failed\n"
15 00    # vload 0         # _caller
14 10 6E # aldc 4206       # s[4206] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("/afs/andrew/course/15/122/lib/conio.h0:14.6-14.22: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert!(eof()) [failure message on stack]
B7 00 0C # invokenative 12 # readline()
36 01    # vstore 1        # _result = readline();
15 01    # vload 1         # _result
B0       # return          # 


#<int_size>
00 01             # number of arguments = 1
00 07             # number of local variables = 7
00 07             # code length = 7 bytes
10 04    # bipush 4        # 4
36 01    # vstore 1        # _result = 4;
15 01    # vload 1         # _result
B0       # return          # 


#<int_size__1>
00 01             # number of arguments = 1
00 07             # number of local variables = 7
00 20             # code length = 32 bytes
14 10 80 # aldc 4224       # s[4224] = "/afs/andrew/course/15/122/lib/util.h0:8.1-9.33"
B8 00 17 # invokestatic 23 # int_size("/afs/andrew/course/15/122/lib/util.h0:8.1-9.33")
36 01    # vstore 1        # _result = int_size("/afs/andrew/course/15/122/lib/util.h0:8.1-9.33");
15 01    # vload 1         # _result
10 04    # bipush 4        # 4
9F 00 06 # if_cmpeq +6     # if (_result == 4) goto <171:cond_true>
A7 00 08 # goto +8         # goto <172:cond_false>
# <171:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <173:cond_end>
# <172:cond_false>
10 00    # bipush 0        # false
# <173:cond_end>
14 10 AF # aldc 4271       # s[4271] = "/afs/andrew/course/15/122/lib/util.h0:9.6-9.27: @ensures annotation failed"
CF       # assert          # assert(_result == 4) [failure message on stack]
15 01    # vload 1         # _result
B0       # return          # 


#<int_max>
00 01             # number of arguments = 1
00 07             # number of local variables = 7
00 08             # code length = 8 bytes
13 00 02 # ildc 2          # c[2] = 2147483647
36 01    # vstore 1        # _result = 2147483647;
15 01    # vload 1         # _result
B0       # return          # 


#<int_max__1>
00 01             # number of arguments = 1
00 07             # number of local variables = 7
00 21             # code length = 33 bytes
14 10 FA # aldc 4346       # s[4346] = "/afs/andrew/course/15/122/lib/util.h0:10.1-11.42"
B8 00 19 # invokestatic 25 # int_max("/afs/andrew/course/15/122/lib/util.h0:10.1-11.42")
36 01    # vstore 1        # _result = int_max("/afs/andrew/course/15/122/lib/util.h0:10.1-11.42");
15 01    # vload 1         # _result
13 00 00 # ildc 0          # c[0] = 2147483647
9F 00 06 # if_cmpeq +6     # if (_result == 2147483647) goto <174:cond_true>
A7 00 08 # goto +8         # goto <175:cond_false>
# <174:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <176:cond_end>
# <175:cond_false>
10 00    # bipush 0        # false
# <176:cond_end>
14 11 2B # aldc 4395       # s[4395] = "/afs/andrew/course/15/122/lib/util.h0:11.6-11.36: @ensures annotation failed"
CF       # assert          # assert(_result == 2147483647) [failure message on stack]
15 01    # vload 1         # _result
B0       # return          # 


#<int_min>
00 01             # number of arguments = 1
00 07             # number of local variables = 7
00 08             # code length = 8 bytes
13 00 03 # ildc 3          # c[3] = -2147483648
36 01    # vstore 1        # _result = -2147483648;
15 01    # vload 1         # _result
B0       # return          # 


#<int_min__1>
00 01             # number of arguments = 1
00 07             # number of local variables = 7
00 21             # code length = 33 bytes
14 11 78 # aldc 4472       # s[4472] = "/afs/andrew/course/15/122/lib/util.h0:12.1-13.43"
B8 00 1B # invokestatic 27 # int_min("/afs/andrew/course/15/122/lib/util.h0:12.1-13.43")
36 01    # vstore 1        # _result = int_min("/afs/andrew/course/15/122/lib/util.h0:12.1-13.43");
15 01    # vload 1         # _result
13 00 01 # ildc 1          # c[1] = -2147483648
9F 00 06 # if_cmpeq +6     # if (_result == -(-2147483648)) goto <177:cond_true>
A7 00 08 # goto +8         # goto <178:cond_false>
# <177:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <179:cond_end>
# <178:cond_false>
10 00    # bipush 0        # false
# <179:cond_end>
14 11 A9 # aldc 4521       # s[4521] = "/afs/andrew/course/15/122/lib/util.h0:13.6-13.37: @ensures annotation failed"
CF       # assert          # assert(_result == -(-2147483648)) [failure message on stack]
15 01    # vload 1         # _result
B0       # return          # 


#<abs>
00 02             # number of arguments = 2
00 07             # number of local variables = 7
00 52             # code length = 82 bytes
15 00    # vload 0         # x
14 16 1E # aldc 5662       # s[5662] = "/afs/andrew/course/15/122/lib/util.c0:29.17-29.26"
B8 00 1C # invokestatic 28 # int_min__1("/afs/andrew/course/15/122/lib/util.c0:29.17-29.26")
A3 00 06 # if_icmpgt +6    # if (x > int_min__1("/afs/andrew/course/15/122/lib/util.c0:29.17-29.26")) goto <246:cond_true>
A7 00 08 # goto +8         # goto <247:cond_false>
# <246:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <248:cond_end>
# <247:cond_false>
10 00    # bipush 0        # false
# <248:cond_end>
14 16 50 # aldc 5712       # s[5712] = "/afs/andrew/course/15/122/lib/util.c0:29.4-29.27: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 16 9F # aldc 5791       # s[5791] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("/afs/andrew/course/15/122/lib/util.c0:29.4-29.27: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert(x > int_min__1("/afs/andrew/course/15/122/lib/util.c0:29.17-29.26")) [failure message on stack]
15 00    # vload 0         # x
10 00    # bipush 0        # 0
A1 00 06 # if_icmplt +6    # if (x < 0) goto <249:cond_true>
A7 00 0B # goto +11        # goto <250:cond_false>
# <249:cond_true>
10 00    # bipush 0        # 
15 00    # vload 0         # x
64       # isub            # -(x)
A7 00 05 # goto +5         # goto <251:cond_end>
# <250:cond_false>
15 00    # vload 0         # x
# <251:cond_end>
36 02    # vstore 2        # _result = ((x < 0) ? -(x) : x);
15 02    # vload 2         # _result
10 00    # bipush 0        # 0
A2 00 06 # if_icmpge +6    # if (_result >= 0) goto <252:cond_true>
A7 00 08 # goto +8         # goto <253:cond_false>
# <252:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <254:cond_end>
# <253:cond_false>
10 00    # bipush 0        # false
# <254:cond_end>
14 16 B1 # aldc 5809       # s[5809] = "/afs/andrew/course/15/122/lib/util.c0:30.4-30.25: @ensures annotation failed"
CF       # assert          # assert(_result >= 0) [failure message on stack]
15 02    # vload 2         # _result
B0       # return          # 


#<abs__1>
00 02             # number of arguments = 2
00 07             # number of local variables = 7
00 6D             # code length = 109 bytes
15 00    # vload 0         # x
14 11 F6 # aldc 4598       # s[4598] = "/afs/andrew/course/15/122/lib/util.h0:17.19-17.28"
B8 00 1C # invokestatic 28 # int_min__1("/afs/andrew/course/15/122/lib/util.h0:17.19-17.28")
A3 00 06 # if_icmpgt +6    # if (x > int_min__1("/afs/andrew/course/15/122/lib/util.h0:17.19-17.28")) goto <180:cond_true>
A7 00 08 # goto +8         # goto <181:cond_false>
# <180:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <182:cond_end>
# <181:cond_false>
10 00    # bipush 0        # false
# <182:cond_end>
14 12 28 # aldc 4648       # s[4648] = "/afs/andrew/course/15/122/lib/util.h0:17.6-17.29: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 12 77 # aldc 4727       # s[4727] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("/afs/andrew/course/15/122/lib/util.h0:17.6-17.29: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert(x > int_min__1("/afs/andrew/course/15/122/lib/util.h0:17.19-17.28")) [failure message on stack]
15 00    # vload 0         # x
14 12 89 # aldc 4745       # s[4745] = "/afs/andrew/course/15/122/lib/util.h0:16.1-19.48"
B8 00 1D # invokestatic 29 # abs(x, "/afs/andrew/course/15/122/lib/util.h0:16.1-19.48")
36 02    # vstore 2        # _result = abs(x, "/afs/andrew/course/15/122/lib/util.h0:16.1-19.48");
15 02    # vload 2         # _result
10 00    # bipush 0        # 0
A2 00 06 # if_icmpge +6    # if (_result >= 0) goto <183:cond_true>
A7 00 08 # goto +8         # goto <184:cond_false>
# <183:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <185:cond_end>
# <184:cond_false>
10 00    # bipush 0        # false
# <185:cond_end>
14 12 BA # aldc 4794       # s[4794] = "/afs/andrew/course/15/122/lib/util.h0:18.6-18.27: @ensures annotation failed"
CF       # assert          # assert(_result >= 0) [failure message on stack]
15 02    # vload 2         # _result
15 00    # vload 0         # x
10 00    # bipush 0        # 0
A1 00 06 # if_icmplt +6    # if (x < 0) goto <189:cond_true>
A7 00 0B # goto +11        # goto <190:cond_false>
# <189:cond_true>
10 00    # bipush 0        # 
15 00    # vload 0         # x
64       # isub            # -(x)
A7 00 05 # goto +5         # goto <191:cond_end>
# <190:cond_false>
15 00    # vload 0         # x
# <191:cond_end>
9F 00 06 # if_cmpeq +6     # if (_result == ((x < 0) ? -(x) : x)) goto <186:cond_true>
A7 00 08 # goto +8         # goto <187:cond_false>
# <186:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <188:cond_end>
# <187:cond_false>
10 00    # bipush 0        # false
# <188:cond_end>
14 13 07 # aldc 4871       # s[4871] = "/afs/andrew/course/15/122/lib/util.h0:19.6-19.42: @ensures annotation failed"
CF       # assert          # assert(_result == ((x < 0) ? -(x) : x)) [failure message on stack]
15 02    # vload 2         # _result
B0       # return          # 


#<max>
00 03             # number of arguments = 3
00 07             # number of local variables = 7
00 5E             # code length = 94 bytes
15 00    # vload 0         # x
15 01    # vload 1         # y
A3 00 06 # if_icmpgt +6    # if (x > y) goto <216:cond_true>
A7 00 08 # goto +8         # goto <217:cond_false>
# <216:cond_true>
15 00    # vload 0         # x
A7 00 05 # goto +5         # goto <218:cond_end>
# <217:cond_false>
15 01    # vload 1         # y
# <218:cond_end>
36 03    # vstore 3        # _result = ((x > y) ? x : y);
15 03    # vload 3         # _result
15 00    # vload 0         # x
9F 00 06 # if_cmpeq +6     # if (_result == x) goto <219:cond_true>
A7 00 08 # goto +8         # goto <220:cond_false>
# <219:cond_true>
10 01    # bipush 1        # true
A7 00 14 # goto +20        # goto <221:cond_end>
# <220:cond_false>
15 03    # vload 3         # _result
15 01    # vload 1         # y
9F 00 06 # if_cmpeq +6     # if (_result == y) goto <222:cond_true>
A7 00 08 # goto +8         # goto <223:cond_false>
# <222:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <224:cond_end>
# <223:cond_false>
10 00    # bipush 0        # false
# <224:cond_end>
# <221:cond_end>
14 14 EA # aldc 5354       # s[5354] = "/afs/andrew/course/15/122/lib/util.c0:13.4-13.41: @ensures annotation failed"
CF       # assert          # assert((_result == x) || (_result == y)) [failure message on stack]
15 03    # vload 3         # _result
15 00    # vload 0         # x
A2 00 06 # if_icmpge +6    # if (_result >= x) goto <225:cond_true>
A7 00 17 # goto +23        # goto <226:cond_false>
# <225:cond_true>
15 03    # vload 3         # _result
15 01    # vload 1         # y
A2 00 06 # if_icmpge +6    # if (_result >= y) goto <228:cond_true>
A7 00 08 # goto +8         # goto <229:cond_false>
# <228:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <230:cond_end>
# <229:cond_false>
10 00    # bipush 0        # false
# <230:cond_end>
A7 00 05 # goto +5         # goto <227:cond_end>
# <226:cond_false>
10 00    # bipush 0        # false
# <227:cond_end>
14 15 37 # aldc 5431       # s[5431] = "/afs/andrew/course/15/122/lib/util.c0:14.4-14.41: @ensures annotation failed"
CF       # assert          # assert((_result >= x) && (_result >= y)) [failure message on stack]
15 03    # vload 3         # _result
B0       # return          # 


#<max__1>
00 03             # number of arguments = 3
00 07             # number of local variables = 7
00 57             # code length = 87 bytes
15 00    # vload 0         # x
15 01    # vload 1         # y
14 13 54 # aldc 4948       # s[4948] = "/afs/andrew/course/15/122/lib/util.h0:22.1-24.49"
B8 00 1F # invokestatic 31 # max(x, y, "/afs/andrew/course/15/122/lib/util.h0:22.1-24.49")
36 03    # vstore 3        # _result = max(x, y, "/afs/andrew/course/15/122/lib/util.h0:22.1-24.49");
15 03    # vload 3         # _result
15 00    # vload 0         # x
9F 00 06 # if_cmpeq +6     # if (_result == x) goto <192:cond_true>
A7 00 08 # goto +8         # goto <193:cond_false>
# <192:cond_true>
10 01    # bipush 1        # true
A7 00 14 # goto +20        # goto <194:cond_end>
# <193:cond_false>
15 03    # vload 3         # _result
15 01    # vload 1         # y
9F 00 06 # if_cmpeq +6     # if (_result == y) goto <195:cond_true>
A7 00 08 # goto +8         # goto <196:cond_false>
# <195:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <197:cond_end>
# <196:cond_false>
10 00    # bipush 0        # false
# <197:cond_end>
# <194:cond_end>
14 13 85 # aldc 4997       # s[4997] = "/afs/andrew/course/15/122/lib/util.h0:23.6-23.43: @ensures annotation failed"
CF       # assert          # assert((_result == x) || (_result == y)) [failure message on stack]
15 03    # vload 3         # _result
15 00    # vload 0         # x
A2 00 06 # if_icmpge +6    # if (_result >= x) goto <198:cond_true>
A7 00 17 # goto +23        # goto <199:cond_false>
# <198:cond_true>
15 03    # vload 3         # _result
15 01    # vload 1         # y
A2 00 06 # if_icmpge +6    # if (_result >= y) goto <201:cond_true>
A7 00 08 # goto +8         # goto <202:cond_false>
# <201:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <203:cond_end>
# <202:cond_false>
10 00    # bipush 0        # false
# <203:cond_end>
A7 00 05 # goto +5         # goto <200:cond_end>
# <199:cond_false>
10 00    # bipush 0        # false
# <200:cond_end>
14 13 D2 # aldc 5074       # s[5074] = "/afs/andrew/course/15/122/lib/util.h0:24.6-24.43: @ensures annotation failed"
CF       # assert          # assert((_result >= x) && (_result >= y)) [failure message on stack]
15 03    # vload 3         # _result
B0       # return          # 


#<min>
00 03             # number of arguments = 3
00 07             # number of local variables = 7
00 5E             # code length = 94 bytes
15 00    # vload 0         # x
15 01    # vload 1         # y
A3 00 06 # if_icmpgt +6    # if (x > y) goto <231:cond_true>
A7 00 08 # goto +8         # goto <232:cond_false>
# <231:cond_true>
15 01    # vload 1         # y
A7 00 05 # goto +5         # goto <233:cond_end>
# <232:cond_false>
15 00    # vload 0         # x
# <233:cond_end>
36 03    # vstore 3        # _result = ((x > y) ? y : x);
15 03    # vload 3         # _result
15 00    # vload 0         # x
9F 00 06 # if_cmpeq +6     # if (_result == x) goto <234:cond_true>
A7 00 08 # goto +8         # goto <235:cond_false>
# <234:cond_true>
10 01    # bipush 1        # true
A7 00 14 # goto +20        # goto <236:cond_end>
# <235:cond_false>
15 03    # vload 3         # _result
15 01    # vload 1         # y
9F 00 06 # if_cmpeq +6     # if (_result == y) goto <237:cond_true>
A7 00 08 # goto +8         # goto <238:cond_false>
# <237:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <239:cond_end>
# <238:cond_false>
10 00    # bipush 0        # false
# <239:cond_end>
# <236:cond_end>
14 15 84 # aldc 5508       # s[5508] = "/afs/andrew/course/15/122/lib/util.c0:21.4-21.41: @ensures annotation failed"
CF       # assert          # assert((_result == x) || (_result == y)) [failure message on stack]
15 03    # vload 3         # _result
15 00    # vload 0         # x
A4 00 06 # if_icmple +6    # if (_result <= x) goto <240:cond_true>
A7 00 17 # goto +23        # goto <241:cond_false>
# <240:cond_true>
15 03    # vload 3         # _result
15 01    # vload 1         # y
A4 00 06 # if_icmple +6    # if (_result <= y) goto <243:cond_true>
A7 00 08 # goto +8         # goto <244:cond_false>
# <243:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <245:cond_end>
# <244:cond_false>
10 00    # bipush 0        # false
# <245:cond_end>
A7 00 05 # goto +5         # goto <242:cond_end>
# <241:cond_false>
10 00    # bipush 0        # false
# <242:cond_end>
14 15 D1 # aldc 5585       # s[5585] = "/afs/andrew/course/15/122/lib/util.c0:22.4-22.41: @ensures annotation failed"
CF       # assert          # assert((_result <= x) && (_result <= y)) [failure message on stack]
15 03    # vload 3         # _result
B0       # return          # 


#<min__1>
00 03             # number of arguments = 3
00 07             # number of local variables = 7
00 57             # code length = 87 bytes
15 00    # vload 0         # x
15 01    # vload 1         # y
14 14 1F # aldc 5151       # s[5151] = "/afs/andrew/course/15/122/lib/util.h0:27.1-29.49"
B8 00 21 # invokestatic 33 # min(x, y, "/afs/andrew/course/15/122/lib/util.h0:27.1-29.49")
36 03    # vstore 3        # _result = min(x, y, "/afs/andrew/course/15/122/lib/util.h0:27.1-29.49");
15 03    # vload 3         # _result
15 00    # vload 0         # x
9F 00 06 # if_cmpeq +6     # if (_result == x) goto <204:cond_true>
A7 00 08 # goto +8         # goto <205:cond_false>
# <204:cond_true>
10 01    # bipush 1        # true
A7 00 14 # goto +20        # goto <206:cond_end>
# <205:cond_false>
15 03    # vload 3         # _result
15 01    # vload 1         # y
9F 00 06 # if_cmpeq +6     # if (_result == y) goto <207:cond_true>
A7 00 08 # goto +8         # goto <208:cond_false>
# <207:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <209:cond_end>
# <208:cond_false>
10 00    # bipush 0        # false
# <209:cond_end>
# <206:cond_end>
14 14 50 # aldc 5200       # s[5200] = "/afs/andrew/course/15/122/lib/util.h0:28.6-28.43: @ensures annotation failed"
CF       # assert          # assert((_result == x) || (_result == y)) [failure message on stack]
15 03    # vload 3         # _result
15 00    # vload 0         # x
A4 00 06 # if_icmple +6    # if (_result <= x) goto <210:cond_true>
A7 00 17 # goto +23        # goto <211:cond_false>
# <210:cond_true>
15 03    # vload 3         # _result
15 01    # vload 1         # y
A4 00 06 # if_icmple +6    # if (_result <= y) goto <213:cond_true>
A7 00 08 # goto +8         # goto <214:cond_false>
# <213:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <215:cond_end>
# <214:cond_false>
10 00    # bipush 0        # false
# <215:cond_end>
A7 00 05 # goto +5         # goto <212:cond_end>
# <211:cond_false>
10 00    # bipush 0        # false
# <212:cond_end>
14 14 9D # aldc 5277       # s[5277] = "/afs/andrew/course/15/122/lib/util.h0:29.6-29.43: @ensures annotation failed"
CF       # assert          # assert((_result <= x) && (_result <= y)) [failure message on stack]
15 03    # vload 3         # _result
B0       # return          # 


#<int2hex>
00 02             # number of arguments = 2
00 07             # number of local variables = 7
00 AB             # code length = 171 bytes
10 02    # bipush 2        # 2
14 18 27 # aldc 6183       # s[6183] = "/afs/andrew/course/15/122/lib/util.c0:51.18-51.28"
B8 00 18 # invokestatic 24 # int_size__1("/afs/andrew/course/15/122/lib/util.c0:51.18-51.28")
68       # imul            # (2 * int_size__1("/afs/andrew/course/15/122/lib/util.c0:51.18-51.28"))
36 03    # vstore 3        # digits = (2 * int_size__1("/afs/andrew/course/15/122/lib/util.c0:51.18-51.28"));
15 03    # vload 3         # digits
10 01    # bipush 1        # 1
60       # iadd            # (digits + 1)
BC 01    # newarray 1      # alloc_array(char, (digits + 1))
36 04    # vstore 4        # s = alloc_array(char, (digits + 1));
15 04    # vload 4         # s
15 03    # vload 3         # digits
63       # aadds           # &s[digits]
10 00    # bipush 0        # '\000'
55       # cmstore         # s[digits] = '\0';
10 00    # bipush 0        # 0
36 05    # vstore 5        # i = 0;
# <269:loop>
A7 00 03 # goto +3         # goto <270:body>
# <270:body>
10 00    # bipush 0        # 0
15 05    # vload 5         # i
A4 00 06 # if_icmple +6    # if (0 <= i) goto <272:cond_true>
A7 00 17 # goto +23        # goto <273:cond_false>
# <272:cond_true>
15 05    # vload 5         # i
15 03    # vload 3         # digits
A4 00 06 # if_icmple +6    # if (i <= digits) goto <275:cond_true>
A7 00 08 # goto +8         # goto <276:cond_false>
# <275:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <277:cond_end>
# <276:cond_false>
10 00    # bipush 0        # false
# <277:cond_end>
A7 00 05 # goto +5         # goto <274:cond_end>
# <273:cond_false>
10 00    # bipush 0        # false
# <274:cond_end>
14 18 59 # aldc 6233       # s[6233] = "/afs/andrew/course/15/122/lib/util.c0:55.8-55.45: @loop_invariant annotation failed"
CF       # assert          # assert((0 <= i) && (i <= digits)) [failure message on stack]
15 05    # vload 5         # i
15 03    # vload 3         # digits
A1 00 06 # if_icmplt +6    # if (i < digits) goto <278:then>
A7 00 2B # goto +43        # goto <279:else>
# <278:then>
15 04    # vload 4         # s
15 03    # vload 3         # digits
15 05    # vload 5         # i
64       # isub            # (digits - i)
10 01    # bipush 1        # 1
64       # isub            # ((digits - i) - 1)
63       # aadds           # &s[((digits - i) - 1)]
15 00    # vload 0         # x
10 0F    # bipush 15       # 15
7E       # iand            # (x & 15)
14 18 AD # aldc 6317       # s[6317] = "/afs/andrew/course/15/122/lib/util.c0:57.23-57.43"
B8 00 24 # invokestatic 36 # hexdig2char((x & 15), "/afs/andrew/course/15/122/lib/util.c0:57.23-57.43")
55       # cmstore         # s[((digits - i) - 1)] = hexdig2char((x & 15), "/afs/andrew/course/15/122/lib/util.c0:57.23-57.43");
15 00    # vload 0         # x
10 04    # bipush 4        # 4
7A       # ishr            # (x >> 4)
36 00    # vstore 0        # x = (x >> 4);
15 05    # vload 5         # i
10 01    # bipush 1        # 1
60       # iadd            # 
36 05    # vstore 5        # i += 1;
A7 00 06 # goto +6         # goto <280:endif>
# <279:else>
A7 00 06 # goto +6         # break
# <280:endif>
A7 FF A4 # goto -92        # goto <269:loop>
# <271:exit>
15 04    # vload 4         # s
14 18 DF # aldc 6367       # s[6367] = "/afs/andrew/course/15/122/lib/util.c0:60.10-60.34"
B8 00 08 # invokestatic 8  # string_from_chararray__1(s, "/afs/andrew/course/15/122/lib/util.c0:60.10-60.34")
36 02    # vstore 2        # _result = string_from_chararray__1(s, "/afs/andrew/course/15/122/lib/util.c0:60.10-60.34");
15 02    # vload 2         # _result
B7 00 00 # invokenative 0  # string_length(_result)
10 02    # bipush 2        # 2
14 19 11 # aldc 6417       # s[6417] = "/afs/andrew/course/15/122/lib/util.c0:49.40-49.50"
B8 00 18 # invokestatic 24 # int_size__1("/afs/andrew/course/15/122/lib/util.c0:49.40-49.50")
68       # imul            # (2 * int_size__1("/afs/andrew/course/15/122/lib/util.c0:49.40-49.50"))
9F 00 06 # if_cmpeq +6     # if (string_length(_result) == (2 * int_size__1("/afs/andrew/course/15/122/lib/util.c0:49.40-49.50"))) goto <281:cond_true>
A7 00 08 # goto +8         # goto <282:cond_false>
# <281:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <283:cond_end>
# <282:cond_false>
10 00    # bipush 0        # false
# <283:cond_end>
14 19 43 # aldc 6467       # s[6467] = "/afs/andrew/course/15/122/lib/util.c0:49.4-49.51: @ensures annotation failed"
CF       # assert          # assert(string_length(_result) == (2 * int_size__1("/afs/andrew/course/15/122/lib/util.c0:49.40-49.50"))) [failure message on stack]
15 02    # vload 2         # _result
B0       # return          # 


#<hexdig2char>
00 02             # number of arguments = 2
00 07             # number of local variables = 7
00 93             # code length = 147 bytes
10 00    # bipush 0        # 0
15 00    # vload 0         # d
A4 00 06 # if_icmple +6    # if (0 <= d) goto <255:cond_true>
A7 00 17 # goto +23        # goto <256:cond_false>
# <255:cond_true>
15 00    # vload 0         # d
10 10    # bipush 16       # 16
A1 00 06 # if_icmplt +6    # if (d < 16) goto <258:cond_true>
A7 00 08 # goto +8         # goto <259:cond_false>
# <258:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <260:cond_end>
# <259:cond_false>
10 00    # bipush 0        # false
# <260:cond_end>
A7 00 05 # goto +5         # goto <257:cond_end>
# <256:cond_false>
10 00    # bipush 0        # false
# <257:cond_end>
14 16 FE # aldc 5886       # s[5886] = "/afs/andrew/course/15/122/lib/util.c0:37.4-37.30: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 17 4D # aldc 5965       # s[5965] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("/afs/andrew/course/15/122/lib/util.c0:37.4-37.30: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert((0 <= d) && (d < 16)) [failure message on stack]
10 00    # bipush 0        # 0
15 00    # vload 0         # d
A4 00 06 # if_icmple +6    # if (0 <= d) goto <264:and>
A7 00 26 # goto +38        # goto <262:else>
# <264:and>
15 00    # vload 0         # d
10 0A    # bipush 10       # 10
A1 00 06 # if_icmplt +6    # if (d < 10) goto <261:then>
A7 00 1C # goto +28        # goto <262:else>
# <261:then>
10 30    # bipush 48       # '0'
14 17 5F # aldc 5983       # s[5983] = "/afs/andrew/course/15/122/lib/util.c0:40.21-40.34"
B8 00 09 # invokestatic 9  # char_ord__1('0', "/afs/andrew/course/15/122/lib/util.c0:40.21-40.34")
15 00    # vload 0         # d
60       # iadd            # (char_ord__1('0', "/afs/andrew/course/15/122/lib/util.c0:40.21-40.34") + d)
14 17 91 # aldc 6033       # s[6033] = "/afs/andrew/course/15/122/lib/util.c0:40.12-40.39"
B8 00 0A # invokestatic 10 # char_chr__1((char_ord__1('0', "/afs/andrew/course/15/122/lib/util.c0:40.21-40.34") + d), "/afs/andrew/course/15/122/lib/util.c0:40.12-40.39")
36 02    # vstore 2        # _result = char_chr__1((char_ord__1('0', "/afs/andrew/course/15/122/lib/util.c0:40.21-40.34") + d), "/afs/andrew/course/15/122/lib/util.c0:40.12-40.39");
15 02    # vload 2         # _result
B0       # return          # 
A7 00 3A # goto +58        # goto <263:endif>
# <262:else>
10 0A    # bipush 10       # 10
15 00    # vload 0         # d
A4 00 06 # if_icmple +6    # if (10 <= d) goto <268:and>
A7 00 29 # goto +41        # goto <266:else>
# <268:and>
15 00    # vload 0         # d
10 10    # bipush 16       # 16
A1 00 06 # if_icmplt +6    # if (d < 16) goto <265:then>
A7 00 1F # goto +31        # goto <266:else>
# <265:then>
10 41    # bipush 65       # 'A'
14 17 C3 # aldc 6083       # s[6083] = "/afs/andrew/course/15/122/lib/util.c0:42.21-42.34"
B8 00 09 # invokestatic 9  # char_ord__1('A', "/afs/andrew/course/15/122/lib/util.c0:42.21-42.34")
15 00    # vload 0         # d
10 0A    # bipush 10       # 10
64       # isub            # (d - 10)
60       # iadd            # (char_ord__1('A', "/afs/andrew/course/15/122/lib/util.c0:42.21-42.34") + (d - 10))
14 17 F5 # aldc 6133       # s[6133] = "/afs/andrew/course/15/122/lib/util.c0:42.12-42.44"
B8 00 0A # invokestatic 10 # char_chr__1((char_ord__1('A', "/afs/andrew/course/15/122/lib/util.c0:42.21-42.34") + (d - 10)), "/afs/andrew/course/15/122/lib/util.c0:42.12-42.44")
36 02    # vstore 2        # _result = char_chr__1((char_ord__1('A', "/afs/andrew/course/15/122/lib/util.c0:42.21-42.34") + (d - 10)), "/afs/andrew/course/15/122/lib/util.c0:42.12-42.44");
15 02    # vload 2         # _result
B0       # return          # 
A7 00 0A # goto +10        # goto <267:endif>
# <266:else>
10 3F    # bipush 63       # '\?'
36 02    # vstore 2        # _result = '?';
15 02    # vload 2         # _result
B0       # return          # 
# <267:endif>
# <263:endif>


#<is_dll_pt>
00 02             # number of arguments = 2
00 08             # number of local variables = 8
00 F8             # code length = 248 bytes
15 00    # vload 0         # B
01       # aconst_null     # NULL
9F 00 06 # if_cmpeq +6     # if (B == NULL) goto <366:then>
A7 00 0D # goto +13        # goto <367:else>
# <366:then>
10 00    # bipush 0        # false
36 02    # vstore 2        # _result = false;
15 02    # vload 2         # _result
B0       # return          # 
A7 00 E8 # goto +232       # goto <368:endif>
# <367:else>
15 00    # vload 0         # B
62 00    # aaddf 0         # &B->start
2F       # amload          # B->start
36 03    # vstore 3        # st = B->start;
15 00    # vload 0         # B
62 08    # aaddf 8         # &B->point
2F       # amload          # B->point
36 04    # vstore 4        # pt = B->point;
15 00    # vload 0         # B
62 10    # aaddf 16        # &B->end
2F       # amload          # B->end
36 05    # vstore 5        # en = B->end;
15 03    # vload 3         # st
01       # aconst_null     # NULL
9F 00 18 # if_cmpeq +24    # if (st == NULL) goto <369:then>
A7 00 03 # goto +3         # goto <373:or>
# <373:or>
15 04    # vload 4         # pt
01       # aconst_null     # NULL
9F 00 0F # if_cmpeq +15    # if (pt == NULL) goto <369:then>
A7 00 03 # goto +3         # goto <372:or>
# <372:or>
15 05    # vload 5         # en
01       # aconst_null     # NULL
9F 00 06 # if_cmpeq +6     # if (en == NULL) goto <369:then>
A7 00 0D # goto +13        # goto <370:else>
# <369:then>
10 00    # bipush 0        # false
36 02    # vstore 2        # _result = false;
15 02    # vload 2         # _result
B0       # return          # 
A7 00 AE # goto +174       # goto <371:endif>
# <370:else>
15 03    # vload 3         # st
15 04    # vload 4         # pt
15 05    # vload 5         # en
14 1B EE # aldc 7150       # s[7150] = "dll_pt.c0:128.16-128.37"
B8 00 2F # invokestatic 47 # dll_empty(st, pt, en, "dll_pt.c0:128.16-128.37")
10 01    # bipush 1        # true
9F 00 06 # if_cmpeq +6     # if (dll_empty(st, pt, en, "dll_pt.c0:128.16-128.37") == true) goto <374:then>
A7 00 14 # goto +20        # goto <375:else>
# <374:then>
14 1C 06 # aldc 7174       # s[7174] = "1.5"
B7 00 0D # invokenative 13 # println("1.5")
57       # pop             # (ignore result)
10 00    # bipush 0        # false
36 02    # vstore 2        # _result = false;
15 02    # vload 2         # _result
B0       # return          # 
A7 00 89 # goto +137       # goto <376:endif>
# <375:else>
15 03    # vload 3         # st
15 05    # vload 5         # en
14 1C 0A # aldc 7178       # s[7178] = "dll_pt.c0:131.23-131.46"
B8 00 2B # invokestatic 43 # is_segment_next(st, en, "dll_pt.c0:131.23-131.46")
10 01    # bipush 1        # true
9F 00 06 # if_cmpeq +6     # if (is_segment_next(st, en, "dll_pt.c0:131.23-131.46") == true) goto <377:cond_true>
A7 00 12 # goto +18        # goto <378:cond_false>
# <377:cond_true>
15 03    # vload 3         # st
15 04    # vload 4         # pt
15 05    # vload 5         # en
14 1C 22 # aldc 7202       # s[7202] = "dll_pt.c0:131.50-131.75"
B8 00 2C # invokestatic 44 # pass_point_next(st, pt, en, "dll_pt.c0:131.50-131.75")
A7 00 05 # goto +5         # goto <379:cond_end>
# <378:cond_false>
10 00    # bipush 0        # false
# <379:cond_end>
36 06    # vstore 6        # next = (is_segment_next(st, en, "dll_pt.c0:131.23-131.46") && pass_point_next(st, pt, en, "dll_pt.c0:131.50-131.75"));
15 06    # vload 6         # next
10 00    # bipush 0        # false
9F 00 06 # if_cmpeq +6     # if (next == false) goto <380:then>
A7 00 0D # goto +13        # goto <381:else>
# <380:then>
14 1C 3A # aldc 7226       # s[7226] = "NEXT IS FALSE"
B7 00 0D # invokenative 13 # println("NEXT IS FALSE")
57       # pop             # (ignore result)
A7 00 03 # goto +3         # goto <382:endif>
# <381:else>
# <382:endif>
15 05    # vload 5         # en
15 03    # vload 3         # st
14 1C 48 # aldc 7240       # s[7240] = "dll_pt.c0:133.23-133.45"
B8 00 2D # invokestatic 45 # is_segment_prev(en, st, "dll_pt.c0:133.23-133.45")
10 01    # bipush 1        # true
9F 00 06 # if_cmpeq +6     # if (is_segment_prev(en, st, "dll_pt.c0:133.23-133.45") == true) goto <383:cond_true>
A7 00 12 # goto +18        # goto <384:cond_false>
# <383:cond_true>
15 05    # vload 5         # en
15 04    # vload 4         # pt
15 03    # vload 3         # st
14 1C 60 # aldc 7264       # s[7264] = "dll_pt.c0:133.49-133.74"
B8 00 2E # invokestatic 46 # pass_point_prev(en, pt, st, "dll_pt.c0:133.49-133.74")
A7 00 05 # goto +5         # goto <385:cond_end>
# <384:cond_false>
10 00    # bipush 0        # false
# <385:cond_end>
36 07    # vstore 7        # prev = (is_segment_prev(en, st, "dll_pt.c0:133.23-133.45") && pass_point_prev(en, pt, st, "dll_pt.c0:133.49-133.74"));
15 06    # vload 6         # next
10 01    # bipush 1        # true
9F 00 06 # if_cmpeq +6     # if (next == true) goto <389:and>
A7 00 1A # goto +26        # goto <387:cond_false>
# <389:and>
15 07    # vload 7         # prev
10 01    # bipush 1        # true
9F 00 06 # if_cmpeq +6     # if (prev == true) goto <386:cond_true>
A7 00 10 # goto +16        # goto <387:cond_false>
# <386:cond_true>
15 03    # vload 3         # st
15 05    # vload 5         # en
14 1C 78 # aldc 7288       # s[7288] = "dll_pt.c0:134.34-134.58"
B8 00 30 # invokestatic 48 # next_prev_mirror(st, en, "dll_pt.c0:134.34-134.58")
A7 00 05 # goto +5         # goto <388:cond_end>
# <387:cond_false>
10 00    # bipush 0        # false
# <388:cond_end>
36 02    # vstore 2        # _result = ((next && prev) && next_prev_mirror(st, en, "dll_pt.c0:134.34-134.58"));
15 02    # vload 2         # _result
B0       # return          # 
# <376:endif>
# <371:endif>
# <368:endif>


#<dll_pt_at_left>
00 02             # number of arguments = 2
00 08             # number of local variables = 8
00 78             # code length = 120 bytes
15 00    # vload 0         # B
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (B != NULL) goto <390:cond_true>
A7 00 08 # goto +8         # goto <391:cond_false>
# <390:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <392:cond_end>
# <391:cond_false>
10 00    # bipush 0        # false
# <392:cond_end>
14 1C 90 # aldc 7312       # s[7312] = "dll_pt.c0:142.4-142.24: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 1C C5 # aldc 7365       # s[7365] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("dll_pt.c0:142.4-142.24: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert(B != NULL) [failure message on stack]
15 00    # vload 0         # B
14 1C D7 # aldc 7383       # s[7383] = "dll_pt.c0:143.13-143.25"
B8 00 25 # invokestatic 37 # is_dll_pt(B, "dll_pt.c0:143.13-143.25")
14 1C EF # aldc 7407       # s[7407] = "dll_pt.c0:143.4-143.26: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 1D 24 # aldc 7460       # s[7460] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("dll_pt.c0:143.4-143.26: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assertis_dll_pt(B, "dll_pt.c0:143.13-143.25") [failure message on stack]
15 00    # vload 0         # B
62 08    # aaddf 8         # &B->point
2F       # amload          # B->point
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (B->point != NULL) goto <393:cond_true>
A7 00 08 # goto +8         # goto <394:cond_false>
# <393:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <395:cond_end>
# <394:cond_false>
10 00    # bipush 0        # false
# <395:cond_end>
14 1D 36 # aldc 7478       # s[7478] = "dll_pt.c0:146.7-146.33: @assert annotation failed"
CF       # assert          # assert(B->point != NULL) [failure message on stack]
15 00    # vload 0         # B
62 08    # aaddf 8         # &B->point
2F       # amload          # B->point
62 10    # aaddf 16        # &B->point->prev
2F       # amload          # B->point->prev
15 00    # vload 0         # B
62 00    # aaddf 0         # &B->start
2F       # amload          # B->start
9F 00 06 # if_cmpeq +6     # if (B->point->prev == B->start) goto <396:cond_true>
A7 00 08 # goto +8         # goto <397:cond_false>
# <396:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <398:cond_end>
# <397:cond_false>
10 00    # bipush 0        # false
# <398:cond_end>
36 02    # vstore 2        # _result = (B->point->prev == B->start);
15 00    # vload 0         # B
14 1D 68 # aldc 7528       # s[7528] = "dll_pt.c0:144.12-144.24"
B8 00 25 # invokestatic 37 # is_dll_pt(B, "dll_pt.c0:144.12-144.24")
14 1D 80 # aldc 7552       # s[7552] = "dll_pt.c0:144.4-144.25: @ensures annotation failed"
CF       # assert          # assertis_dll_pt(B, "dll_pt.c0:144.12-144.24") [failure message on stack]
15 02    # vload 2         # _result
B0       # return          # 


#<dll_pt_at_right>
00 02             # number of arguments = 2
00 08             # number of local variables = 8
00 78             # code length = 120 bytes
15 00    # vload 0         # B
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (B != NULL) goto <399:cond_true>
A7 00 08 # goto +8         # goto <400:cond_false>
# <399:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <401:cond_end>
# <400:cond_false>
10 00    # bipush 0        # false
# <401:cond_end>
14 1D B3 # aldc 7603       # s[7603] = "dll_pt.c0:151.4-151.24: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 1D E8 # aldc 7656       # s[7656] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("dll_pt.c0:151.4-151.24: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert(B != NULL) [failure message on stack]
15 00    # vload 0         # B
14 1D FA # aldc 7674       # s[7674] = "dll_pt.c0:152.13-152.25"
B8 00 25 # invokestatic 37 # is_dll_pt(B, "dll_pt.c0:152.13-152.25")
14 1E 12 # aldc 7698       # s[7698] = "dll_pt.c0:152.4-152.26: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 1E 47 # aldc 7751       # s[7751] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("dll_pt.c0:152.4-152.26: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assertis_dll_pt(B, "dll_pt.c0:152.13-152.25") [failure message on stack]
15 00    # vload 0         # B
62 08    # aaddf 8         # &B->point
2F       # amload          # B->point
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (B->point != NULL) goto <402:cond_true>
A7 00 08 # goto +8         # goto <403:cond_false>
# <402:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <404:cond_end>
# <403:cond_false>
10 00    # bipush 0        # false
# <404:cond_end>
14 1E 59 # aldc 7769       # s[7769] = "dll_pt.c0:155.7-155.33: @assert annotation failed"
CF       # assert          # assert(B->point != NULL) [failure message on stack]
15 00    # vload 0         # B
62 08    # aaddf 8         # &B->point
2F       # amload          # B->point
62 08    # aaddf 8         # &B->point->next
2F       # amload          # B->point->next
15 00    # vload 0         # B
62 10    # aaddf 16        # &B->end
2F       # amload          # B->end
9F 00 06 # if_cmpeq +6     # if (B->point->next == B->end) goto <405:cond_true>
A7 00 08 # goto +8         # goto <406:cond_false>
# <405:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <407:cond_end>
# <406:cond_false>
10 00    # bipush 0        # false
# <407:cond_end>
36 02    # vstore 2        # _result = (B->point->next == B->end);
15 00    # vload 0         # B
14 1E 8B # aldc 7819       # s[7819] = "dll_pt.c0:153.12-153.24"
B8 00 25 # invokestatic 37 # is_dll_pt(B, "dll_pt.c0:153.12-153.24")
14 1E A3 # aldc 7843       # s[7843] = "dll_pt.c0:153.4-153.25: @ensures annotation failed"
CF       # assert          # assertis_dll_pt(B, "dll_pt.c0:153.12-153.24") [failure message on stack]
15 02    # vload 2         # _result
B0       # return          # 


#<dll_pt_forward>
00 02             # number of arguments = 2
00 08             # number of local variables = 8
00 96             # code length = 150 bytes
15 00    # vload 0         # B
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (B != NULL) goto <408:cond_true>
A7 00 08 # goto +8         # goto <409:cond_false>
# <408:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <410:cond_end>
# <409:cond_false>
10 00    # bipush 0        # false
# <410:cond_end>
14 1E D6 # aldc 7894       # s[7894] = "dll_pt.c0:160.4-160.23: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 1F 0B # aldc 7947       # s[7947] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("dll_pt.c0:160.4-160.23: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert(B != NULL) [failure message on stack]
15 00    # vload 0         # B
14 1F 1D # aldc 7965       # s[7965] = "dll_pt.c0:161.13-161.25"
B8 00 25 # invokestatic 37 # is_dll_pt(B, "dll_pt.c0:161.13-161.25")
14 1F 35 # aldc 7989       # s[7989] = "dll_pt.c0:161.4-161.26: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 1F 6A # aldc 8042       # s[8042] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("dll_pt.c0:161.4-161.26: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assertis_dll_pt(B, "dll_pt.c0:161.13-161.25") [failure message on stack]
15 00    # vload 0         # B
14 1F 7C # aldc 8060       # s[8060] = "dll_pt.c0:162.15-162.33"
B8 00 27 # invokestatic 39 # dll_pt_at_right(B, "dll_pt.c0:162.15-162.33")
10 01    # bipush 1        # 
82       # ixor            # !(dll_pt_at_right(B, "dll_pt.c0:162.15-162.33"))
14 1F 94 # aldc 8084       # s[8084] = "dll_pt.c0:162.4-162.35: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 1F C9 # aldc 8137       # s[8137] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("dll_pt.c0:162.4-162.35: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert!(dll_pt_at_right(B, "dll_pt.c0:162.15-162.33")) [failure message on stack]
15 00    # vload 0         # B
62 08    # aaddf 8         # &B->point
2F       # amload          # B->point
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (B->point != NULL) goto <411:cond_true>
A7 00 08 # goto +8         # goto <412:cond_false>
# <411:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <413:cond_end>
# <412:cond_false>
10 00    # bipush 0        # false
# <413:cond_end>
14 1F DB # aldc 8155       # s[8155] = "dll_pt.c0:165.7-165.32: @assert annotation failed"
CF       # assert          # assert(B->point != NULL) [failure message on stack]
15 00    # vload 0         # B
62 08    # aaddf 8         # &B->point
2F       # amload          # B->point
62 08    # aaddf 8         # &B->point->next
2F       # amload          # B->point->next
36 02    # vstore 2        # new_pt = B->point->next;
15 00    # vload 0         # B
62 08    # aaddf 8         # &B->point
15 02    # vload 2         # new_pt
4F       # amstore         # B->point = new_pt;
15 00    # vload 0         # B
14 20 0D # aldc 8205       # s[8205] = "dll_pt.c0:163.12-163.24"
B8 00 25 # invokestatic 37 # is_dll_pt(B, "dll_pt.c0:163.12-163.24")
14 20 25 # aldc 8229       # s[8229] = "dll_pt.c0:163.4-163.25: @ensures annotation failed"
CF       # assert          # assertis_dll_pt(B, "dll_pt.c0:163.12-163.24") [failure message on stack]
10 00    # bipush 0        # dummy return value
B0       # return          # 
15 00    # vload 0         # B
14 20 58 # aldc 8280       # s[8280] = "dll_pt.c0:163.12-163.24"
B8 00 25 # invokestatic 37 # is_dll_pt(B, "dll_pt.c0:163.12-163.24")
14 20 70 # aldc 8304       # s[8304] = "dll_pt.c0:163.4-163.25: @ensures annotation failed"
CF       # assert          # assertis_dll_pt(B, "dll_pt.c0:163.12-163.24") [failure message on stack]
10 00    # bipush 0        # dummy return value
B0       # return          # 


#<dll_pt_backward>
00 02             # number of arguments = 2
00 08             # number of local variables = 8
00 96             # code length = 150 bytes
15 00    # vload 0         # B
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (B != NULL) goto <414:cond_true>
A7 00 08 # goto +8         # goto <415:cond_false>
# <414:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <416:cond_end>
# <415:cond_false>
10 00    # bipush 0        # false
# <416:cond_end>
14 20 A3 # aldc 8355       # s[8355] = "dll_pt.c0:172.4-172.23: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 20 D8 # aldc 8408       # s[8408] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("dll_pt.c0:172.4-172.23: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert(B != NULL) [failure message on stack]
15 00    # vload 0         # B
14 20 EA # aldc 8426       # s[8426] = "dll_pt.c0:173.13-173.25"
B8 00 25 # invokestatic 37 # is_dll_pt(B, "dll_pt.c0:173.13-173.25")
14 21 02 # aldc 8450       # s[8450] = "dll_pt.c0:173.4-173.26: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 21 37 # aldc 8503       # s[8503] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("dll_pt.c0:173.4-173.26: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assertis_dll_pt(B, "dll_pt.c0:173.13-173.25") [failure message on stack]
15 00    # vload 0         # B
14 21 49 # aldc 8521       # s[8521] = "dll_pt.c0:174.15-174.32"
B8 00 26 # invokestatic 38 # dll_pt_at_left(B, "dll_pt.c0:174.15-174.32")
10 01    # bipush 1        # 
82       # ixor            # !(dll_pt_at_left(B, "dll_pt.c0:174.15-174.32"))
14 21 61 # aldc 8545       # s[8545] = "dll_pt.c0:174.4-174.34: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 21 96 # aldc 8598       # s[8598] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("dll_pt.c0:174.4-174.34: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert!(dll_pt_at_left(B, "dll_pt.c0:174.15-174.32")) [failure message on stack]
15 00    # vload 0         # B
62 08    # aaddf 8         # &B->point
2F       # amload          # B->point
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (B->point != NULL) goto <417:cond_true>
A7 00 08 # goto +8         # goto <418:cond_false>
# <417:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <419:cond_end>
# <418:cond_false>
10 00    # bipush 0        # false
# <419:cond_end>
14 21 A8 # aldc 8616       # s[8616] = "dll_pt.c0:177.8-177.33: @assert annotation failed"
CF       # assert          # assert(B->point != NULL) [failure message on stack]
15 00    # vload 0         # B
62 08    # aaddf 8         # &B->point
2F       # amload          # B->point
62 10    # aaddf 16        # &B->point->prev
2F       # amload          # B->point->prev
36 02    # vstore 2        # new_pt = B->point->prev;
15 00    # vload 0         # B
62 08    # aaddf 8         # &B->point
15 02    # vload 2         # new_pt
4F       # amstore         # B->point = new_pt;
15 00    # vload 0         # B
14 21 DA # aldc 8666       # s[8666] = "dll_pt.c0:175.12-175.24"
B8 00 25 # invokestatic 37 # is_dll_pt(B, "dll_pt.c0:175.12-175.24")
14 21 F2 # aldc 8690       # s[8690] = "dll_pt.c0:175.4-175.25: @ensures annotation failed"
CF       # assert          # assertis_dll_pt(B, "dll_pt.c0:175.12-175.24") [failure message on stack]
10 00    # bipush 0        # dummy return value
B0       # return          # 
15 00    # vload 0         # B
14 22 25 # aldc 8741       # s[8741] = "dll_pt.c0:175.12-175.24"
B8 00 25 # invokestatic 37 # is_dll_pt(B, "dll_pt.c0:175.12-175.24")
14 22 3D # aldc 8765       # s[8765] = "dll_pt.c0:175.4-175.25: @ensures annotation failed"
CF       # assert          # assertis_dll_pt(B, "dll_pt.c0:175.12-175.24") [failure message on stack]
10 00    # bipush 0        # dummy return value
B0       # return          # 


#<dll_pt_delete>
00 02             # number of arguments = 2
00 08             # number of local variables = 8
01 5B             # code length = 347 bytes
15 00    # vload 0         # B
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (B != NULL) goto <420:cond_true>
A7 00 08 # goto +8         # goto <421:cond_false>
# <420:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <422:cond_end>
# <421:cond_false>
10 00    # bipush 0        # false
# <422:cond_end>
14 22 70 # aldc 8816       # s[8816] = "dll_pt.c0:184.4-184.23: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 22 A5 # aldc 8869       # s[8869] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("dll_pt.c0:184.4-184.23: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert(B != NULL) [failure message on stack]
15 00    # vload 0         # B
14 22 B7 # aldc 8887       # s[8887] = "dll_pt.c0:185.13-185.25"
B8 00 25 # invokestatic 37 # is_dll_pt(B, "dll_pt.c0:185.13-185.25")
14 22 CF # aldc 8911       # s[8911] = "dll_pt.c0:185.4-185.26: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 23 04 # aldc 8964       # s[8964] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("dll_pt.c0:185.4-185.26: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assertis_dll_pt(B, "dll_pt.c0:185.13-185.25") [failure message on stack]
15 00    # vload 0         # B
62 00    # aaddf 0         # &B->start
2F       # amload          # B->start
15 00    # vload 0         # B
62 08    # aaddf 8         # &B->point
2F       # amload          # B->point
15 00    # vload 0         # B
62 10    # aaddf 16        # &B->end
2F       # amload          # B->end
14 23 16 # aldc 8982       # s[8982] = "dll_pt.c0:186.15-186.52"
B8 00 2F # invokestatic 47 # dll_empty(B->start, B->point, B->end, "dll_pt.c0:186.15-186.52")
10 01    # bipush 1        # 
82       # ixor            # !(dll_empty(B->start, B->point, B->end, "dll_pt.c0:186.15-186.52"))
14 23 2E # aldc 9006       # s[9006] = "dll_pt.c0:186.4-186.54: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 23 63 # aldc 9059       # s[9059] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("dll_pt.c0:186.4-186.54: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert!(dll_empty(B->start, B->point, B->end, "dll_pt.c0:186.15-186.52")) [failure message on stack]
15 00    # vload 0         # B
14 23 75 # aldc 9077       # s[9077] = "dll_pt.c0:188.15-188.33"
B8 00 27 # invokestatic 39 # dll_pt_at_right(B, "dll_pt.c0:188.15-188.33")
10 01    # bipush 1        # true
9F 00 06 # if_cmpeq +6     # if (dll_pt_at_right(B, "dll_pt.c0:188.15-188.33") == true) goto <423:cond_true>
A7 00 0E # goto +14        # goto <424:cond_false>
# <423:cond_true>
15 00    # vload 0         # B
14 23 8D # aldc 9101       # s[9101] = "dll_pt.c0:188.37-188.54"
B8 00 26 # invokestatic 38 # dll_pt_at_left(B, "dll_pt.c0:188.37-188.54")
A7 00 05 # goto +5         # goto <425:cond_end>
# <424:cond_false>
10 00    # bipush 0        # false
# <425:cond_end>
10 01    # bipush 1        # 
82       # ixor            # !((dll_pt_at_right(B, "dll_pt.c0:188.15-188.33") && dll_pt_at_left(B, "dll_pt.c0:188.37-188.54")))
14 23 A5 # aldc 9125       # s[9125] = "dll_pt.c0:188.4-188.57: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 23 DA # aldc 9178       # s[9178] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("dll_pt.c0:188.4-188.57: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert!((dll_pt_at_right(B, "dll_pt.c0:188.15-188.33") && dll_pt_at_left(B, "dll_pt.c0:188.37-188.54"))) [failure message on stack]
15 00    # vload 0         # B
62 08    # aaddf 8         # &B->point
2F       # amload          # B->point
62 08    # aaddf 8         # &B->point->next
2F       # amload          # B->point->next
15 00    # vload 0         # B
62 10    # aaddf 16        # &B->end
2F       # amload          # B->end
9F 00 06 # if_cmpeq +6     # if (B->point->next == B->end) goto <429:and>
A7 00 28 # goto +40        # goto <427:else>
# <429:and>
15 00    # vload 0         # B
62 08    # aaddf 8         # &B->point
2F       # amload          # B->point
62 10    # aaddf 16        # &B->point->prev
2F       # amload          # B->point->prev
15 00    # vload 0         # B
62 00    # aaddf 0         # &B->start
2F       # amload          # B->start
9F 00 06 # if_cmpeq +6     # if (B->point->prev == B->start) goto <426:then>
A7 00 15 # goto +21        # goto <427:else>
# <426:then>
15 00    # vload 0         # B
14 23 EC # aldc 9196       # s[9196] = "dll_pt.c0:189.12-189.24"
B8 00 25 # invokestatic 37 # is_dll_pt(B, "dll_pt.c0:189.12-189.24")
14 24 04 # aldc 9220       # s[9220] = "dll_pt.c0:189.4-189.26: @ensures annotation failed"
CF       # assert          # assertis_dll_pt(B, "dll_pt.c0:189.12-189.24") [failure message on stack]
10 00    # bipush 0        # dummy return value
B0       # return          # 
A7 00 8B # goto +139       # goto <428:endif>
# <427:else>
15 00    # vload 0         # B
62 08    # aaddf 8         # &B->point
2F       # amload          # B->point
62 08    # aaddf 8         # &B->point->next
2F       # amload          # B->point->next
36 02    # vstore 2        # new_pt = B->point->next;
15 00    # vload 0         # B
62 08    # aaddf 8         # &B->point
2F       # amload          # B->point
62 10    # aaddf 16        # &B->point->prev
2F       # amload          # B->point->prev
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (B->point->prev != NULL) goto <430:cond_true>
A7 00 1C # goto +28        # goto <431:cond_false>
# <430:cond_true>
15 00    # vload 0         # B
62 08    # aaddf 8         # &B->point
2F       # amload          # B->point
62 08    # aaddf 8         # &B->point->next
2F       # amload          # B->point->next
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (B->point->next != NULL) goto <433:cond_true>
A7 00 08 # goto +8         # goto <434:cond_false>
# <433:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <435:cond_end>
# <434:cond_false>
10 00    # bipush 0        # false
# <435:cond_end>
A7 00 05 # goto +5         # goto <432:cond_end>
# <431:cond_false>
10 00    # bipush 0        # false
# <432:cond_end>
14 24 37 # aldc 9271       # s[9271] = "dll_pt.c0:195.12-195.69: @assert annotation failed"
CF       # assert          # assert((B->point->prev != NULL) && (B->point->next != NULL)) [failure message on stack]
15 00    # vload 0         # B
62 08    # aaddf 8         # &B->point
2F       # amload          # B->point
62 10    # aaddf 16        # &B->point->prev
2F       # amload          # B->point->prev
62 08    # aaddf 8         # &B->point->prev->next
15 02    # vload 2         # new_pt
4F       # amstore         # B->point->prev->next = new_pt;
15 00    # vload 0         # B
62 08    # aaddf 8         # &B->point
2F       # amload          # B->point
62 08    # aaddf 8         # &B->point->next
2F       # amload          # B->point->next
62 10    # aaddf 16        # &B->point->next->prev
15 00    # vload 0         # B
62 08    # aaddf 8         # &B->point
2F       # amload          # B->point
62 10    # aaddf 16        # &B->point->prev
2F       # amload          # B->point->prev
4F       # amstore         # B->point->next->prev = B->point->prev;
15 02    # vload 2         # new_pt
15 00    # vload 0         # B
62 10    # aaddf 16        # &B->end
2F       # amload          # B->end
9F 00 06 # if_cmpeq +6     # if (new_pt == B->end) goto <436:then>
A7 00 10 # goto +16        # goto <437:else>
# <436:then>
15 00    # vload 0         # B
62 08    # aaddf 8         # &B->point
15 02    # vload 2         # new_pt
62 10    # aaddf 16        # &new_pt->prev
2F       # amload          # new_pt->prev
4F       # amstore         # B->point = new_pt->prev;
A7 00 0A # goto +10        # goto <438:endif>
# <437:else>
15 00    # vload 0         # B
62 08    # aaddf 8         # &B->point
15 02    # vload 2         # new_pt
4F       # amstore         # B->point = new_pt;
# <438:endif>
15 00    # vload 0         # B
14 24 6A # aldc 9322       # s[9322] = "dll_pt.c0:189.12-189.24"
B8 00 25 # invokestatic 37 # is_dll_pt(B, "dll_pt.c0:189.12-189.24")
14 24 82 # aldc 9346       # s[9346] = "dll_pt.c0:189.4-189.26: @ensures annotation failed"
CF       # assert          # assertis_dll_pt(B, "dll_pt.c0:189.12-189.24") [failure message on stack]
10 00    # bipush 0        # dummy return value
B0       # return          # 
# <428:endif>
15 00    # vload 0         # B
14 24 B5 # aldc 9397       # s[9397] = "dll_pt.c0:189.12-189.24"
B8 00 25 # invokestatic 37 # is_dll_pt(B, "dll_pt.c0:189.12-189.24")
14 24 CD # aldc 9421       # s[9421] = "dll_pt.c0:189.4-189.26: @ensures annotation failed"
CF       # assert          # assertis_dll_pt(B, "dll_pt.c0:189.12-189.24") [failure message on stack]
10 00    # bipush 0        # dummy return value
B0       # return          # 


#<is_segment_next>
00 03             # number of arguments = 3
00 07             # number of local variables = 7
00 69             # code length = 105 bytes
15 00    # vload 0         # start
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (start != NULL) goto <284:cond_true>
A7 00 16 # goto +22        # goto <285:cond_false>
# <284:cond_true>
15 01    # vload 1         # end
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (end != NULL) goto <287:cond_true>
A7 00 08 # goto +8         # goto <288:cond_false>
# <287:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <289:cond_end>
# <288:cond_false>
10 00    # bipush 0        # false
# <289:cond_end>
A7 00 05 # goto +5         # goto <286:cond_end>
# <285:cond_false>
10 00    # bipush 0        # false
# <286:cond_end>
14 19 90 # aldc 6544       # s[6544] = "dll_pt.c0:43.4-43.43: @requires annotation failed\n"
15 02    # vload 2         # _caller
14 19 C3 # aldc 6595       # s[6595] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("dll_pt.c0:43.4-43.43: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert((start != NULL) && (end != NULL)) [failure message on stack]
15 00    # vload 0         # start
15 01    # vload 1         # end
9F 00 06 # if_cmpeq +6     # if (start == end) goto <290:then>
A7 00 0D # goto +13        # goto <291:else>
# <290:then>
10 01    # bipush 1        # true
36 03    # vstore 3        # _result = true;
15 03    # vload 3         # _result
B0       # return          # 
A7 00 2B # goto +43        # goto <292:endif>
# <291:else>
15 00    # vload 0         # start
62 08    # aaddf 8         # &start->next
2F       # amload          # start->next
01       # aconst_null     # NULL
9F 00 06 # if_cmpeq +6     # if (start->next == NULL) goto <293:then>
A7 00 0D # goto +13        # goto <294:else>
# <293:then>
10 00    # bipush 0        # false
36 03    # vstore 3        # _result = false;
15 03    # vload 3         # _result
B0       # return          # 
A7 00 15 # goto +21        # goto <295:endif>
# <294:else>
15 00    # vload 0         # start
62 08    # aaddf 8         # &start->next
2F       # amload          # start->next
15 01    # vload 1         # end
14 19 D5 # aldc 6613       # s[6613] = "dll_pt.c0:48.18-48.51"
B8 00 2B # invokestatic 43 # is_segment_next(start->next, end, "dll_pt.c0:48.18-48.51")
36 03    # vstore 3        # _result = is_segment_next(start->next, end, "dll_pt.c0:48.18-48.51");
15 03    # vload 3         # _result
B0       # return          # 
# <295:endif>
# <292:endif>


#<pass_point_next>
00 04             # number of arguments = 4
00 07             # number of local variables = 7
00 72             # code length = 114 bytes
15 00    # vload 0         # start
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (start != NULL) goto <299:and>
A7 00 1F # goto +31        # goto <297:cond_false>
# <299:and>
15 01    # vload 1         # point
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (point != NULL) goto <296:cond_true>
A7 00 16 # goto +22        # goto <297:cond_false>
# <296:cond_true>
15 02    # vload 2         # end
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (end != NULL) goto <300:cond_true>
A7 00 08 # goto +8         # goto <301:cond_false>
# <300:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <302:cond_end>
# <301:cond_false>
10 00    # bipush 0        # false
# <302:cond_end>
A7 00 05 # goto +5         # goto <298:cond_end>
# <297:cond_false>
10 00    # bipush 0        # false
# <298:cond_end>
14 19 EB # aldc 6635       # s[6635] = "dll_pt.c0:54.4-54.59: @requires annotation failed\n"
15 03    # vload 3         # _caller
14 1A 1E # aldc 6686       # s[6686] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("dll_pt.c0:54.4-54.59: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert(((start != NULL) && (point != NULL)) && (end != NULL)) [failure message on stack]
15 01    # vload 1         # point
15 00    # vload 0         # start
9F 00 06 # if_cmpeq +6     # if (point == start) goto <303:then>
A7 00 0D # goto +13        # goto <304:else>
# <303:then>
10 01    # bipush 1        # true
36 04    # vstore 4        # _result = true;
15 04    # vload 4         # _result
B0       # return          # 
A7 00 2B # goto +43        # goto <305:endif>
# <304:else>
15 00    # vload 0         # start
15 02    # vload 2         # end
9F 00 06 # if_cmpeq +6     # if (start == end) goto <306:then>
A7 00 0D # goto +13        # goto <307:else>
# <306:then>
10 00    # bipush 0        # false
36 04    # vstore 4        # _result = false;
15 04    # vload 4         # _result
B0       # return          # 
A7 00 17 # goto +23        # goto <308:endif>
# <307:else>
15 00    # vload 0         # start
62 08    # aaddf 8         # &start->next
2F       # amload          # start->next
15 01    # vload 1         # point
15 02    # vload 2         # end
14 1A 30 # aldc 6704       # s[6704] = "dll_pt.c0:66.16-66.56"
B8 00 2C # invokestatic 44 # pass_point_next(start->next, point, end, "dll_pt.c0:66.16-66.56")
36 04    # vstore 4        # _result = pass_point_next(start->next, point, end, "dll_pt.c0:66.16-66.56");
15 04    # vload 4         # _result
B0       # return          # 
# <308:endif>
# <305:endif>


#<is_segment_prev>
00 03             # number of arguments = 3
00 07             # number of local variables = 7
00 69             # code length = 105 bytes
15 01    # vload 1         # start
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (start != NULL) goto <309:cond_true>
A7 00 16 # goto +22        # goto <310:cond_false>
# <309:cond_true>
15 00    # vload 0         # end
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (end != NULL) goto <312:cond_true>
A7 00 08 # goto +8         # goto <313:cond_false>
# <312:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <314:cond_end>
# <313:cond_false>
10 00    # bipush 0        # false
# <314:cond_end>
A7 00 05 # goto +5         # goto <311:cond_end>
# <310:cond_false>
10 00    # bipush 0        # false
# <311:cond_end>
14 1A 46 # aldc 6726       # s[6726] = "dll_pt.c0:71.4-71.41: @requires annotation failed\n"
15 02    # vload 2         # _caller
14 1A 79 # aldc 6777       # s[6777] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("dll_pt.c0:71.4-71.41: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert((start != NULL) && (end != NULL)) [failure message on stack]
15 00    # vload 0         # end
15 01    # vload 1         # start
9F 00 06 # if_cmpeq +6     # if (end == start) goto <315:then>
A7 00 0D # goto +13        # goto <316:else>
# <315:then>
10 01    # bipush 1        # true
36 03    # vstore 3        # _result = true;
15 03    # vload 3         # _result
B0       # return          # 
A7 00 2B # goto +43        # goto <317:endif>
# <316:else>
15 00    # vload 0         # end
62 10    # aaddf 16        # &end->prev
2F       # amload          # end->prev
01       # aconst_null     # NULL
9F 00 06 # if_cmpeq +6     # if (end->prev == NULL) goto <318:then>
A7 00 0D # goto +13        # goto <319:else>
# <318:then>
10 00    # bipush 0        # false
36 03    # vstore 3        # _result = false;
15 03    # vload 3         # _result
B0       # return          # 
A7 00 15 # goto +21        # goto <320:endif>
# <319:else>
15 00    # vload 0         # end
62 10    # aaddf 16        # &end->prev
2F       # amload          # end->prev
15 01    # vload 1         # start
14 1A 8B # aldc 6795       # s[6795] = "dll_pt.c0:77.20-77.53"
B8 00 2D # invokestatic 45 # is_segment_prev(end->prev, start, "dll_pt.c0:77.20-77.53")
36 03    # vstore 3        # _result = is_segment_prev(end->prev, start, "dll_pt.c0:77.20-77.53");
15 03    # vload 3         # _result
B0       # return          # 
# <320:endif>
# <317:endif>


#<pass_point_prev>
00 04             # number of arguments = 4
00 07             # number of local variables = 7
00 72             # code length = 114 bytes
15 02    # vload 2         # start
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (start != NULL) goto <324:and>
A7 00 1F # goto +31        # goto <322:cond_false>
# <324:and>
15 01    # vload 1         # point
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (point != NULL) goto <321:cond_true>
A7 00 16 # goto +22        # goto <322:cond_false>
# <321:cond_true>
15 00    # vload 0         # end
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (end != NULL) goto <325:cond_true>
A7 00 08 # goto +8         # goto <326:cond_false>
# <325:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <327:cond_end>
# <326:cond_false>
10 00    # bipush 0        # false
# <327:cond_end>
A7 00 05 # goto +5         # goto <323:cond_end>
# <322:cond_false>
10 00    # bipush 0        # false
# <323:cond_end>
14 1A A1 # aldc 6817       # s[6817] = "dll_pt.c0:84.4-84.60: @requires annotation failed\n"
15 03    # vload 3         # _caller
14 1A D4 # aldc 6868       # s[6868] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("dll_pt.c0:84.4-84.60: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert(((start != NULL) && (point != NULL)) && (end != NULL)) [failure message on stack]
15 00    # vload 0         # end
15 01    # vload 1         # point
9F 00 06 # if_cmpeq +6     # if (end == point) goto <328:then>
A7 00 0D # goto +13        # goto <329:else>
# <328:then>
10 01    # bipush 1        # true
36 04    # vstore 4        # _result = true;
15 04    # vload 4         # _result
B0       # return          # 
A7 00 2B # goto +43        # goto <330:endif>
# <329:else>
15 00    # vload 0         # end
15 02    # vload 2         # start
9F 00 06 # if_cmpeq +6     # if (end == start) goto <331:then>
A7 00 0D # goto +13        # goto <332:else>
# <331:then>
10 00    # bipush 0        # false
36 04    # vstore 4        # _result = false;
15 04    # vload 4         # _result
B0       # return          # 
A7 00 17 # goto +23        # goto <333:endif>
# <332:else>
15 00    # vload 0         # end
62 10    # aaddf 16        # &end->prev
2F       # amload          # end->prev
15 01    # vload 1         # point
15 02    # vload 2         # start
14 1A E6 # aldc 6886       # s[6886] = "dll_pt.c0:91.16-91.56"
B8 00 2E # invokestatic 46 # pass_point_prev(end->prev, point, start, "dll_pt.c0:91.16-91.56")
36 04    # vstore 4        # _result = pass_point_prev(end->prev, point, start, "dll_pt.c0:91.16-91.56");
15 04    # vload 4         # _result
B0       # return          # 
# <333:endif>
# <330:endif>


#<dll_empty>
00 04             # number of arguments = 4
00 07             # number of local variables = 7
00 5B             # code length = 91 bytes
15 00    # vload 0         # start
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (start != NULL) goto <337:and>
A7 00 1F # goto +31        # goto <335:cond_false>
# <337:and>
15 01    # vload 1         # point
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (point != NULL) goto <334:cond_true>
A7 00 16 # goto +22        # goto <335:cond_false>
# <334:cond_true>
15 02    # vload 2         # end
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (end != NULL) goto <338:cond_true>
A7 00 08 # goto +8         # goto <339:cond_false>
# <338:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <340:cond_end>
# <339:cond_false>
10 00    # bipush 0        # false
# <340:cond_end>
A7 00 05 # goto +5         # goto <336:cond_end>
# <335:cond_false>
10 00    # bipush 0        # false
# <336:cond_end>
14 1A FC # aldc 6908       # s[6908] = "dll_pt.c0:95.4-95.60: @requires annotation failed\n"
15 03    # vload 3         # _caller
14 1B 2F # aldc 6959       # s[6959] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("dll_pt.c0:95.4-95.60: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert(((start != NULL) && (point != NULL)) && (end != NULL)) [failure message on stack]
15 01    # vload 1         # point
15 00    # vload 0         # start
A0 00 06 # if_cmpne +6     # if (point != start) goto <344:and>
A7 00 17 # goto +23        # goto <342:else>
# <344:and>
15 01    # vload 1         # point
15 02    # vload 2         # end
A0 00 06 # if_cmpne +6     # if (point != end) goto <341:then>
A7 00 0D # goto +13        # goto <342:else>
# <341:then>
10 00    # bipush 0        # false
36 04    # vstore 4        # _result = false;
15 04    # vload 4         # _result
B0       # return          # 
A7 00 0A # goto +10        # goto <343:endif>
# <342:else>
10 01    # bipush 1        # true
36 04    # vstore 4        # _result = true;
15 04    # vload 4         # _result
B0       # return          # 
# <343:endif>


#<next_prev_mirror>
00 03             # number of arguments = 3
00 07             # number of local variables = 7
00 A2             # code length = 162 bytes
15 00    # vload 0         # start
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (start != NULL) goto <345:cond_true>
A7 00 16 # goto +22        # goto <346:cond_false>
# <345:cond_true>
15 01    # vload 1         # end
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (end != NULL) goto <348:cond_true>
A7 00 08 # goto +8         # goto <349:cond_false>
# <348:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <350:cond_end>
# <349:cond_false>
10 00    # bipush 0        # false
# <350:cond_end>
A7 00 05 # goto +5         # goto <347:cond_end>
# <346:cond_false>
10 00    # bipush 0        # false
# <347:cond_end>
14 1B 41 # aldc 6977       # s[6977] = "dll_pt.c0:102.4-102.43: @requires annotation failed\n"
15 02    # vload 2         # _caller
14 1B 76 # aldc 7030       # s[7030] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("dll_pt.c0:102.4-102.43: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert((start != NULL) && (end != NULL)) [failure message on stack]
15 00    # vload 0         # start
36 04    # vstore 4        # s = start;
15 01    # vload 1         # end
36 05    # vstore 5        # e = end;
# <351:loop>
A7 00 03 # goto +3         # goto <352:body>
# <352:body>
15 04    # vload 4         # s
15 05    # vload 5         # e
A0 00 06 # if_cmpne +6     # if (s != e) goto <354:then>
A7 00 56 # goto +86        # goto <355:else>
# <354:then>
15 04    # vload 4         # s
62 08    # aaddf 8         # &s->next
2F       # amload          # s->next
36 06    # vstore 6        # temp = s->next;
15 06    # vload 6         # temp
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (temp != NULL) goto <357:cond_true>
A7 00 08 # goto +8         # goto <358:cond_false>
# <357:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <359:cond_end>
# <358:cond_false>
10 00    # bipush 0        # false
# <359:cond_end>
14 1B 88 # aldc 7048       # s[7048] = "dll_pt.c0:108.11-108.32: @assert annotation failed"
CF       # assert          # assert(temp != NULL) [failure message on stack]
15 06    # vload 6         # temp
62 10    # aaddf 16        # &temp->prev
2F       # amload          # temp->prev
15 04    # vload 4         # s
A0 00 06 # if_cmpne +6     # if (temp->prev != s) goto <360:then>
A7 00 0D # goto +13        # goto <361:else>
# <360:then>
10 00    # bipush 0        # false
36 03    # vstore 3        # _result = false;
15 03    # vload 3         # _result
B0       # return          # 
A7 00 03 # goto +3         # goto <362:endif>
# <361:else>
# <362:endif>
15 04    # vload 4         # s
62 08    # aaddf 8         # &s->next
2F       # amload          # s->next
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (s->next != NULL) goto <363:cond_true>
A7 00 08 # goto +8         # goto <364:cond_false>
# <363:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <365:cond_end>
# <364:cond_false>
10 00    # bipush 0        # false
# <365:cond_end>
14 1B BB # aldc 7099       # s[7099] = "dll_pt.c0:110.11-110.35: @assert annotation failed"
CF       # assert          # assert(s->next != NULL) [failure message on stack]
15 04    # vload 4         # s
62 08    # aaddf 8         # &s->next
2F       # amload          # s->next
36 04    # vstore 4        # s = s->next;
A7 00 06 # goto +6         # goto <356:endif>
# <355:else>
A7 00 06 # goto +6         # break
# <356:endif>
A7 FF 9D # goto -99        # goto <351:loop>
# <353:exit>
10 01    # bipush 1        # true
36 03    # vstore 3        # _result = true;
15 03    # vload 3         # _result
B0       # return          # 


#<is_tbuf>
00 02             # number of arguments = 2
00 08             # number of local variables = 8
00 5F             # code length = 95 bytes
15 00    # vload 0         # B
01       # aconst_null     # NULL
9F 00 06 # if_cmpeq +6     # if (B == NULL) goto <511:then>
A7 00 0D # goto +13        # goto <512:else>
# <511:then>
10 00    # bipush 0        # false
36 02    # vstore 2        # _result = false;
15 02    # vload 2         # _result
B0       # return          # 
A7 00 4F # goto +79        # goto <513:endif>
# <512:else>
15 00    # vload 0         # B
14 2A 34 # aldc 10804      # s[10804] = "tbuf.c0:103.12-103.24"
B8 00 25 # invokestatic 37 # is_dll_pt(B, "tbuf.c0:103.12-103.24")
10 01    # bipush 1        # true
9F 00 06 # if_cmpeq +6     # if (is_dll_pt(B, "tbuf.c0:103.12-103.24") == true) goto <514:then>
A7 00 38 # goto +56        # goto <515:else>
# <514:then>
15 00    # vload 0         # B
14 2A 4A # aldc 10826      # s[10826] = "tbuf.c0:105.14-105.34"
B8 00 38 # invokestatic 56 # valid_gap_buffers(B, "tbuf.c0:105.14-105.34")
10 01    # bipush 1        # true
9F 00 06 # if_cmpeq +6     # if (valid_gap_buffers(B, "tbuf.c0:105.14-105.34") == true) goto <520:and>
A7 00 1E # goto +30        # goto <518:cond_false>
# <520:and>
15 00    # vload 0         # B
14 2A 60 # aldc 10848      # s[10848] = "tbuf.c0:105.38-105.56"
B8 00 39 # invokestatic 57 # gapbufs_aligned(B, "tbuf.c0:105.38-105.56")
10 01    # bipush 1        # true
9F 00 06 # if_cmpeq +6     # if (gapbufs_aligned(B, "tbuf.c0:105.38-105.56") == true) goto <517:cond_true>
A7 00 0E # goto +14        # goto <518:cond_false>
# <517:cond_true>
15 00    # vload 0         # B
14 2A 76 # aldc 10870      # s[10870] = "tbuf.c0:105.60-105.77"
B8 00 3A # invokestatic 58 # emp_or_non_emp(B, "tbuf.c0:105.60-105.77")
A7 00 05 # goto +5         # goto <519:cond_end>
# <518:cond_false>
10 00    # bipush 0        # false
# <519:cond_end>
36 02    # vstore 2        # _result = ((valid_gap_buffers(B, "tbuf.c0:105.14-105.34") && gapbufs_aligned(B, "tbuf.c0:105.38-105.56")) && emp_or_non_emp(B, "tbuf.c0:105.60-105.77"));
15 02    # vload 2         # _result
B0       # return          # 
A7 00 0A # goto +10        # goto <516:endif>
# <515:else>
10 00    # bipush 0        # false
36 02    # vstore 2        # _result = false;
15 02    # vload 2         # _result
B0       # return          # 
# <516:endif>
# <513:endif>


#<tbuf_new>
00 01             # number of arguments = 1
00 08             # number of local variables = 8
00 B1             # code length = 177 bytes
BB 18    # new 24          # alloc(struct dll_pt_header)
36 02    # vstore 2        # res = alloc(struct dll_pt_header);
15 02    # vload 2         # res
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (res != NULL) goto <521:cond_true>
A7 00 08 # goto +8         # goto <522:cond_false>
# <521:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <523:cond_end>
# <522:cond_false>
10 00    # bipush 0        # false
# <523:cond_end>
14 2A 8C # aldc 10892      # s[10892] = "tbuf.c0:115.8-115.28: @assert annotation failed"
CF       # assert          # assert(res != NULL) [failure message on stack]
15 02    # vload 2         # res
62 00    # aaddf 0         # &res->start
BB 18    # new 24          # alloc(struct dll_node)
4F       # amstore         # res->start = alloc(struct dll_node);
15 02    # vload 2         # res
62 10    # aaddf 16        # &res->end
BB 18    # new 24          # alloc(struct dll_node)
4F       # amstore         # res->end = alloc(struct dll_node);
15 02    # vload 2         # res
62 08    # aaddf 8         # &res->point
BB 18    # new 24          # alloc(struct dll_node)
4F       # amstore         # res->point = alloc(struct dll_node);
15 02    # vload 2         # res
62 08    # aaddf 8         # &res->point
2F       # amload          # res->point
62 00    # aaddf 0         # &res->point->data
10 10    # bipush 16       # 16
14 2A BC # aldc 10940      # s[10940] = "tbuf.c0:119.24-119.38"
B8 00 10 # invokestatic 16 # gapbuf_new(16, "tbuf.c0:119.24-119.38")
4F       # amstore         # res->point->data = gapbuf_new(16, "tbuf.c0:119.24-119.38");
15 02    # vload 2         # res
62 08    # aaddf 8         # &res->point
2F       # amload          # res->point
62 00    # aaddf 0         # &res->point->data
2F       # amload          # res->point->data
14 2A D2 # aldc 10962      # s[10962] = "tbuf.c0:120.15-120.42"
B8 00 0B # invokestatic 11 # is_gapbuf(res->point->data, "tbuf.c0:120.15-120.42")
10 01    # bipush 1        # true
9F 00 06 # if_cmpeq +6     # if (is_gapbuf(res->point->data, "tbuf.c0:120.15-120.42") == true) goto <524:cond_true>
A7 00 14 # goto +20        # goto <525:cond_false>
# <524:cond_true>
15 02    # vload 2         # res
62 08    # aaddf 8         # &res->point
2F       # amload          # res->point
62 00    # aaddf 0         # &res->point->data
2F       # amload          # res->point->data
14 2A E8 # aldc 10984      # s[10984] = "tbuf.c0:120.46-120.76"
B8 00 0C # invokestatic 12 # gapbuf_empty(res->point->data, "tbuf.c0:120.46-120.76")
A7 00 05 # goto +5         # goto <526:cond_end>
# <525:cond_false>
10 00    # bipush 0        # false
# <526:cond_end>
14 2A FE # aldc 11006      # s[11006] = "tbuf.c0:120.8-120.77: @assert annotation failed"
CF       # assert          # assert(is_gapbuf(res->point->data, "tbuf.c0:120.15-120.42") && gapbuf_empty(res->point->data, "tbuf.c0:120.46-120.76")) [failure message on stack]
15 02    # vload 2         # res
62 00    # aaddf 0         # &res->start
2F       # amload          # res->start
62 08    # aaddf 8         # &res->start->next
15 02    # vload 2         # res
62 08    # aaddf 8         # &res->point
2F       # amload          # res->point
4F       # amstore         # res->start->next = res->point;
15 02    # vload 2         # res
62 10    # aaddf 16        # &res->end
2F       # amload          # res->end
62 10    # aaddf 16        # &res->end->prev
15 02    # vload 2         # res
62 08    # aaddf 8         # &res->point
2F       # amload          # res->point
4F       # amstore         # res->end->prev = res->point;
15 02    # vload 2         # res
62 08    # aaddf 8         # &res->point
2F       # amload          # res->point
62 10    # aaddf 16        # &res->point->prev
15 02    # vload 2         # res
62 00    # aaddf 0         # &res->start
2F       # amload          # res->start
4F       # amstore         # res->point->prev = res->start;
15 02    # vload 2         # res
62 08    # aaddf 8         # &res->point
2F       # amload          # res->point
62 08    # aaddf 8         # &res->point->next
15 02    # vload 2         # res
62 10    # aaddf 16        # &res->end
2F       # amload          # res->end
4F       # amstore         # res->point->next = res->end;
15 02    # vload 2         # res
36 01    # vstore 1        # _result = res;
15 01    # vload 1         # _result
14 2B 2E # aldc 11054      # s[11054] = "tbuf.c0:112.12-112.28"
B8 00 31 # invokestatic 49 # is_tbuf(_result, "tbuf.c0:112.12-112.28")
14 2B 44 # aldc 11076      # s[11076] = "tbuf.c0:112.4-112.30: @ensures annotation failed"
CF       # assert          # assertis_tbuf(_result, "tbuf.c0:112.12-112.28") [failure message on stack]
15 01    # vload 1         # _result
B0       # return          # 


#<tbuf_split_pt>
00 02             # number of arguments = 2
00 0C             # number of local variables = 12
04 01             # code length = 1025 bytes
15 00    # vload 0         # B
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (B != NULL) goto <527:cond_true>
A7 00 08 # goto +8         # goto <528:cond_false>
# <527:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <529:cond_end>
# <528:cond_false>
10 00    # bipush 0        # false
# <529:cond_end>
14 2B 75 # aldc 11125      # s[11125] = "tbuf.c0:138.4-138.24: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 2B A8 # aldc 11176      # s[11176] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("tbuf.c0:138.4-138.24: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert(B != NULL) [failure message on stack]
15 00    # vload 0         # B
14 2B BA # aldc 11194      # s[11194] = "tbuf.c0:139.13-139.23"
B8 00 31 # invokestatic 49 # is_tbuf(B, "tbuf.c0:139.13-139.23")
14 2B D0 # aldc 11216      # s[11216] = "tbuf.c0:139.4-139.25: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 2C 03 # aldc 11267      # s[11267] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("tbuf.c0:139.4-139.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assertis_tbuf(B, "tbuf.c0:139.13-139.23") [failure message on stack]
15 00    # vload 0         # B
62 08    # aaddf 8         # &B->point
2F       # amload          # B->point
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (B->point != NULL) goto <530:cond_true>
A7 00 14 # goto +20        # goto <531:cond_false>
# <530:cond_true>
15 00    # vload 0         # B
62 08    # aaddf 8         # &B->point
2F       # amload          # B->point
62 00    # aaddf 0         # &B->point->data
2F       # amload          # B->point->data
14 2C 15 # aldc 11285      # s[11285] = "tbuf.c0:140.33-140.60"
B8 00 0D # invokestatic 13 # gapbuf_full(B->point->data, "tbuf.c0:140.33-140.60")
A7 00 05 # goto +5         # goto <532:cond_end>
# <531:cond_false>
10 00    # bipush 0        # false
# <532:cond_end>
14 2C 2B # aldc 11307      # s[11307] = "tbuf.c0:140.4-140.61: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 2C 5E # aldc 11358      # s[11358] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("tbuf.c0:140.4-140.61: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert((B->point != NULL) && gapbuf_full(B->point->data, "tbuf.c0:140.33-140.60")) [failure message on stack]
15 00    # vload 0         # B
62 08    # aaddf 8         # &B->point
2F       # amload          # B->point
36 02    # vstore 2        # pt = B->point;
15 02    # vload 2         # pt
62 00    # aaddf 0         # &pt->data
2F       # amload          # pt->data
36 03    # vstore 3        # gap_buffer = pt->data;
15 03    # vload 3         # gap_buffer
62 10    # aaddf 16        # &gap_buffer->gap_start
2E       # imload          # gap_buffer->gap_start
36 04    # vstore 4        # gap_start_index = gap_buffer->gap_start;
15 03    # vload 3         # gap_buffer
62 00    # aaddf 0         # &gap_buffer->limit
2E       # imload          # gap_buffer->limit
BC 01    # newarray 1      # alloc_array(char, gap_buffer->limit)
36 05    # vstore 5        # buffer1 = alloc_array(char, gap_buffer->limit);
15 03    # vload 3         # gap_buffer
62 00    # aaddf 0         # &gap_buffer->limit
2E       # imload          # gap_buffer->limit
BC 01    # newarray 1      # alloc_array(char, gap_buffer->limit)
36 06    # vstore 6        # buffer2 = alloc_array(char, gap_buffer->limit);
15 03    # vload 3         # gap_buffer
62 08    # aaddf 8         # &gap_buffer->buffer
2F       # amload          # gap_buffer->buffer
36 07    # vstore 7        # buffer = gap_buffer->buffer;
10 00    # bipush 0        # 0
36 08    # vstore 8        # new_start = 0;
10 00    # bipush 0        # 0
36 09    # vstore 9        # new_end = 0;
10 00    # bipush 0        # 0
36 0A    # vstore 10       # i = 0;
# <533:loop>
A7 00 03 # goto +3         # goto <534:body>
# <534:body>
10 00    # bipush 0        # 0
15 0A    # vload 10        # i
A4 00 06 # if_icmple +6    # if (0 <= i) goto <536:cond_true>
A7 00 17 # goto +23        # goto <537:cond_false>
# <536:cond_true>
15 0A    # vload 10        # i
10 10    # bipush 16       # 16
A4 00 06 # if_icmple +6    # if (i <= 16) goto <539:cond_true>
A7 00 08 # goto +8         # goto <540:cond_false>
# <539:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <541:cond_end>
# <540:cond_false>
10 00    # bipush 0        # false
# <541:cond_end>
A7 00 05 # goto +5         # goto <538:cond_end>
# <537:cond_false>
10 00    # bipush 0        # false
# <538:cond_end>
14 2C 70 # aldc 11376      # s[11376] = "tbuf.c0:153.8-153.40: @loop_invariant annotation failed"
CF       # assert          # assert((0 <= i) && (i <= 16)) [failure message on stack]
15 0A    # vload 10        # i
15 03    # vload 3         # gap_buffer
62 00    # aaddf 0         # &gap_buffer->limit
2E       # imload          # gap_buffer->limit
A1 00 06 # if_icmplt +6    # if (i < gap_buffer->limit) goto <542:then>
A7 01 3B # goto +315       # goto <543:else>
# <542:then>
15 04    # vload 4         # gap_start_index
10 07    # bipush 7        # 7
A4 00 06 # if_icmple +6    # if (gap_start_index <= 7) goto <545:then>
A7 00 97 # goto +151       # goto <546:else>
# <545:then>
15 0A    # vload 10        # i
15 04    # vload 4         # gap_start_index
A1 00 06 # if_icmplt +6    # if (i < gap_start_index) goto <548:then>
A7 00 12 # goto +18        # goto <549:else>
# <548:then>
15 05    # vload 5         # buffer1
15 0A    # vload 10        # i
63       # aadds           # &buffer1[i]
15 07    # vload 7         # buffer
15 0A    # vload 10        # i
63       # aadds           # &buffer[i]
34       # cmload          # buffer[i]
55       # cmstore         # buffer1[i] = buffer[i];
A7 00 70 # goto +112       # goto <550:endif>
# <549:else>
15 0A    # vload 10        # i
10 07    # bipush 7        # 7
A4 00 06 # if_icmple +6    # if (i <= 7) goto <551:then>
A7 00 4D # goto +77        # goto <552:else>
# <551:then>
10 00    # bipush 0        # 0
15 0A    # vload 10        # i
10 08    # bipush 8        # 8
60       # iadd            # (i + 8)
A4 00 06 # if_icmple +6    # if (0 <= (i + 8)) goto <554:cond_true>
A7 00 1A # goto +26        # goto <555:cond_false>
# <554:cond_true>
15 0A    # vload 10        # i
10 08    # bipush 8        # 8
60       # iadd            # (i + 8)
10 10    # bipush 16       # 16
A1 00 06 # if_icmplt +6    # if ((i + 8) < 16) goto <557:cond_true>
A7 00 08 # goto +8         # goto <558:cond_false>
# <557:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <559:cond_end>
# <558:cond_false>
10 00    # bipush 0        # false
# <559:cond_end>
A7 00 05 # goto +5         # goto <556:cond_end>
# <555:cond_false>
10 00    # bipush 0        # false
# <556:cond_end>
14 2C A8 # aldc 11432      # s[11432] = "tbuf.c0:160.18-160.49: @assert annotation failed"
CF       # assert          # assert((0 <= (i + 8)) && ((i + 8) < 16)) [failure message on stack]
15 05    # vload 5         # buffer1
15 0A    # vload 10        # i
10 08    # bipush 8        # 8
60       # iadd            # (i + 8)
63       # aadds           # &buffer1[(i + 8)]
34       # cmload          # buffer1[(i + 8)]
15 07    # vload 7         # buffer
15 0A    # vload 10        # i
63       # aadds           # &buffer[i]
34       # cmload          # buffer[i]
9F 00 06 # if_cmpeq +6     # if (buffer1[(i + 8)] == buffer[i]) goto <560:cond_true>
A7 00 08 # goto +8         # goto <561:cond_false>
# <560:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <562:cond_end>
# <561:cond_false>
10 00    # bipush 0        # false
# <562:cond_end>
57       # pop             # (ignore result)
A7 00 1C # goto +28        # goto <553:endif>
# <552:else>
15 0A    # vload 10        # i
10 08    # bipush 8        # 8
A2 00 06 # if_icmpge +6    # if (i >= 8) goto <563:then>
A7 00 12 # goto +18        # goto <564:else>
# <563:then>
15 06    # vload 6         # buffer2
15 0A    # vload 10        # i
63       # aadds           # &buffer2[i]
15 07    # vload 7         # buffer
15 0A    # vload 10        # i
63       # aadds           # &buffer[i]
34       # cmload          # buffer[i]
55       # cmstore         # buffer2[i] = buffer[i];
A7 00 03 # goto +3         # goto <565:endif>
# <564:else>
# <565:endif>
# <553:endif>
# <550:endif>
15 04    # vload 4         # gap_start_index
36 08    # vstore 8        # new_start = gap_start_index;
15 08    # vload 8         # new_start
10 08    # bipush 8        # 8
60       # iadd            # (new_start + 8)
36 09    # vstore 9        # new_end = (new_start + 8);
A7 00 93 # goto +147       # goto <547:endif>
# <546:else>
15 0A    # vload 10        # i
10 07    # bipush 7        # 7
A4 00 06 # if_icmple +6    # if (i <= 7) goto <566:then>
A7 00 12 # goto +18        # goto <567:else>
# <566:then>
15 05    # vload 5         # buffer1
15 0A    # vload 10        # i
63       # aadds           # &buffer1[i]
15 07    # vload 7         # buffer
15 0A    # vload 10        # i
63       # aadds           # &buffer[i]
34       # cmload          # buffer[i]
55       # cmstore         # buffer1[i] = buffer[i];
A7 00 6C # goto +108       # goto <568:endif>
# <567:else>
15 0A    # vload 10        # i
10 08    # bipush 8        # 8
A2 00 06 # if_icmpge +6    # if (i >= 8) goto <572:and>
A7 00 49 # goto +73        # goto <570:else>
# <572:and>
15 0A    # vload 10        # i
15 04    # vload 4         # gap_start_index
A1 00 06 # if_icmplt +6    # if (i < gap_start_index) goto <569:then>
A7 00 3F # goto +63        # goto <570:else>
# <569:then>
10 00    # bipush 0        # 0
15 0A    # vload 10        # i
10 08    # bipush 8        # 8
64       # isub            # (i - 8)
A4 00 06 # if_icmple +6    # if (0 <= (i - 8)) goto <573:cond_true>
A7 00 1A # goto +26        # goto <574:cond_false>
# <573:cond_true>
15 0A    # vload 10        # i
10 08    # bipush 8        # 8
64       # isub            # (i - 8)
10 10    # bipush 16       # 16
A1 00 06 # if_icmplt +6    # if ((i - 8) < 16) goto <576:cond_true>
A7 00 08 # goto +8         # goto <577:cond_false>
# <576:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <578:cond_end>
# <577:cond_false>
10 00    # bipush 0        # false
# <578:cond_end>
A7 00 05 # goto +5         # goto <575:cond_end>
# <574:cond_false>
10 00    # bipush 0        # false
# <575:cond_end>
14 2C D9 # aldc 11481      # s[11481] = "tbuf.c0:172.17-172.48: @assert annotation failed"
CF       # assert          # assert((0 <= (i - 8)) && ((i - 8) < 16)) [failure message on stack]
15 06    # vload 6         # buffer2
15 0A    # vload 10        # i
10 08    # bipush 8        # 8
64       # isub            # (i - 8)
63       # aadds           # &buffer2[(i - 8)]
15 07    # vload 7         # buffer
15 0A    # vload 10        # i
63       # aadds           # &buffer[i]
34       # cmload          # buffer[i]
55       # cmstore         # buffer2[(i - 8)] = buffer[i];
A7 00 1C # goto +28        # goto <571:endif>
# <570:else>
15 0A    # vload 10        # i
15 04    # vload 4         # gap_start_index
A2 00 06 # if_icmpge +6    # if (i >= gap_start_index) goto <579:then>
A7 00 12 # goto +18        # goto <580:else>
# <579:then>
15 06    # vload 6         # buffer2
15 0A    # vload 10        # i
63       # aadds           # &buffer2[i]
15 07    # vload 7         # buffer
15 0A    # vload 10        # i
63       # aadds           # &buffer[i]
34       # cmload          # buffer[i]
55       # cmstore         # buffer2[i] = buffer[i];
A7 00 03 # goto +3         # goto <581:endif>
# <580:else>
# <581:endif>
# <571:endif>
# <568:endif>
15 04    # vload 4         # gap_start_index
10 08    # bipush 8        # 8
64       # isub            # (gap_start_index - 8)
36 08    # vstore 8        # new_start = (gap_start_index - 8);
15 08    # vload 8         # new_start
10 08    # bipush 8        # 8
60       # iadd            # (new_start + 8)
36 09    # vstore 9        # new_end = (new_start + 8);
# <547:endif>
15 0A    # vload 10        # i
10 01    # bipush 1        # 1
60       # iadd            # 
36 0A    # vstore 10       # i += 1;
A7 00 06 # goto +6         # goto <544:endif>
# <543:else>
A7 00 06 # goto +6         # break
# <544:endif>
A7 FE 91 # goto -367       # goto <533:loop>
# <535:exit>
15 04    # vload 4         # gap_start_index
10 07    # bipush 7        # 7
A4 00 06 # if_icmple +6    # if (gap_start_index <= 7) goto <582:then>
A7 00 E6 # goto +230       # goto <583:else>
# <582:then>
15 00    # vload 0         # B
14 2D 0A # aldc 11530      # s[11530] = "tbuf.c0:184.19-184.29"
B8 00 31 # invokestatic 49 # is_tbuf(B, "tbuf.c0:184.19-184.29")
10 01    # bipush 1        # true
9F 00 06 # if_cmpeq +6     # if (is_tbuf(B, "tbuf.c0:184.19-184.29") == true) goto <585:cond_true>
A7 00 14 # goto +20        # goto <586:cond_false>
# <585:cond_true>
15 00    # vload 0         # B
62 08    # aaddf 8         # &B->point
2F       # amload          # B->point
62 00    # aaddf 0         # &B->point->data
2F       # amload          # B->point->data
14 2D 20 # aldc 11552      # s[11552] = "tbuf.c0:184.33-184.58"
B8 00 0B # invokestatic 11 # is_gapbuf(B->point->data, "tbuf.c0:184.33-184.58")
A7 00 05 # goto +5         # goto <587:cond_end>
# <586:cond_false>
10 00    # bipush 0        # false
# <587:cond_end>
14 2D 36 # aldc 11574      # s[11574] = "tbuf.c0:184.12-184.59: @assert annotation failed"
CF       # assert          # assert(is_tbuf(B, "tbuf.c0:184.19-184.29") && is_gapbuf(B->point->data, "tbuf.c0:184.33-184.58")) [failure message on stack]
15 00    # vload 0         # B
62 08    # aaddf 8         # &B->point
2F       # amload          # B->point
62 00    # aaddf 0         # &B->point->data
2F       # amload          # B->point->data
62 08    # aaddf 8         # &B->point->data->buffer
15 05    # vload 5         # buffer1
4F       # amstore         # B->point->data->buffer = buffer1;
15 00    # vload 0         # B
62 08    # aaddf 8         # &B->point
2F       # amload          # B->point
62 00    # aaddf 0         # &B->point->data
2F       # amload          # B->point->data
62 10    # aaddf 16        # &B->point->data->gap_start
15 08    # vload 8         # new_start
4E       # imstore         # B->point->data->gap_start = new_start;
15 00    # vload 0         # B
62 08    # aaddf 8         # &B->point
2F       # amload          # B->point
62 00    # aaddf 0         # &B->point->data
2F       # amload          # B->point->data
62 14    # aaddf 20        # &B->point->data->gap_end
15 09    # vload 9         # new_end
4E       # imstore         # B->point->data->gap_end = new_end;
10 10    # bipush 16       # 16
14 2D 67 # aldc 11623      # s[11623] = "tbuf.c0:188.21-188.35"
B8 00 10 # invokestatic 16 # gapbuf_new(16, "tbuf.c0:188.21-188.35")
36 0A    # vstore 10       # g = gapbuf_new(16, "tbuf.c0:188.21-188.35");
15 0A    # vload 10        # g
62 08    # aaddf 8         # &g->buffer
15 06    # vload 6         # buffer2
4F       # amstore         # g->buffer = buffer2;
15 0A    # vload 10        # g
62 10    # aaddf 16        # &g->gap_start
10 00    # bipush 0        # 0
4E       # imstore         # g->gap_start = 0;
15 0A    # vload 10        # g
62 14    # aaddf 20        # &g->gap_end
10 08    # bipush 8        # 8
4E       # imstore         # g->gap_end = 8;
15 0A    # vload 10        # g
14 2D 7D # aldc 11645      # s[11645] = "tbuf.c0:192.19-192.31"
B8 00 0B # invokestatic 11 # is_gapbuf(g, "tbuf.c0:192.19-192.31")
14 2D 93 # aldc 11667      # s[11667] = "tbuf.c0:192.12-192.33: @assert annotation failed"
CF       # assert          # assertis_gapbuf(g, "tbuf.c0:192.19-192.31") [failure message on stack]
14 2D C4 # aldc 11716      # s[11716] = "tbuf.c0:193.22-193.31"
B8 00 3B # invokestatic 59 # dll_new("tbuf.c0:193.22-193.31")
36 0B    # vstore 11       # dll_2 = dll_new("tbuf.c0:193.22-193.31");
15 0B    # vload 11        # dll_2
62 00    # aaddf 0         # &dll_2->data
15 0A    # vload 10        # g
4F       # amstore         # dll_2->data = g;
15 0B    # vload 11        # dll_2
62 10    # aaddf 16        # &dll_2->prev
15 02    # vload 2         # pt
4F       # amstore         # dll_2->prev = pt;
15 0B    # vload 11        # dll_2
62 08    # aaddf 8         # &dll_2->next
15 02    # vload 2         # pt
62 08    # aaddf 8         # &pt->next
2F       # amload          # pt->next
4F       # amstore         # dll_2->next = pt->next;
15 00    # vload 0         # B
62 08    # aaddf 8         # &B->point
2F       # amload          # B->point
62 08    # aaddf 8         # &B->point->next
2F       # amload          # B->point->next
62 10    # aaddf 16        # &B->point->next->prev
15 0B    # vload 11        # dll_2
4F       # amstore         # B->point->next->prev = dll_2;
15 00    # vload 0         # B
62 08    # aaddf 8         # &B->point
2F       # amload          # B->point
62 08    # aaddf 8         # &B->point->next
15 0B    # vload 11        # dll_2
4F       # amstore         # B->point->next = dll_2;
15 00    # vload 0         # B
14 2D DA # aldc 11738      # s[11738] = "tbuf.c0:199.19-199.29"
B8 00 31 # invokestatic 49 # is_tbuf(B, "tbuf.c0:199.19-199.29")
14 2D F0 # aldc 11760      # s[11760] = "tbuf.c0:199.12-199.31: @assert annotation failed"
CF       # assert          # assertis_tbuf(B, "tbuf.c0:199.19-199.29") [failure message on stack]
15 00    # vload 0         # B
14 2E 21 # aldc 11809      # s[11809] = "tbuf.c0:141.12-141.22"
B8 00 31 # invokestatic 49 # is_tbuf(B, "tbuf.c0:141.12-141.22")
14 2E 37 # aldc 11831      # s[11831] = "tbuf.c0:141.4-141.24: @ensures annotation failed"
CF       # assert          # assertis_tbuf(B, "tbuf.c0:141.12-141.22") [failure message on stack]
15 00    # vload 0         # B
62 08    # aaddf 8         # &B->point
2F       # amload          # B->point
62 00    # aaddf 0         # &B->point->data
2F       # amload          # B->point->data
14 2E 68 # aldc 11880      # s[11880] = "tbuf.c0:142.13-142.40"
B8 00 0D # invokestatic 13 # gapbuf_full(B->point->data, "tbuf.c0:142.13-142.40")
10 01    # bipush 1        # 
82       # ixor            # !(gapbuf_full(B->point->data, "tbuf.c0:142.13-142.40"))
14 2E 7E # aldc 11902      # s[11902] = "tbuf.c0:142.4-142.42: @ensures annotation failed"
CF       # assert          # assert!(gapbuf_full(B->point->data, "tbuf.c0:142.13-142.40")) [failure message on stack]
10 00    # bipush 0        # dummy return value
B0       # return          # 
A7 00 E3 # goto +227       # goto <584:endif>
# <583:else>
15 00    # vload 0         # B
14 2E AF # aldc 11951      # s[11951] = "tbuf.c0:204.19-204.29"
B8 00 31 # invokestatic 49 # is_tbuf(B, "tbuf.c0:204.19-204.29")
10 01    # bipush 1        # true
9F 00 06 # if_cmpeq +6     # if (is_tbuf(B, "tbuf.c0:204.19-204.29") == true) goto <588:cond_true>
A7 00 14 # goto +20        # goto <589:cond_false>
# <588:cond_true>
15 00    # vload 0         # B
62 08    # aaddf 8         # &B->point
2F       # amload          # B->point
62 00    # aaddf 0         # &B->point->data
2F       # amload          # B->point->data
14 2E C5 # aldc 11973      # s[11973] = "tbuf.c0:204.33-204.58"
B8 00 0B # invokestatic 11 # is_gapbuf(B->point->data, "tbuf.c0:204.33-204.58")
A7 00 05 # goto +5         # goto <590:cond_end>
# <589:cond_false>
10 00    # bipush 0        # false
# <590:cond_end>
14 2E DB # aldc 11995      # s[11995] = "tbuf.c0:204.12-204.59: @assert annotation failed"
CF       # assert          # assert(is_tbuf(B, "tbuf.c0:204.19-204.29") && is_gapbuf(B->point->data, "tbuf.c0:204.33-204.58")) [failure message on stack]
15 00    # vload 0         # B
62 08    # aaddf 8         # &B->point
2F       # amload          # B->point
62 00    # aaddf 0         # &B->point->data
2F       # amload          # B->point->data
62 08    # aaddf 8         # &B->point->data->buffer
15 06    # vload 6         # buffer2
4F       # amstore         # B->point->data->buffer = buffer2;
15 00    # vload 0         # B
62 08    # aaddf 8         # &B->point
2F       # amload          # B->point
62 00    # aaddf 0         # &B->point->data
2F       # amload          # B->point->data
62 10    # aaddf 16        # &B->point->data->gap_start
15 08    # vload 8         # new_start
4E       # imstore         # B->point->data->gap_start = new_start;
15 00    # vload 0         # B
62 08    # aaddf 8         # &B->point
2F       # amload          # B->point
62 00    # aaddf 0         # &B->point->data
2F       # amload          # B->point->data
62 14    # aaddf 20        # &B->point->data->gap_end
15 09    # vload 9         # new_end
4E       # imstore         # B->point->data->gap_end = new_end;
10 10    # bipush 16       # 16
14 2F 0C # aldc 12044      # s[12044] = "tbuf.c0:208.21-208.35"
B8 00 10 # invokestatic 16 # gapbuf_new(16, "tbuf.c0:208.21-208.35")
36 0A    # vstore 10       # g = gapbuf_new(16, "tbuf.c0:208.21-208.35");
15 0A    # vload 10        # g
62 08    # aaddf 8         # &g->buffer
15 05    # vload 5         # buffer1
4F       # amstore         # g->buffer = buffer1;
15 0A    # vload 10        # g
62 10    # aaddf 16        # &g->gap_start
10 08    # bipush 8        # 8
4E       # imstore         # g->gap_start = 8;
15 0A    # vload 10        # g
62 14    # aaddf 20        # &g->gap_end
10 10    # bipush 16       # 16
4E       # imstore         # g->gap_end = 16;
15 0A    # vload 10        # g
14 2F 22 # aldc 12066      # s[12066] = "tbuf.c0:212.19-212.31"
B8 00 0B # invokestatic 11 # is_gapbuf(g, "tbuf.c0:212.19-212.31")
14 2F 38 # aldc 12088      # s[12088] = "tbuf.c0:212.12-212.33: @assert annotation failed"
CF       # assert          # assertis_gapbuf(g, "tbuf.c0:212.19-212.31") [failure message on stack]
14 2F 69 # aldc 12137      # s[12137] = "tbuf.c0:213.22-213.31"
B8 00 3B # invokestatic 59 # dll_new("tbuf.c0:213.22-213.31")
36 0B    # vstore 11       # dll_1 = dll_new("tbuf.c0:213.22-213.31");
15 0B    # vload 11        # dll_1
62 00    # aaddf 0         # &dll_1->data
15 0A    # vload 10        # g
4F       # amstore         # dll_1->data = g;
15 0B    # vload 11        # dll_1
62 10    # aaddf 16        # &dll_1->prev
15 02    # vload 2         # pt
62 10    # aaddf 16        # &pt->prev
2F       # amload          # pt->prev
4F       # amstore         # dll_1->prev = pt->prev;
15 00    # vload 0         # B
62 08    # aaddf 8         # &B->point
2F       # amload          # B->point
62 10    # aaddf 16        # &B->point->prev
2F       # amload          # B->point->prev
62 08    # aaddf 8         # &B->point->prev->next
15 0B    # vload 11        # dll_1
4F       # amstore         # B->point->prev->next = dll_1;
15 0B    # vload 11        # dll_1
62 08    # aaddf 8         # &dll_1->next
15 02    # vload 2         # pt
4F       # amstore         # dll_1->next = pt;
15 00    # vload 0         # B
62 08    # aaddf 8         # &B->point
2F       # amload          # B->point
62 10    # aaddf 16        # &B->point->prev
15 0B    # vload 11        # dll_1
4F       # amstore         # B->point->prev = dll_1;
15 00    # vload 0         # B
14 2F 7F # aldc 12159      # s[12159] = "tbuf.c0:219.19-219.29"
B8 00 31 # invokestatic 49 # is_tbuf(B, "tbuf.c0:219.19-219.29")
14 2F 95 # aldc 12181      # s[12181] = "tbuf.c0:219.12-219.31: @assert annotation failed"
CF       # assert          # assertis_tbuf(B, "tbuf.c0:219.19-219.29") [failure message on stack]
15 00    # vload 0         # B
14 2F C6 # aldc 12230      # s[12230] = "tbuf.c0:141.12-141.22"
B8 00 31 # invokestatic 49 # is_tbuf(B, "tbuf.c0:141.12-141.22")
14 2F DC # aldc 12252      # s[12252] = "tbuf.c0:141.4-141.24: @ensures annotation failed"
CF       # assert          # assertis_tbuf(B, "tbuf.c0:141.12-141.22") [failure message on stack]
15 00    # vload 0         # B
62 08    # aaddf 8         # &B->point
2F       # amload          # B->point
62 00    # aaddf 0         # &B->point->data
2F       # amload          # B->point->data
14 30 0D # aldc 12301      # s[12301] = "tbuf.c0:142.13-142.40"
B8 00 0D # invokestatic 13 # gapbuf_full(B->point->data, "tbuf.c0:142.13-142.40")
10 01    # bipush 1        # 
82       # ixor            # !(gapbuf_full(B->point->data, "tbuf.c0:142.13-142.40"))
14 30 23 # aldc 12323      # s[12323] = "tbuf.c0:142.4-142.42: @ensures annotation failed"
CF       # assert          # assert!(gapbuf_full(B->point->data, "tbuf.c0:142.13-142.40")) [failure message on stack]
10 00    # bipush 0        # dummy return value
B0       # return          # 
# <584:endif>
15 00    # vload 0         # B
14 30 54 # aldc 12372      # s[12372] = "tbuf.c0:141.12-141.22"
B8 00 31 # invokestatic 49 # is_tbuf(B, "tbuf.c0:141.12-141.22")
14 30 6A # aldc 12394      # s[12394] = "tbuf.c0:141.4-141.24: @ensures annotation failed"
CF       # assert          # assertis_tbuf(B, "tbuf.c0:141.12-141.22") [failure message on stack]
15 00    # vload 0         # B
62 08    # aaddf 8         # &B->point
2F       # amload          # B->point
62 00    # aaddf 0         # &B->point->data
2F       # amload          # B->point->data
14 30 9B # aldc 12443      # s[12443] = "tbuf.c0:142.13-142.40"
B8 00 0D # invokestatic 13 # gapbuf_full(B->point->data, "tbuf.c0:142.13-142.40")
10 01    # bipush 1        # 
82       # ixor            # !(gapbuf_full(B->point->data, "tbuf.c0:142.13-142.40"))
14 30 B1 # aldc 12465      # s[12465] = "tbuf.c0:142.4-142.42: @ensures annotation failed"
CF       # assert          # assert!(gapbuf_full(B->point->data, "tbuf.c0:142.13-142.40")) [failure message on stack]
10 00    # bipush 0        # dummy return value
B0       # return          # 


#<tbuf_forward>
00 02             # number of arguments = 2
00 0C             # number of local variables = 12
00 DF             # code length = 223 bytes
15 00    # vload 0         # B
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (B != NULL) goto <591:cond_true>
A7 00 08 # goto +8         # goto <592:cond_false>
# <591:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <593:cond_end>
# <592:cond_false>
10 00    # bipush 0        # false
# <593:cond_end>
14 30 E2 # aldc 12514      # s[12514] = "tbuf.c0:229.4-229.24: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 31 15 # aldc 12565      # s[12565] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("tbuf.c0:229.4-229.24: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert(B != NULL) [failure message on stack]
15 00    # vload 0         # B
14 31 27 # aldc 12583      # s[12583] = "tbuf.c0:230.13-230.23"
B8 00 31 # invokestatic 49 # is_tbuf(B, "tbuf.c0:230.13-230.23")
14 31 3D # aldc 12605      # s[12605] = "tbuf.c0:230.4-230.24: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 31 70 # aldc 12656      # s[12656] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("tbuf.c0:230.4-230.24: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assertis_tbuf(B, "tbuf.c0:230.13-230.23") [failure message on stack]
15 00    # vload 0         # B
62 08    # aaddf 8         # &B->point
2F       # amload          # B->point
62 08    # aaddf 8         # &B->point->next
2F       # amload          # B->point->next
15 00    # vload 0         # B
62 10    # aaddf 16        # &B->end
2F       # amload          # B->end
A0 00 06 # if_cmpne +6     # if (B->point->next != B->end) goto <597:and>
A7 00 44 # goto +68        # goto <595:else>
# <597:and>
15 00    # vload 0         # B
62 08    # aaddf 8         # &B->point
2F       # amload          # B->point
62 00    # aaddf 0         # &B->point->data
2F       # amload          # B->point->data
14 31 82 # aldc 12674      # s[12674] = "tbuf.c0:233.36-233.67"
B8 00 0F # invokestatic 15 # gapbuf_at_right(B->point->data, "tbuf.c0:233.36-233.67")
10 01    # bipush 1        # true
9F 00 06 # if_cmpeq +6     # if (gapbuf_at_right(B->point->data, "tbuf.c0:233.36-233.67") == true) goto <594:then>
A7 00 2E # goto +46        # goto <595:else>
# <594:then>
15 00    # vload 0         # B
62 08    # aaddf 8         # &B->point
15 00    # vload 0         # B
62 08    # aaddf 8         # &B->point
2F       # amload          # B->point
62 08    # aaddf 8         # &B->point->next
2F       # amload          # B->point->next
4F       # amstore         # B->point = B->point->next;
15 00    # vload 0         # B
62 08    # aaddf 8         # &B->point
2F       # amload          # B->point
62 00    # aaddf 0         # &B->point->data
2F       # amload          # B->point->data
14 31 98 # aldc 12696      # s[12696] = "tbuf.c0:235.8-235.38"
B8 00 11 # invokestatic 17 # gapbuf_forward(B->point->data, "tbuf.c0:235.8-235.38")
57       # pop             # (ignore result)
15 00    # vload 0         # B
14 31 AD # aldc 12717      # s[12717] = "tbuf.c0:236.18-236.28"
B8 00 31 # invokestatic 49 # is_tbuf(B, "tbuf.c0:236.18-236.28")
14 31 C3 # aldc 12739      # s[12739] = "tbuf.c0:236.11-236.30: @assert annotation failed"
CF       # assert          # assertis_tbuf(B, "tbuf.c0:236.18-236.28") [failure message on stack]
A7 00 3A # goto +58        # goto <596:endif>
# <595:else>
15 00    # vload 0         # B
62 08    # aaddf 8         # &B->point
2F       # amload          # B->point
62 00    # aaddf 0         # &B->point->data
2F       # amload          # B->point->data
14 31 F4 # aldc 12788      # s[12788] = "tbuf.c0:238.16-238.47"
B8 00 0F # invokestatic 15 # gapbuf_at_right(B->point->data, "tbuf.c0:238.16-238.47")
10 01    # bipush 1        # true
9F 00 18 # if_cmpeq +24    # if (gapbuf_at_right(B->point->data, "tbuf.c0:238.16-238.47") == true) goto <599:else>
A7 00 03 # goto +3         # goto <598:then>
# <598:then>
15 00    # vload 0         # B
62 08    # aaddf 8         # &B->point
2F       # amload          # B->point
62 00    # aaddf 0         # &B->point->data
2F       # amload          # B->point->data
14 32 0A # aldc 12810      # s[12810] = "tbuf.c0:238.48-238.78"
B8 00 11 # invokestatic 17 # gapbuf_forward(B->point->data, "tbuf.c0:238.48-238.78")
57       # pop             # (ignore result)
A7 00 12 # goto +18        # goto <600:endif>
# <599:else>
15 00    # vload 0         # B
14 32 20 # aldc 12832      # s[12832] = "tbuf.c0:231.12-231.22"
B8 00 31 # invokestatic 49 # is_tbuf(B, "tbuf.c0:231.12-231.22")
14 32 36 # aldc 12854      # s[12854] = "tbuf.c0:231.4-231.23: @ensures annotation failed"
CF       # assert          # assertis_tbuf(B, "tbuf.c0:231.12-231.22") [failure message on stack]
10 00    # bipush 0        # dummy return value
B0       # return          # 
# <600:endif>
# <596:endif>
15 00    # vload 0         # B
14 32 67 # aldc 12903      # s[12903] = "tbuf.c0:231.12-231.22"
B8 00 31 # invokestatic 49 # is_tbuf(B, "tbuf.c0:231.12-231.22")
14 32 7D # aldc 12925      # s[12925] = "tbuf.c0:231.4-231.23: @ensures annotation failed"
CF       # assert          # assertis_tbuf(B, "tbuf.c0:231.12-231.22") [failure message on stack]
10 00    # bipush 0        # dummy return value
B0       # return          # 
15 00    # vload 0         # B
14 32 AE # aldc 12974      # s[12974] = "tbuf.c0:231.12-231.22"
B8 00 31 # invokestatic 49 # is_tbuf(B, "tbuf.c0:231.12-231.22")
14 32 C4 # aldc 12996      # s[12996] = "tbuf.c0:231.4-231.23: @ensures annotation failed"
CF       # assert          # assertis_tbuf(B, "tbuf.c0:231.12-231.22") [failure message on stack]
10 00    # bipush 0        # dummy return value
B0       # return          # 


#<tbuf_backward>
00 02             # number of arguments = 2
00 0C             # number of local variables = 12
00 DF             # code length = 223 bytes
15 00    # vload 0         # B
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (B != NULL) goto <601:cond_true>
A7 00 08 # goto +8         # goto <602:cond_false>
# <601:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <603:cond_end>
# <602:cond_false>
10 00    # bipush 0        # false
# <603:cond_end>
14 32 F5 # aldc 13045      # s[13045] = "tbuf.c0:245.4-245.24: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 33 28 # aldc 13096      # s[13096] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("tbuf.c0:245.4-245.24: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert(B != NULL) [failure message on stack]
15 00    # vload 0         # B
14 33 3A # aldc 13114      # s[13114] = "tbuf.c0:246.13-246.23"
B8 00 31 # invokestatic 49 # is_tbuf(B, "tbuf.c0:246.13-246.23")
14 33 50 # aldc 13136      # s[13136] = "tbuf.c0:246.4-246.24: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 33 83 # aldc 13187      # s[13187] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("tbuf.c0:246.4-246.24: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assertis_tbuf(B, "tbuf.c0:246.13-246.23") [failure message on stack]
15 00    # vload 0         # B
62 08    # aaddf 8         # &B->point
2F       # amload          # B->point
62 00    # aaddf 0         # &B->point->data
2F       # amload          # B->point->data
14 33 95 # aldc 13205      # s[13205] = "tbuf.c0:249.11-249.41"
B8 00 0E # invokestatic 14 # gapbuf_at_left(B->point->data, "tbuf.c0:249.11-249.41")
10 01    # bipush 1        # true
9F 00 18 # if_cmpeq +24    # if (gapbuf_at_left(B->point->data, "tbuf.c0:249.11-249.41") == true) goto <605:else>
A7 00 03 # goto +3         # goto <604:then>
# <604:then>
15 00    # vload 0         # B
62 08    # aaddf 8         # &B->point
2F       # amload          # B->point
62 00    # aaddf 0         # &B->point->data
2F       # amload          # B->point->data
14 33 AB # aldc 13227      # s[13227] = "tbuf.c0:249.43-249.74"
B8 00 12 # invokestatic 18 # gapbuf_backward(B->point->data, "tbuf.c0:249.43-249.74")
57       # pop             # (ignore result)
A7 00 66 # goto +102       # goto <606:endif>
# <605:else>
15 00    # vload 0         # B
62 08    # aaddf 8         # &B->point
2F       # amload          # B->point
62 00    # aaddf 0         # &B->point->data
2F       # amload          # B->point->data
14 33 C1 # aldc 13249      # s[13249] = "tbuf.c0:250.13-250.43"
B8 00 0E # invokestatic 14 # gapbuf_at_left(B->point->data, "tbuf.c0:250.13-250.43")
10 01    # bipush 1        # true
9F 00 06 # if_cmpeq +6     # if (gapbuf_at_left(B->point->data, "tbuf.c0:250.13-250.43") == true) goto <610:and>
A7 00 41 # goto +65        # goto <608:else>
# <610:and>
15 00    # vload 0         # B
62 08    # aaddf 8         # &B->point
2F       # amload          # B->point
62 10    # aaddf 16        # &B->point->prev
2F       # amload          # B->point->prev
15 00    # vload 0         # B
62 00    # aaddf 0         # &B->start
2F       # amload          # B->start
A0 00 06 # if_cmpne +6     # if (B->point->prev != B->start) goto <607:then>
A7 00 2E # goto +46        # goto <608:else>
# <607:then>
15 00    # vload 0         # B
62 08    # aaddf 8         # &B->point
15 00    # vload 0         # B
62 08    # aaddf 8         # &B->point
2F       # amload          # B->point
62 10    # aaddf 16        # &B->point->prev
2F       # amload          # B->point->prev
4F       # amstore         # B->point = B->point->prev;
15 00    # vload 0         # B
62 08    # aaddf 8         # &B->point
2F       # amload          # B->point
62 00    # aaddf 0         # &B->point->data
2F       # amload          # B->point->data
14 33 D7 # aldc 13271      # s[13271] = "tbuf.c0:252.8-252.39"
B8 00 12 # invokestatic 18 # gapbuf_backward(B->point->data, "tbuf.c0:252.8-252.39")
57       # pop             # (ignore result)
15 00    # vload 0         # B
14 33 EC # aldc 13292      # s[13292] = "tbuf.c0:253.18-253.28"
B8 00 31 # invokestatic 49 # is_tbuf(B, "tbuf.c0:253.18-253.28")
14 34 02 # aldc 13314      # s[13314] = "tbuf.c0:253.11-253.30: @assert annotation failed"
CF       # assert          # assertis_tbuf(B, "tbuf.c0:253.18-253.28") [failure message on stack]
A7 00 12 # goto +18        # goto <609:endif>
# <608:else>
15 00    # vload 0         # B
14 34 33 # aldc 13363      # s[13363] = "tbuf.c0:247.12-247.22"
B8 00 31 # invokestatic 49 # is_tbuf(B, "tbuf.c0:247.12-247.22")
14 34 49 # aldc 13385      # s[13385] = "tbuf.c0:247.4-247.23: @ensures annotation failed"
CF       # assert          # assertis_tbuf(B, "tbuf.c0:247.12-247.22") [failure message on stack]
10 00    # bipush 0        # dummy return value
B0       # return          # 
# <609:endif>
# <606:endif>
15 00    # vload 0         # B
14 34 7A # aldc 13434      # s[13434] = "tbuf.c0:247.12-247.22"
B8 00 31 # invokestatic 49 # is_tbuf(B, "tbuf.c0:247.12-247.22")
14 34 90 # aldc 13456      # s[13456] = "tbuf.c0:247.4-247.23: @ensures annotation failed"
CF       # assert          # assertis_tbuf(B, "tbuf.c0:247.12-247.22") [failure message on stack]
10 00    # bipush 0        # dummy return value
B0       # return          # 
15 00    # vload 0         # B
14 34 C1 # aldc 13505      # s[13505] = "tbuf.c0:247.12-247.22"
B8 00 31 # invokestatic 49 # is_tbuf(B, "tbuf.c0:247.12-247.22")
14 34 D7 # aldc 13527      # s[13527] = "tbuf.c0:247.4-247.23: @ensures annotation failed"
CF       # assert          # assertis_tbuf(B, "tbuf.c0:247.12-247.22") [failure message on stack]
10 00    # bipush 0        # dummy return value
B0       # return          # 


#<tbuf_insert>
00 03             # number of arguments = 3
00 0C             # number of local variables = 12
00 A5             # code length = 165 bytes
15 00    # vload 0         # B
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (B != NULL) goto <611:cond_true>
A7 00 08 # goto +8         # goto <612:cond_false>
# <611:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <613:cond_end>
# <612:cond_false>
10 00    # bipush 0        # false
# <613:cond_end>
14 35 08 # aldc 13576      # s[13576] = "tbuf.c0:260.4-260.24: @requires annotation failed\n"
15 02    # vload 2         # _caller
14 35 3B # aldc 13627      # s[13627] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("tbuf.c0:260.4-260.24: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert(B != NULL) [failure message on stack]
15 00    # vload 0         # B
14 35 4D # aldc 13645      # s[13645] = "tbuf.c0:261.13-261.23"
B8 00 31 # invokestatic 49 # is_tbuf(B, "tbuf.c0:261.13-261.23")
14 35 63 # aldc 13667      # s[13667] = "tbuf.c0:261.4-261.24: @requires annotation failed\n"
15 02    # vload 2         # _caller
14 35 96 # aldc 13718      # s[13718] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("tbuf.c0:261.4-261.24: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assertis_tbuf(B, "tbuf.c0:261.13-261.23") [failure message on stack]
15 00    # vload 0         # B
62 08    # aaddf 8         # &B->point
2F       # amload          # B->point
62 00    # aaddf 0         # &B->point->data
2F       # amload          # B->point->data
36 03    # vstore 3        # gbuf = B->point->data;
15 03    # vload 3         # gbuf
14 35 A8 # aldc 13736      # s[13736] = "tbuf.c0:265.9-265.26"
B8 00 0D # invokestatic 13 # gapbuf_full(gbuf, "tbuf.c0:265.9-265.26")
10 01    # bipush 1        # true
9F 00 23 # if_cmpeq +35    # if (gapbuf_full(gbuf, "tbuf.c0:265.9-265.26") == true) goto <615:else>
A7 00 03 # goto +3         # goto <614:then>
# <614:then>
15 03    # vload 3         # gbuf
15 01    # vload 1         # c
14 35 BD # aldc 13757      # s[13757] = "tbuf.c0:267.7-267.29"
B8 00 13 # invokestatic 19 # gapbuf_insert(gbuf, c, "tbuf.c0:267.7-267.29")
57       # pop             # (ignore result)
15 00    # vload 0         # B
14 35 D2 # aldc 13778      # s[13778] = "tbuf.c0:262.12-262.22"
B8 00 31 # invokestatic 49 # is_tbuf(B, "tbuf.c0:262.12-262.22")
14 35 E8 # aldc 13800      # s[13800] = "tbuf.c0:262.4-262.23: @ensures annotation failed"
CF       # assert          # assertis_tbuf(B, "tbuf.c0:262.12-262.22") [failure message on stack]
10 00    # bipush 0        # dummy return value
B0       # return          # 
A7 00 2C # goto +44        # goto <616:endif>
# <615:else>
15 00    # vload 0         # B
14 36 19 # aldc 13849      # s[13849] = "tbuf.c0:272.6-272.22"
B8 00 33 # invokestatic 51 # tbuf_split_pt(B, "tbuf.c0:272.6-272.22")
57       # pop             # (ignore result)
15 00    # vload 0         # B
62 08    # aaddf 8         # &B->point
2F       # amload          # B->point
62 00    # aaddf 0         # &B->point->data
2F       # amload          # B->point->data
15 01    # vload 1         # c
14 36 2E # aldc 13870      # s[13870] = "tbuf.c0:273.6-273.38"
B8 00 13 # invokestatic 19 # gapbuf_insert(B->point->data, c, "tbuf.c0:273.6-273.38")
57       # pop             # (ignore result)
15 00    # vload 0         # B
14 36 43 # aldc 13891      # s[13891] = "tbuf.c0:262.12-262.22"
B8 00 31 # invokestatic 49 # is_tbuf(B, "tbuf.c0:262.12-262.22")
14 36 59 # aldc 13913      # s[13913] = "tbuf.c0:262.4-262.23: @ensures annotation failed"
CF       # assert          # assertis_tbuf(B, "tbuf.c0:262.12-262.22") [failure message on stack]
10 00    # bipush 0        # dummy return value
B0       # return          # 
# <616:endif>
15 00    # vload 0         # B
14 36 8A # aldc 13962      # s[13962] = "tbuf.c0:262.12-262.22"
B8 00 31 # invokestatic 49 # is_tbuf(B, "tbuf.c0:262.12-262.22")
14 36 A0 # aldc 13984      # s[13984] = "tbuf.c0:262.4-262.23: @ensures annotation failed"
CF       # assert          # assertis_tbuf(B, "tbuf.c0:262.12-262.22") [failure message on stack]
10 00    # bipush 0        # dummy return value
B0       # return          # 


#<tbuf_delete>
00 02             # number of arguments = 2
00 0C             # number of local variables = 12
01 CD             # code length = 461 bytes
15 00    # vload 0         # B
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (B != NULL) goto <617:cond_true>
A7 00 08 # goto +8         # goto <618:cond_false>
# <617:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <619:cond_end>
# <618:cond_false>
10 00    # bipush 0        # false
# <619:cond_end>
14 36 D1 # aldc 14033      # s[14033] = "tbuf.c0:281.4-281.24: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 37 04 # aldc 14084      # s[14084] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("tbuf.c0:281.4-281.24: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert(B != NULL) [failure message on stack]
15 00    # vload 0         # B
14 37 16 # aldc 14102      # s[14102] = "tbuf.c0:282.13-282.23"
B8 00 31 # invokestatic 49 # is_tbuf(B, "tbuf.c0:282.13-282.23")
14 37 2C # aldc 14124      # s[14124] = "tbuf.c0:282.4-282.24: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 37 5F # aldc 14175      # s[14175] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("tbuf.c0:282.4-282.24: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assertis_tbuf(B, "tbuf.c0:282.13-282.23") [failure message on stack]
15 00    # vload 0         # B
62 08    # aaddf 8         # &B->point
2F       # amload          # B->point
62 00    # aaddf 0         # &B->point->data
2F       # amload          # B->point->data
36 02    # vstore 2        # gbuf = B->point->data;
15 02    # vload 2         # gbuf
14 37 71 # aldc 14193      # s[14193] = "tbuf.c0:287.11-287.31"
B8 00 0E # invokestatic 14 # gapbuf_at_left(gbuf, "tbuf.c0:287.11-287.31")
10 01    # bipush 1        # true
9F 00 12 # if_cmpeq +18    # if (gapbuf_at_left(gbuf, "tbuf.c0:287.11-287.31") == true) goto <621:else>
A7 00 03 # goto +3         # goto <620:then>
# <620:then>
15 02    # vload 2         # gbuf
14 37 87 # aldc 14215      # s[14215] = "tbuf.c0:287.33-287.52"
B8 00 14 # invokestatic 20 # gapbuf_delete(gbuf, "tbuf.c0:287.33-287.52")
57       # pop             # (ignore result)
A7 00 74 # goto +116       # goto <622:endif>
# <621:else>
15 02    # vload 2         # gbuf
14 37 9D # aldc 14237      # s[14237] = "tbuf.c0:289.14-289.32"
B8 00 0C # invokestatic 12 # gapbuf_empty(gbuf, "tbuf.c0:289.14-289.32")
10 01    # bipush 1        # true
9F 00 58 # if_cmpeq +88    # if (gapbuf_empty(gbuf, "tbuf.c0:289.14-289.32") == true) goto <624:else>
A7 00 03 # goto +3         # goto <627:and>
# <627:and>
15 02    # vload 2         # gbuf
14 37 B3 # aldc 14259      # s[14259] = "tbuf.c0:289.36-289.56"
B8 00 0E # invokestatic 14 # gapbuf_at_left(gbuf, "tbuf.c0:289.36-289.56")
10 01    # bipush 1        # true
9F 00 06 # if_cmpeq +6     # if (gapbuf_at_left(gbuf, "tbuf.c0:289.36-289.56") == true) goto <626:and>
A7 00 45 # goto +69        # goto <624:else>
# <626:and>
15 00    # vload 0         # B
62 08    # aaddf 8         # &B->point
2F       # amload          # B->point
62 10    # aaddf 16        # &B->point->prev
2F       # amload          # B->point->prev
15 00    # vload 0         # B
62 00    # aaddf 0         # &B->start
2F       # amload          # B->start
A0 00 06 # if_cmpne +6     # if (B->point->prev != B->start) goto <623:then>
A7 00 32 # goto +50        # goto <624:else>
# <623:then>
15 00    # vload 0         # B
62 08    # aaddf 8         # &B->point
15 00    # vload 0         # B
62 08    # aaddf 8         # &B->point
2F       # amload          # B->point
62 10    # aaddf 16        # &B->point->prev
2F       # amload          # B->point->prev
4F       # amstore         # B->point = B->point->prev;
15 00    # vload 0         # B
62 08    # aaddf 8         # &B->point
2F       # amload          # B->point
62 00    # aaddf 0         # &B->point->data
2F       # amload          # B->point->data
36 02    # vstore 2        # gbuf = B->point->data;
15 02    # vload 2         # gbuf
14 37 C9 # aldc 14281      # s[14281] = "tbuf.c0:295.18-295.33"
B8 00 0B # invokestatic 11 # is_gapbuf(gbuf, "tbuf.c0:295.18-295.33")
14 37 DF # aldc 14303      # s[14303] = "tbuf.c0:295.11-295.35: @assert annotation failed"
CF       # assert          # assertis_gapbuf(gbuf, "tbuf.c0:295.18-295.33") [failure message on stack]
15 02    # vload 2         # gbuf
14 38 10 # aldc 14352      # s[14352] = "tbuf.c0:296.8-296.27"
B8 00 14 # invokestatic 20 # gapbuf_delete(gbuf, "tbuf.c0:296.8-296.27")
57       # pop             # (ignore result)
A7 00 12 # goto +18        # goto <625:endif>
# <624:else>
15 00    # vload 0         # B
14 38 25 # aldc 14373      # s[14373] = "tbuf.c0:283.12-283.22"
B8 00 31 # invokestatic 49 # is_tbuf(B, "tbuf.c0:283.12-283.22")
14 38 3B # aldc 14395      # s[14395] = "tbuf.c0:283.4-283.23: @ensures annotation failed"
CF       # assert          # assertis_tbuf(B, "tbuf.c0:283.12-283.22") [failure message on stack]
10 00    # bipush 0        # dummy return value
B0       # return          # 
# <625:endif>
# <622:endif>
15 02    # vload 2         # gbuf
14 38 6C # aldc 14444      # s[14444] = "tbuf.c0:299.8-299.26"
B8 00 0C # invokestatic 12 # gapbuf_empty(gbuf, "tbuf.c0:299.8-299.26")
10 01    # bipush 1        # true
9F 00 06 # if_cmpeq +6     # if (gapbuf_empty(gbuf, "tbuf.c0:299.8-299.26") == true) goto <628:then>
A7 00 E4 # goto +228       # goto <629:else>
# <628:then>
15 00    # vload 0         # B
62 00    # aaddf 0         # &B->start
2F       # amload          # B->start
15 00    # vload 0         # B
62 08    # aaddf 8         # &B->point
2F       # amload          # B->point
62 10    # aaddf 16        # &B->point->prev
2F       # amload          # B->point->prev
9F 00 06 # if_cmpeq +6     # if (B->start == B->point->prev) goto <634:and>
A7 00 28 # goto +40        # goto <632:else>
# <634:and>
15 00    # vload 0         # B
62 08    # aaddf 8         # &B->point
2F       # amload          # B->point
62 08    # aaddf 8         # &B->point->next
2F       # amload          # B->point->next
15 00    # vload 0         # B
62 10    # aaddf 16        # &B->end
2F       # amload          # B->end
9F 00 06 # if_cmpeq +6     # if (B->point->next == B->end) goto <631:then>
A7 00 15 # goto +21        # goto <632:else>
# <631:then>
15 00    # vload 0         # B
14 38 81 # aldc 14465      # s[14465] = "tbuf.c0:283.12-283.22"
B8 00 31 # invokestatic 49 # is_tbuf(B, "tbuf.c0:283.12-283.22")
14 38 97 # aldc 14487      # s[14487] = "tbuf.c0:283.4-283.23: @ensures annotation failed"
CF       # assert          # assertis_tbuf(B, "tbuf.c0:283.12-283.22") [failure message on stack]
10 00    # bipush 0        # dummy return value
B0       # return          # 
A7 00 A9 # goto +169       # goto <633:endif>
# <632:else>
15 00    # vload 0         # B
62 00    # aaddf 0         # &B->start
2F       # amload          # B->start
15 00    # vload 0         # B
62 08    # aaddf 8         # &B->point
2F       # amload          # B->point
62 10    # aaddf 16        # &B->point->prev
2F       # amload          # B->point->prev
9F 00 06 # if_cmpeq +6     # if (B->start == B->point->prev) goto <635:then>
A7 00 48 # goto +72        # goto <636:else>
# <635:then>
15 00    # vload 0         # B
62 08    # aaddf 8         # &B->point
15 00    # vload 0         # B
62 08    # aaddf 8         # &B->point
2F       # amload          # B->point
62 08    # aaddf 8         # &B->point->next
2F       # amload          # B->point->next
4F       # amstore         # B->point = B->point->next;
15 00    # vload 0         # B
62 08    # aaddf 8         # &B->point
2F       # amload          # B->point
62 10    # aaddf 16        # &B->point->prev
15 00    # vload 0         # B
62 00    # aaddf 0         # &B->start
2F       # amload          # B->start
4F       # amstore         # B->point->prev = B->start;
15 00    # vload 0         # B
62 00    # aaddf 0         # &B->start
2F       # amload          # B->start
62 08    # aaddf 8         # &B->start->next
15 00    # vload 0         # B
62 08    # aaddf 8         # &B->point
2F       # amload          # B->point
4F       # amstore         # B->start->next = B->point;
15 00    # vload 0         # B
14 38 C8 # aldc 14536      # s[14536] = "tbuf.c0:311.21-311.31"
B8 00 31 # invokestatic 49 # is_tbuf(B, "tbuf.c0:311.21-311.31")
14 38 DE # aldc 14558      # s[14558] = "tbuf.c0:311.14-311.33: @assert annotation failed"
CF       # assert          # assertis_tbuf(B, "tbuf.c0:311.21-311.31") [failure message on stack]
15 00    # vload 0         # B
14 39 0F # aldc 14607      # s[14607] = "tbuf.c0:283.12-283.22"
B8 00 31 # invokestatic 49 # is_tbuf(B, "tbuf.c0:283.12-283.22")
14 39 25 # aldc 14629      # s[14629] = "tbuf.c0:283.4-283.23: @ensures annotation failed"
CF       # assert          # assertis_tbuf(B, "tbuf.c0:283.12-283.22") [failure message on stack]
10 00    # bipush 0        # dummy return value
B0       # return          # 
A7 00 51 # goto +81        # goto <637:endif>
# <636:else>
15 00    # vload 0         # B
62 08    # aaddf 8         # &B->point
2F       # amload          # B->point
62 10    # aaddf 16        # &B->point->prev
2F       # amload          # B->point->prev
62 08    # aaddf 8         # &B->point->prev->next
15 00    # vload 0         # B
62 08    # aaddf 8         # &B->point
2F       # amload          # B->point
62 08    # aaddf 8         # &B->point->next
2F       # amload          # B->point->next
4F       # amstore         # B->point->prev->next = B->point->next;
15 00    # vload 0         # B
62 08    # aaddf 8         # &B->point
2F       # amload          # B->point
62 08    # aaddf 8         # &B->point->next
2F       # amload          # B->point->next
62 10    # aaddf 16        # &B->point->next->prev
15 00    # vload 0         # B
62 08    # aaddf 8         # &B->point
2F       # amload          # B->point
62 10    # aaddf 16        # &B->point->prev
2F       # amload          # B->point->prev
4F       # amstore         # B->point->next->prev = B->point->prev;
15 00    # vload 0         # B
62 08    # aaddf 8         # &B->point
15 00    # vload 0         # B
62 08    # aaddf 8         # &B->point
2F       # amload          # B->point
62 10    # aaddf 16        # &B->point->prev
2F       # amload          # B->point->prev
4F       # amstore         # B->point = B->point->prev;
15 00    # vload 0         # B
14 39 56 # aldc 14678      # s[14678] = "tbuf.c0:320.21-320.31"
B8 00 31 # invokestatic 49 # is_tbuf(B, "tbuf.c0:320.21-320.31")
14 39 6C # aldc 14700      # s[14700] = "tbuf.c0:320.14-320.33: @assert annotation failed"
CF       # assert          # assertis_tbuf(B, "tbuf.c0:320.21-320.31") [failure message on stack]
15 00    # vload 0         # B
14 39 9D # aldc 14749      # s[14749] = "tbuf.c0:283.12-283.22"
B8 00 31 # invokestatic 49 # is_tbuf(B, "tbuf.c0:283.12-283.22")
14 39 B3 # aldc 14771      # s[14771] = "tbuf.c0:283.4-283.23: @ensures annotation failed"
CF       # assert          # assertis_tbuf(B, "tbuf.c0:283.12-283.22") [failure message on stack]
10 00    # bipush 0        # dummy return value
B0       # return          # 
# <637:endif>
# <633:endif>
A7 00 03 # goto +3         # goto <630:endif>
# <629:else>
# <630:endif>
15 00    # vload 0         # B
14 39 E4 # aldc 14820      # s[14820] = "tbuf.c0:283.12-283.22"
B8 00 31 # invokestatic 49 # is_tbuf(B, "tbuf.c0:283.12-283.22")
14 39 FA # aldc 14842      # s[14842] = "tbuf.c0:283.4-283.23: @ensures annotation failed"
CF       # assert          # assertis_tbuf(B, "tbuf.c0:283.12-283.22") [failure message on stack]
10 00    # bipush 0        # dummy return value
B0       # return          # 


#<valid_gap_buffers>
00 02             # number of arguments = 2
00 08             # number of local variables = 8
00 EB             # code length = 235 bytes
15 00    # vload 0         # B
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (B != NULL) goto <439:cond_true>
A7 00 08 # goto +8         # goto <440:cond_false>
# <439:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <441:cond_end>
# <440:cond_false>
10 00    # bipush 0        # false
# <441:cond_end>
14 25 00 # aldc 9472       # s[9472] = "tbuf.c0:30.4-30.23: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 25 31 # aldc 9521       # s[9521] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("tbuf.c0:30.4-30.23: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert(B != NULL) [failure message on stack]
15 00    # vload 0         # B
14 25 43 # aldc 9539       # s[9539] = "tbuf.c0:31.13-31.25"
B8 00 25 # invokestatic 37 # is_dll_pt(B, "tbuf.c0:31.13-31.25")
14 25 57 # aldc 9559       # s[9559] = "tbuf.c0:31.4-31.26: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 25 88 # aldc 9608       # s[9608] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("tbuf.c0:31.4-31.26: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assertis_dll_pt(B, "tbuf.c0:31.13-31.25") [failure message on stack]
15 00    # vload 0         # B
62 00    # aaddf 0         # &B->start
2F       # amload          # B->start
62 08    # aaddf 8         # &B->start->next
2F       # amload          # B->start->next
36 03    # vstore 3        # d = B->start->next;
# <442:loop>
A7 00 03 # goto +3         # goto <443:body>
# <443:body>
15 03    # vload 3         # d
15 00    # vload 0         # B
62 10    # aaddf 16        # &B->end
2F       # amload          # B->end
A0 00 06 # if_cmpne +6     # if (d != B->end) goto <445:then>
A7 00 85 # goto +133       # goto <446:else>
# <445:then>
15 03    # vload 3         # d
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (d != NULL) goto <448:cond_true>
A7 00 08 # goto +8         # goto <449:cond_false>
# <448:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <450:cond_end>
# <449:cond_false>
10 00    # bipush 0        # false
# <450:cond_end>
14 25 9A # aldc 9626       # s[9626] = "tbuf.c0:37.12-37.30: @assert annotation failed"
CF       # assert          # assert(d != NULL) [failure message on stack]
15 03    # vload 3         # d
62 00    # aaddf 0         # &d->data
2F       # amload          # d->data
36 04    # vstore 4        # g = d->data;
15 04    # vload 4         # g
14 25 C9 # aldc 9673       # s[9673] = "tbuf.c0:39.14-39.26"
B8 00 0B # invokestatic 11 # is_gapbuf(g, "tbuf.c0:39.14-39.26")
10 01    # bipush 1        # true
9F 00 1C # if_cmpeq +28    # if (is_gapbuf(g, "tbuf.c0:39.14-39.26") == true) goto <452:else>
A7 00 03 # goto +3         # goto <451:then>
# <451:then>
10 00    # bipush 0        # false
36 02    # vstore 2        # _result = false;
15 00    # vload 0         # B
14 25 DD # aldc 9693       # s[9693] = "tbuf.c0:32.12-32.24"
B8 00 25 # invokestatic 37 # is_dll_pt(B, "tbuf.c0:32.12-32.24")
14 25 F1 # aldc 9713       # s[9713] = "tbuf.c0:32.4-32.25: @ensures annotation failed"
CF       # assert          # assertis_dll_pt(B, "tbuf.c0:32.12-32.24") [failure message on stack]
15 02    # vload 2         # _result
B0       # return          # 
A7 00 03 # goto +3         # goto <453:endif>
# <452:else>
# <453:endif>
15 04    # vload 4         # g
62 00    # aaddf 0         # &g->limit
2E       # imload          # g->limit
10 10    # bipush 16       # 16
A0 00 06 # if_cmpne +6     # if (g->limit != 16) goto <454:then>
A7 00 19 # goto +25        # goto <455:else>
# <454:then>
10 00    # bipush 0        # false
36 02    # vstore 2        # _result = false;
15 00    # vload 0         # B
14 26 20 # aldc 9760       # s[9760] = "tbuf.c0:32.12-32.24"
B8 00 25 # invokestatic 37 # is_dll_pt(B, "tbuf.c0:32.12-32.24")
14 26 34 # aldc 9780       # s[9780] = "tbuf.c0:32.4-32.25: @ensures annotation failed"
CF       # assert          # assertis_dll_pt(B, "tbuf.c0:32.12-32.24") [failure message on stack]
15 02    # vload 2         # _result
B0       # return          # 
A7 00 03 # goto +3         # goto <456:endif>
# <455:else>
# <456:endif>
15 03    # vload 3         # d
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (d != NULL) goto <457:cond_true>
A7 00 08 # goto +8         # goto <458:cond_false>
# <457:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <459:cond_end>
# <458:cond_false>
10 00    # bipush 0        # false
# <459:cond_end>
14 26 63 # aldc 9827       # s[9827] = "tbuf.c0:41.12-41.30: @assert annotation failed"
CF       # assert          # assert(d != NULL) [failure message on stack]
15 03    # vload 3         # d
62 08    # aaddf 8         # &d->next
2F       # amload          # d->next
36 03    # vstore 3        # d = d->next;
A7 00 06 # goto +6         # goto <447:endif>
# <446:else>
A7 00 06 # goto +6         # break
# <447:endif>
A7 FF 6B # goto -149       # goto <442:loop>
# <444:exit>
10 01    # bipush 1        # true
36 02    # vstore 2        # _result = true;
15 00    # vload 0         # B
14 26 92 # aldc 9874       # s[9874] = "tbuf.c0:32.12-32.24"
B8 00 25 # invokestatic 37 # is_dll_pt(B, "tbuf.c0:32.12-32.24")
14 26 A6 # aldc 9894       # s[9894] = "tbuf.c0:32.4-32.25: @ensures annotation failed"
CF       # assert          # assertis_dll_pt(B, "tbuf.c0:32.12-32.24") [failure message on stack]
15 02    # vload 2         # _result
B0       # return          # 


#<gapbufs_aligned>
00 02             # number of arguments = 2
00 08             # number of local variables = 8
00 FC             # code length = 252 bytes
15 00    # vload 0         # B
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (B != NULL) goto <460:cond_true>
A7 00 08 # goto +8         # goto <461:cond_false>
# <460:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <462:cond_end>
# <461:cond_false>
10 00    # bipush 0        # false
# <462:cond_end>
14 26 D5 # aldc 9941       # s[9941] = "tbuf.c0:48.4-48.23: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 27 06 # aldc 9990       # s[9990] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("tbuf.c0:48.4-48.23: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert(B != NULL) [failure message on stack]
15 00    # vload 0         # B
14 27 18 # aldc 10008      # s[10008] = "tbuf.c0:49.13-49.25"
B8 00 25 # invokestatic 37 # is_dll_pt(B, "tbuf.c0:49.13-49.25")
14 27 2C # aldc 10028      # s[10028] = "tbuf.c0:49.4-49.26: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 27 5D # aldc 10077      # s[10077] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("tbuf.c0:49.4-49.26: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assertis_dll_pt(B, "tbuf.c0:49.13-49.25") [failure message on stack]
10 01    # bipush 1        # true
36 03    # vstore 3        # left = true;
15 00    # vload 0         # B
62 08    # aaddf 8         # &B->point
2F       # amload          # B->point
36 04    # vstore 4        # pt = B->point;
15 00    # vload 0         # B
62 00    # aaddf 0         # &B->start
2F       # amload          # B->start
62 08    # aaddf 8         # &B->start->next
2F       # amload          # B->start->next
36 05    # vstore 5        # current = B->start->next;
# <463:loop>
A7 00 03 # goto +3         # goto <464:body>
# <464:body>
15 05    # vload 5         # current
15 00    # vload 0         # B
62 10    # aaddf 16        # &B->end
2F       # amload          # B->end
A0 00 06 # if_cmpne +6     # if (current != B->end) goto <466:then>
A7 00 8B # goto +139       # goto <467:else>
# <466:then>
15 05    # vload 5         # current
62 00    # aaddf 0         # &current->data
2F       # amload          # current->data
36 06    # vstore 6        # g = current->data;
15 05    # vload 5         # current
15 04    # vload 4         # pt
9F 00 06 # if_cmpeq +6     # if (current == pt) goto <469:then>
A7 00 0A # goto +10        # goto <470:else>
# <469:then>
10 00    # bipush 0        # false
36 03    # vstore 3        # left = false;
A7 00 69 # goto +105       # goto <471:endif>
# <470:else>
15 03    # vload 3         # left
10 01    # bipush 1        # true
9F 00 06 # if_cmpeq +6     # if (left == true) goto <472:then>
A7 00 2C # goto +44        # goto <473:else>
# <472:then>
15 06    # vload 6         # g
14 27 6F # aldc 10095      # s[10095] = "tbuf.c0:61.17-61.35"
B8 00 0F # invokestatic 15 # gapbuf_at_right(g, "tbuf.c0:61.17-61.35")
10 01    # bipush 1        # true
9F 00 1C # if_cmpeq +28    # if (gapbuf_at_right(g, "tbuf.c0:61.17-61.35") == true) goto <476:else>
A7 00 03 # goto +3         # goto <475:then>
# <475:then>
10 00    # bipush 0        # false
36 02    # vstore 2        # _result = false;
15 00    # vload 0         # B
14 27 83 # aldc 10115      # s[10115] = "tbuf.c0:50.12-50.24"
B8 00 25 # invokestatic 37 # is_dll_pt(B, "tbuf.c0:50.12-50.24")
14 27 97 # aldc 10135      # s[10135] = "tbuf.c0:50.4-50.25: @ensures annotation failed"
CF       # assert          # assertis_dll_pt(B, "tbuf.c0:50.12-50.24") [failure message on stack]
15 02    # vload 2         # _result
B0       # return          # 
A7 00 03 # goto +3         # goto <477:endif>
# <476:else>
# <477:endif>
A7 00 36 # goto +54        # goto <474:endif>
# <473:else>
15 03    # vload 3         # left
10 01    # bipush 1        # true
9F 00 2F # if_cmpeq +47    # if (left == true) goto <479:else>
A7 00 03 # goto +3         # goto <478:then>
# <478:then>
15 06    # vload 6         # g
14 27 C6 # aldc 10182      # s[10182] = "tbuf.c0:65.16-65.33"
B8 00 0E # invokestatic 14 # gapbuf_at_left(g, "tbuf.c0:65.16-65.33")
10 01    # bipush 1        # true
9F 00 1C # if_cmpeq +28    # if (gapbuf_at_left(g, "tbuf.c0:65.16-65.33") == true) goto <482:else>
A7 00 03 # goto +3         # goto <481:then>
# <481:then>
10 00    # bipush 0        # false
36 02    # vstore 2        # _result = false;
15 00    # vload 0         # B
14 27 DA # aldc 10202      # s[10202] = "tbuf.c0:50.12-50.24"
B8 00 25 # invokestatic 37 # is_dll_pt(B, "tbuf.c0:50.12-50.24")
14 27 EE # aldc 10222      # s[10222] = "tbuf.c0:50.4-50.25: @ensures annotation failed"
CF       # assert          # assertis_dll_pt(B, "tbuf.c0:50.12-50.24") [failure message on stack]
15 02    # vload 2         # _result
B0       # return          # 
A7 00 03 # goto +3         # goto <483:endif>
# <482:else>
# <483:endif>
A7 00 03 # goto +3         # goto <480:endif>
# <479:else>
# <480:endif>
# <474:endif>
# <471:endif>
15 05    # vload 5         # current
62 08    # aaddf 8         # &current->next
2F       # amload          # current->next
36 05    # vstore 5        # current = current->next;
A7 00 06 # goto +6         # goto <468:endif>
# <467:else>
A7 00 06 # goto +6         # break
# <468:endif>
A7 FF 65 # goto -155       # goto <463:loop>
# <465:exit>
10 01    # bipush 1        # true
36 02    # vstore 2        # _result = true;
15 00    # vload 0         # B
14 28 1D # aldc 10269      # s[10269] = "tbuf.c0:50.12-50.24"
B8 00 25 # invokestatic 37 # is_dll_pt(B, "tbuf.c0:50.12-50.24")
14 28 31 # aldc 10289      # s[10289] = "tbuf.c0:50.4-50.25: @ensures annotation failed"
CF       # assert          # assertis_dll_pt(B, "tbuf.c0:50.12-50.24") [failure message on stack]
15 02    # vload 2         # _result
B0       # return          # 


#<emp_or_non_emp>
00 02             # number of arguments = 2
00 08             # number of local variables = 8
01 18             # code length = 280 bytes
15 00    # vload 0         # B
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (B != NULL) goto <484:cond_true>
A7 00 08 # goto +8         # goto <485:cond_false>
# <484:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <486:cond_end>
# <485:cond_false>
10 00    # bipush 0        # false
# <486:cond_end>
14 28 60 # aldc 10336      # s[10336] = "tbuf.c0:75.4-75.24: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 28 91 # aldc 10385      # s[10385] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("tbuf.c0:75.4-75.24: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert(B != NULL) [failure message on stack]
15 00    # vload 0         # B
14 28 A3 # aldc 10403      # s[10403] = "tbuf.c0:76.13-76.25"
B8 00 25 # invokestatic 37 # is_dll_pt(B, "tbuf.c0:76.13-76.25")
14 28 B7 # aldc 10423      # s[10423] = "tbuf.c0:76.4-76.27: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 28 E8 # aldc 10472      # s[10472] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("tbuf.c0:76.4-76.27: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assertis_dll_pt(B, "tbuf.c0:76.13-76.25") [failure message on stack]
10 00    # bipush 0        # false
36 03    # vstore 3        # length_1 = false;
15 00    # vload 0         # B
62 00    # aaddf 0         # &B->start
2F       # amload          # B->start
62 08    # aaddf 8         # &B->start->next
2F       # amload          # B->start->next
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (B->start->next != NULL) goto <487:cond_true>
A7 00 08 # goto +8         # goto <488:cond_false>
# <487:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <489:cond_end>
# <488:cond_false>
10 00    # bipush 0        # false
# <489:cond_end>
14 28 FA # aldc 10490      # s[10490] = "tbuf.c0:80.9-80.40: @assert annotation failed"
CF       # assert          # assert(B->start->next != NULL) [failure message on stack]
15 00    # vload 0         # B
62 00    # aaddf 0         # &B->start
2F       # amload          # B->start
62 08    # aaddf 8         # &B->start->next
2F       # amload          # B->start->next
62 08    # aaddf 8         # &B->start->next->next
2F       # amload          # B->start->next->next
15 00    # vload 0         # B
62 10    # aaddf 16        # &B->end
2F       # amload          # B->end
9F 00 06 # if_cmpeq +6     # if (B->start->next->next == B->end) goto <490:then>
A7 00 0A # goto +10        # goto <491:else>
# <490:then>
10 01    # bipush 1        # true
36 03    # vstore 3        # length_1 = true;
A7 00 03 # goto +3         # goto <492:endif>
# <491:else>
# <492:endif>
15 00    # vload 0         # B
62 00    # aaddf 0         # &B->start
2F       # amload          # B->start
62 08    # aaddf 8         # &B->start->next
2F       # amload          # B->start->next
36 04    # vstore 4        # d = B->start->next;
15 03    # vload 3         # length_1
10 01    # bipush 1        # true
9F 00 06 # if_cmpeq +6     # if (length_1 == true) goto <493:then>
A7 00 19 # goto +25        # goto <494:else>
# <493:then>
10 01    # bipush 1        # true
36 02    # vstore 2        # _result = true;
15 00    # vload 0         # B
14 29 28 # aldc 10536      # s[10536] = "tbuf.c0:77.12-77.24"
B8 00 25 # invokestatic 37 # is_dll_pt(B, "tbuf.c0:77.12-77.24")
14 29 3C # aldc 10556      # s[10556] = "tbuf.c0:77.4-77.25: @ensures annotation failed"
CF       # assert          # assertis_dll_pt(B, "tbuf.c0:77.12-77.24") [failure message on stack]
15 02    # vload 2         # _result
B0       # return          # 
A7 00 6D # goto +109       # goto <495:endif>
# <494:else>
15 03    # vload 3         # length_1
10 01    # bipush 1        # true
9F 00 66 # if_cmpeq +102   # if (length_1 == true) goto <497:else>
A7 00 03 # goto +3         # goto <496:then>
# <496:then>
# <499:loop>
A7 00 03 # goto +3         # goto <500:body>
# <500:body>
15 04    # vload 4         # d
15 00    # vload 0         # B
62 10    # aaddf 16        # &B->end
2F       # amload          # B->end
A0 00 06 # if_cmpne +6     # if (d != B->end) goto <502:then>
A7 00 4A # goto +74        # goto <503:else>
# <502:then>
15 04    # vload 4         # d
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (d != NULL) goto <505:cond_true>
A7 00 08 # goto +8         # goto <506:cond_false>
# <505:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <507:cond_end>
# <506:cond_false>
10 00    # bipush 0        # false
# <507:cond_end>
14 29 6B # aldc 10603      # s[10603] = "tbuf.c0:89.17-89.34: @assert annotation failed"
CF       # assert          # assert(d != NULL) [failure message on stack]
15 04    # vload 4         # d
62 00    # aaddf 0         # &d->data
2F       # amload          # d->data
14 29 9A # aldc 10650      # s[10650] = "tbuf.c0:90.17-90.38"
B8 00 0C # invokestatic 12 # gapbuf_empty(d->data, "tbuf.c0:90.17-90.38")
10 01    # bipush 1        # true
9F 00 06 # if_cmpeq +6     # if (gapbuf_empty(d->data, "tbuf.c0:90.17-90.38") == true) goto <508:then>
A7 00 19 # goto +25        # goto <509:else>
# <508:then>
10 00    # bipush 0        # false
36 02    # vstore 2        # _result = false;
15 00    # vload 0         # B
14 29 AE # aldc 10670      # s[10670] = "tbuf.c0:77.12-77.24"
B8 00 25 # invokestatic 37 # is_dll_pt(B, "tbuf.c0:77.12-77.24")
14 29 C2 # aldc 10690      # s[10690] = "tbuf.c0:77.4-77.25: @ensures annotation failed"
CF       # assert          # assertis_dll_pt(B, "tbuf.c0:77.12-77.24") [failure message on stack]
15 02    # vload 2         # _result
B0       # return          # 
A7 00 03 # goto +3         # goto <510:endif>
# <509:else>
# <510:endif>
15 04    # vload 4         # d
62 08    # aaddf 8         # &d->next
2F       # amload          # d->next
36 04    # vstore 4        # d = d->next;
A7 00 06 # goto +6         # goto <504:endif>
# <503:else>
A7 00 06 # goto +6         # break
# <504:endif>
A7 FF A6 # goto -90        # goto <499:loop>
# <501:exit>
A7 00 03 # goto +3         # goto <498:endif>
# <497:else>
# <498:endif>
# <495:endif>
10 01    # bipush 1        # true
36 02    # vstore 2        # _result = true;
15 00    # vload 0         # B
14 29 F1 # aldc 10737      # s[10737] = "tbuf.c0:77.12-77.24"
B8 00 25 # invokestatic 37 # is_dll_pt(B, "tbuf.c0:77.12-77.24")
14 2A 05 # aldc 10757      # s[10757] = "tbuf.c0:77.4-77.25: @ensures annotation failed"
CF       # assert          # assertis_dll_pt(B, "tbuf.c0:77.12-77.24") [failure message on stack]
15 02    # vload 2         # _result
B0       # return          # 


#<dll_new>
00 01             # number of arguments = 1
00 08             # number of local variables = 8
00 0B             # code length = 11 bytes
BB 18    # new 24          # alloc(struct dll_node)
36 02    # vstore 2        # result = alloc(struct dll_node);
15 02    # vload 2         # result
36 01    # vstore 1        # _result = result;
15 01    # vload 1         # _result
B0       # return          # 


#<render_char>
00 04             # number of arguments = 4
00 0C             # number of local variables = 12
00 8E             # code length = 142 bytes
15 01    # vload 1         # point
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (point != NULL) goto <641:and>
A7 00 53 # goto +83        # goto <639:else>
# <641:and>
15 01    # vload 1         # point
34       # cmload          # *(point)
10 01    # bipush 1        # true
9F 00 06 # if_cmpeq +6     # if (*(point) == true) goto <638:then>
A7 00 48 # goto +72        # goto <639:else>
# <638:then>
15 00    # vload 0         # c
10 0A    # bipush 10       # '\n'
9F 00 06 # if_cmpeq +6     # if (c == '\n') goto <642:then>
A7 00 25 # goto +37        # goto <643:else>
# <642:then>
15 02    # vload 2         # w
10 20    # bipush 32       # ' '
14 3A 2B # aldc 14891      # s[14891] = "lovas-E0.c0:32.38-32.51"
B8 00 09 # invokestatic 9  # char_ord__1(' ', "lovas-E0.c0:32.38-32.51")
B7 00 0F # invokenative 15 # cc_highlight(char_ord__1(' ', "lovas-E0.c0:32.38-32.51"))
B7 00 0E # invokenative 14 # c_waddch(w, cc_highlight(char_ord__1(' ', "lovas-E0.c0:32.38-32.51")))
57       # pop             # (ignore result)
15 02    # vload 2         # w
10 0A    # bipush 10       # '\n'
14 3A 43 # aldc 14915      # s[14915] = "lovas-E0.c0:33.25-33.39"
B8 00 09 # invokestatic 9  # char_ord__1('\n', "lovas-E0.c0:33.25-33.39")
B7 00 0E # invokenative 14 # c_waddch(w, char_ord__1('\n', "lovas-E0.c0:33.25-33.39"))
57       # pop             # (ignore result)
A7 00 14 # goto +20        # goto <644:endif>
# <643:else>
15 02    # vload 2         # w
15 00    # vload 0         # c
14 3A 5B # aldc 14939      # s[14939] = "lovas-E0.c0:35.38-35.49"
B8 00 09 # invokestatic 9  # char_ord__1(c, "lovas-E0.c0:35.38-35.49")
B7 00 0F # invokenative 15 # cc_highlight(char_ord__1(c, "lovas-E0.c0:35.38-35.49"))
B7 00 0E # invokenative 14 # c_waddch(w, cc_highlight(char_ord__1(c, "lovas-E0.c0:35.38-35.49")))
57       # pop             # (ignore result)
# <644:endif>
15 01    # vload 1         # point
10 00    # bipush 0        # false
55       # cmstore         # *(point) = false;
A7 00 11 # goto +17        # goto <640:endif>
# <639:else>
15 02    # vload 2         # w
15 00    # vload 0         # c
14 3A 73 # aldc 14963      # s[14963] = "lovas-E0.c0:39.21-39.32"
B8 00 09 # invokestatic 9  # char_ord__1(c, "lovas-E0.c0:39.21-39.32")
B7 00 0E # invokenative 14 # c_waddch(w, char_ord__1(c, "lovas-E0.c0:39.21-39.32"))
57       # pop             # (ignore result)
# <640:endif>
15 01    # vload 1         # point
01       # aconst_null     # NULL
9F 00 06 # if_cmpeq +6     # if (point == NULL) goto <645:cond_true>
A7 00 08 # goto +8         # goto <646:cond_false>
# <645:cond_true>
10 01    # bipush 1        # true
A7 00 15 # goto +21        # goto <647:cond_end>
# <646:cond_false>
15 01    # vload 1         # point
34       # cmload          # *(point)
10 00    # bipush 0        # false
9F 00 06 # if_cmpeq +6     # if (*(point) == false) goto <648:cond_true>
A7 00 08 # goto +8         # goto <649:cond_false>
# <648:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <650:cond_end>
# <649:cond_false>
10 00    # bipush 0        # false
# <650:cond_end>
# <647:cond_end>
14 3A 8B # aldc 14987      # s[14987] = "lovas-E0.c0:28.4-28.45: @ensures annotation failed"
CF       # assert          # assert((point == NULL) || (*(point) == false)) [failure message on stack]
10 00    # bipush 0        # dummy return value
B0       # return          # 


#<render_gapbuf>
00 04             # number of arguments = 4
00 0C             # number of local variables = 12
00 98             # code length = 152 bytes
15 00    # vload 0         # G
14 3A BE # aldc 15038      # s[15038] = "lovas-E0.c0:44.13-44.25"
B8 00 0B # invokestatic 11 # is_gapbuf(G, "lovas-E0.c0:44.13-44.25")
14 3A D6 # aldc 15062      # s[15062] = "lovas-E0.c0:44.4-44.26: @requires annotation failed\n"
15 03    # vload 3         # _caller
14 3B 0B # aldc 15115      # s[15115] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("lovas-E0.c0:44.4-44.26: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assertis_gapbuf(G, "lovas-E0.c0:44.13-44.25") [failure message on stack]
10 00    # bipush 0        # 0
36 04    # vstore 4        # i = 0;
# <651:loop>
A7 00 03 # goto +3         # goto <652:body>
# <652:body>
15 04    # vload 4         # i
15 00    # vload 0         # G
62 10    # aaddf 16        # &G->gap_start
2E       # imload          # G->gap_start
A1 00 06 # if_icmplt +6    # if (i < G->gap_start) goto <654:then>
A7 00 20 # goto +32        # goto <655:else>
# <654:then>
15 00    # vload 0         # G
62 08    # aaddf 8         # &G->buffer
2F       # amload          # G->buffer
15 04    # vload 4         # i
63       # aadds           # &G->buffer[i]
34       # cmload          # G->buffer[i]
01       # aconst_null     # NULL
15 02    # vload 2         # w
14 3B 1D # aldc 15133      # s[15133] = "lovas-E0.c0:47.44-47.78"
B8 00 3C # invokestatic 60 # render_char(G->buffer[i], NULL, w, "lovas-E0.c0:47.44-47.78")
57       # pop             # (ignore result)
15 04    # vload 4         # i
10 01    # bipush 1        # 1
60       # iadd            # 
36 04    # vstore 4        # i += 1;
A7 00 06 # goto +6         # goto <656:endif>
# <655:else>
A7 00 06 # goto +6         # break
# <656:endif>
A7 FF D0 # goto -48        # goto <651:loop>
# <653:exit>
15 00    # vload 0         # G
62 14    # aaddf 20        # &G->gap_end
2E       # imload          # G->gap_end
36 04    # vstore 4        # i = G->gap_end;
# <657:loop>
A7 00 03 # goto +3         # goto <658:body>
# <658:body>
15 04    # vload 4         # i
15 00    # vload 0         # G
62 00    # aaddf 0         # &G->limit
2E       # imload          # G->limit
A1 00 06 # if_icmplt +6    # if (i < G->limit) goto <660:then>
A7 00 21 # goto +33        # goto <661:else>
# <660:then>
15 00    # vload 0         # G
62 08    # aaddf 8         # &G->buffer
2F       # amload          # G->buffer
15 04    # vload 4         # i
63       # aadds           # &G->buffer[i]
34       # cmload          # G->buffer[i]
15 01    # vload 1         # point
15 02    # vload 2         # w
14 3B 35 # aldc 15157      # s[15157] = "lovas-E0.c0:49.7-49.42"
B8 00 3C # invokestatic 60 # render_char(G->buffer[i], point, w, "lovas-E0.c0:49.7-49.42")
57       # pop             # (ignore result)
15 04    # vload 4         # i
10 01    # bipush 1        # 1
60       # iadd            # 
36 04    # vstore 4        # i += 1;
A7 00 06 # goto +6         # goto <662:endif>
# <661:else>
A7 00 06 # goto +6         # break
# <662:endif>
A7 FF CF # goto -49        # goto <657:loop>
# <659:exit>
15 00    # vload 0         # G
14 3B 4C # aldc 15180      # s[15180] = "lovas-E0.c0:45.12-45.24"
B8 00 0B # invokestatic 11 # is_gapbuf(G, "lovas-E0.c0:45.12-45.24")
14 3B 64 # aldc 15204      # s[15204] = "lovas-E0.c0:45.4-45.25: @ensures annotation failed"
CF       # assert          # assertis_gapbuf(G, "lovas-E0.c0:45.12-45.24") [failure message on stack]
10 00    # bipush 0        # dummy return value
B0       # return          # 


#<render_buf>
00 03             # number of arguments = 3
00 0C             # number of local variables = 12
00 AF             # code length = 175 bytes
15 00    # vload 0         # B
14 3B 97 # aldc 15255      # s[15255] = "lovas-E0.c0:53.13-53.23"
B8 00 31 # invokestatic 49 # is_tbuf(B, "lovas-E0.c0:53.13-53.23")
14 3B AF # aldc 15279      # s[15279] = "lovas-E0.c0:53.4-53.24: @requires annotation failed\n"
15 02    # vload 2         # _caller
14 3B E4 # aldc 15332      # s[15332] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("lovas-E0.c0:53.4-53.24: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assertis_tbuf(B, "lovas-E0.c0:53.13-53.23") [failure message on stack]
BB 01    # new 1           # alloc(bool)
36 03    # vstore 3        # point = alloc(bool);
15 03    # vload 3         # point
10 00    # bipush 0        # false
55       # cmstore         # *(point) = false;
15 01    # vload 1         # w
10 00    # bipush 0        # 0
10 00    # bipush 0        # 0
B7 00 10 # invokenative 16 # c_wmove(w, 0, 0)
57       # pop             # (ignore result)
15 01    # vload 1         # w
B7 00 11 # invokenative 17 # c_werase(w)
57       # pop             # (ignore result)
15 00    # vload 0         # B
62 00    # aaddf 0         # &B->start
2F       # amload          # B->start
62 08    # aaddf 8         # &B->start->next
2F       # amload          # B->start->next
36 04    # vstore 4        # L = B->start->next;
# <663:loop>
A7 00 03 # goto +3         # goto <664:body>
# <664:body>
15 04    # vload 4         # L
15 00    # vload 0         # B
62 10    # aaddf 16        # &B->end
2F       # amload          # B->end
A0 00 06 # if_cmpne +6     # if (L != B->end) goto <666:then>
A7 00 32 # goto +50        # goto <667:else>
# <666:then>
15 04    # vload 4         # L
15 00    # vload 0         # B
62 08    # aaddf 8         # &B->point
2F       # amload          # B->point
9F 00 06 # if_cmpeq +6     # if (L == B->point) goto <669:then>
A7 00 0B # goto +11        # goto <670:else>
# <669:then>
15 03    # vload 3         # point
10 01    # bipush 1        # true
55       # cmstore         # *(point) = true;
A7 00 03 # goto +3         # goto <671:endif>
# <670:else>
# <671:endif>
15 04    # vload 4         # L
62 00    # aaddf 0         # &L->data
2F       # amload          # L->data
15 03    # vload 3         # point
15 01    # vload 1         # w
14 3B F6 # aldc 15350      # s[15350] = "lovas-E0.c0:64.9-64.41"
B8 00 3D # invokestatic 61 # render_gapbuf(L->data, point, w, "lovas-E0.c0:64.9-64.41")
57       # pop             # (ignore result)
15 04    # vload 4         # L
62 08    # aaddf 8         # &L->next
2F       # amload          # L->next
36 04    # vstore 4        # L = L->next;
A7 00 06 # goto +6         # goto <668:endif>
# <667:else>
A7 00 06 # goto +6         # break
# <668:endif>
A7 FF BE # goto -66        # goto <663:loop>
# <665:exit>
15 03    # vload 3         # point
34       # cmload          # *(point)
10 01    # bipush 1        # true
9F 00 06 # if_cmpeq +6     # if (*(point) == true) goto <672:then>
A7 00 13 # goto +19        # goto <673:else>
# <672:then>
10 20    # bipush 32       # ' '
15 03    # vload 3         # point
15 01    # vload 1         # w
14 3C 0D # aldc 15373      # s[15373] = "lovas-E0.c0:68.17-68.43"
B8 00 3C # invokestatic 60 # render_char(' ', point, w, "lovas-E0.c0:68.17-68.43")
57       # pop             # (ignore result)
A7 00 03 # goto +3         # goto <674:endif>
# <673:else>
# <674:endif>
15 01    # vload 1         # w
B7 00 12 # invokenative 18 # c_wrefresh(w)
57       # pop             # (ignore result)
15 00    # vload 0         # B
14 3C 25 # aldc 15397      # s[15397] = "lovas-E0.c0:54.12-54.22"
B8 00 31 # invokestatic 49 # is_tbuf(B, "lovas-E0.c0:54.12-54.22")
14 3C 3D # aldc 15421      # s[15421] = "lovas-E0.c0:54.4-54.23: @ensures annotation failed"
CF       # assert          # assertis_tbuf(B, "lovas-E0.c0:54.12-54.22") [failure message on stack]
10 00    # bipush 0        # dummy return value
B0       # return          # 


#<render_topbar>
00 02             # number of arguments = 2
00 0C             # number of local variables = 12
00 60             # code length = 96 bytes
15 00    # vload 0         # w
B7 00 11 # invokenative 17 # c_werase(w)
57       # pop             # (ignore result)
15 00    # vload 0         # w
B7 00 13 # invokenative 19 # cc_getbegx(w)
36 02    # vstore 2        # i = cc_getbegx(w);
# <675:loop>
A7 00 03 # goto +3         # goto <676:body>
# <676:body>
15 02    # vload 2         # i
15 00    # vload 0         # w
B7 00 14 # invokenative 20 # cc_getmaxx(w)
A1 00 06 # if_icmplt +6    # if (i < cc_getmaxx(w)) goto <678:then>
A7 00 1E # goto +30        # goto <679:else>
# <678:then>
15 00    # vload 0         # w
10 20    # bipush 32       # ' '
14 3C 70 # aldc 15472      # s[15472] = "lovas-E0.c0:76.34-76.47"
B8 00 09 # invokestatic 9  # char_ord__1(' ', "lovas-E0.c0:76.34-76.47")
B7 00 0F # invokenative 15 # cc_highlight(char_ord__1(' ', "lovas-E0.c0:76.34-76.47"))
B7 00 0E # invokenative 14 # c_waddch(w, cc_highlight(char_ord__1(' ', "lovas-E0.c0:76.34-76.47")))
57       # pop             # (ignore result)
15 02    # vload 2         # i
10 01    # bipush 1        # 1
60       # iadd            # 
36 02    # vstore 2        # i += 1;
A7 00 06 # goto +6         # goto <680:endif>
# <679:else>
A7 00 06 # goto +6         # break
# <680:endif>
A7 FF D2 # goto -46        # goto <675:loop>
# <677:exit>
15 00    # vload 0         # w
10 00    # bipush 0        # 0
10 01    # bipush 1        # 1
B7 00 10 # invokenative 16 # c_wmove(w, 0, 1)
57       # pop             # (ignore result)
15 00    # vload 0         # w
B7 00 15 # invokenative 21 # cc_wreverseon(w)
57       # pop             # (ignore result)
15 00    # vload 0         # w
14 3C 88 # aldc 15496      # s[15496] = "E0, the minimalist editor -- ^X to exit, ^L to refresh"
B7 00 16 # invokenative 22 # c_waddstr(w, "E0, the minimalist editor -- ^X to exit, ^L to refresh")
57       # pop             # (ignore result)
15 00    # vload 0         # w
B7 00 17 # invokenative 23 # cc_wreverseoff(w)
57       # pop             # (ignore result)
10 00    # bipush 0        # dummy return value
B0       # return          # 


#<render_botbar>
00 02             # number of arguments = 2
00 0C             # number of local variables = 12
00 41             # code length = 65 bytes
15 00    # vload 0         # w
B7 00 11 # invokenative 17 # c_werase(w)
57       # pop             # (ignore result)
15 00    # vload 0         # w
B7 00 13 # invokenative 19 # cc_getbegx(w)
36 02    # vstore 2        # i = cc_getbegx(w);
# <681:loop>
A7 00 03 # goto +3         # goto <682:body>
# <682:body>
15 02    # vload 2         # i
15 00    # vload 0         # w
B7 00 14 # invokenative 20 # cc_getmaxx(w)
A1 00 06 # if_icmplt +6    # if (i < cc_getmaxx(w)) goto <684:then>
A7 00 1E # goto +30        # goto <685:else>
# <684:then>
15 00    # vload 0         # w
10 20    # bipush 32       # ' '
14 3C BF # aldc 15551      # s[15551] = "lovas-E0.c0:86.34-86.47"
B8 00 09 # invokestatic 9  # char_ord__1(' ', "lovas-E0.c0:86.34-86.47")
B7 00 0F # invokenative 15 # cc_highlight(char_ord__1(' ', "lovas-E0.c0:86.34-86.47"))
B7 00 0E # invokenative 14 # c_waddch(w, cc_highlight(char_ord__1(' ', "lovas-E0.c0:86.34-86.47")))
57       # pop             # (ignore result)
15 02    # vload 2         # i
10 01    # bipush 1        # 1
60       # iadd            # 
36 02    # vstore 2        # i += 1;
A7 00 06 # goto +6         # goto <686:endif>
# <685:else>
A7 00 06 # goto +6         # break
# <686:endif>
A7 FF D2 # goto -46        # goto <681:loop>
# <683:exit>
10 00    # bipush 0        # dummy return value
B0       # return          # 


#<vrender_char>
00 03             # number of arguments = 3
00 0C             # number of local variables = 12
00 77             # code length = 119 bytes
15 01    # vload 1         # c
10 0A    # bipush 10       # '\n'
9F 00 06 # if_cmpeq +6     # if (c == '\n') goto <687:then>
A7 00 2C # goto +44        # goto <688:else>
# <687:then>
15 00    # vload 0         # w
B7 00 18 # invokenative 24 # cc_wboldon(w)
57       # pop             # (ignore result)
15 00    # vload 0         # w
B7 00 19 # invokenative 25 # cc_wunderon(w)
57       # pop             # (ignore result)
15 00    # vload 0         # w
10 23    # bipush 35       # '#'
14 3C D7 # aldc 15575      # s[15575] = "lovas-E0.c0:95.21-95.34"
B8 00 09 # invokestatic 9  # char_ord__1('#', "lovas-E0.c0:95.21-95.34")
B7 00 0E # invokenative 14 # c_waddch(w, char_ord__1('#', "lovas-E0.c0:95.21-95.34"))
57       # pop             # (ignore result)
15 00    # vload 0         # w
B7 00 1A # invokenative 26 # cc_wunderoff(w)
57       # pop             # (ignore result)
15 00    # vload 0         # w
B7 00 1B # invokenative 27 # cc_wboldoff(w)
57       # pop             # (ignore result)
A7 00 44 # goto +68        # goto <689:endif>
# <688:else>
15 01    # vload 1         # c
10 09    # bipush 9        # '\t'
9F 00 06 # if_cmpeq +6     # if (c == '\t') goto <690:then>
A7 00 2C # goto +44        # goto <691:else>
# <690:then>
15 00    # vload 0         # w
B7 00 18 # invokenative 24 # cc_wboldon(w)
57       # pop             # (ignore result)
15 00    # vload 0         # w
B7 00 19 # invokenative 25 # cc_wunderon(w)
57       # pop             # (ignore result)
15 00    # vload 0         # w
10 3E    # bipush 62       # '>'
14 3C EF # aldc 15599      # s[15599] = "lovas-E0.c0:99.21-99.34"
B8 00 09 # invokestatic 9  # char_ord__1('>', "lovas-E0.c0:99.21-99.34")
B7 00 0E # invokenative 14 # c_waddch(w, char_ord__1('>', "lovas-E0.c0:99.21-99.34"))
57       # pop             # (ignore result)
15 00    # vload 0         # w
B7 00 1A # invokenative 26 # cc_wunderoff(w)
57       # pop             # (ignore result)
15 00    # vload 0         # w
B7 00 1B # invokenative 27 # cc_wboldoff(w)
57       # pop             # (ignore result)
A7 00 11 # goto +17        # goto <692:endif>
# <691:else>
15 00    # vload 0         # w
15 01    # vload 1         # c
14 3D 07 # aldc 15623      # s[15623] = "lovas-E0.c0:102.21-102.32"
B8 00 09 # invokestatic 9  # char_ord__1(c, "lovas-E0.c0:102.21-102.32")
B7 00 0E # invokenative 14 # c_waddch(w, char_ord__1(c, "lovas-E0.c0:102.21-102.32"))
57       # pop             # (ignore result)
# <692:endif>
# <689:endif>
10 00    # bipush 0        # dummy return value
B0       # return          # 


#<vrender_gapbuf>
00 03             # number of arguments = 3
00 0C             # number of local variables = 12
00 FE             # code length = 254 bytes
15 00    # vload 0         # G
14 3D 21 # aldc 15649      # s[15649] = "lovas-E0.c0:107.13-107.25"
B8 00 0B # invokestatic 11 # is_gapbuf(G, "lovas-E0.c0:107.13-107.25")
14 3D 3B # aldc 15675      # s[15675] = "lovas-E0.c0:107.4-107.26: @requires annotation failed\n"
15 02    # vload 2         # _caller
14 3D 72 # aldc 15730      # s[15730] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("lovas-E0.c0:107.4-107.26: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assertis_gapbuf(G, "lovas-E0.c0:107.13-107.25") [failure message on stack]
10 00    # bipush 0        # 0
36 03    # vstore 3        # i = 0;
# <693:loop>
A7 00 03 # goto +3         # goto <694:body>
# <694:body>
15 03    # vload 3         # i
15 00    # vload 0         # G
62 10    # aaddf 16        # &G->gap_start
2E       # imload          # G->gap_start
A1 00 06 # if_icmplt +6    # if (i < G->gap_start) goto <696:then>
A7 00 1F # goto +31        # goto <697:else>
# <696:then>
15 01    # vload 1         # w
15 00    # vload 0         # G
62 08    # aaddf 8         # &G->buffer
2F       # amload          # G->buffer
15 03    # vload 3         # i
63       # aadds           # &G->buffer[i]
34       # cmload          # G->buffer[i]
14 3D 84 # aldc 15748      # s[15748] = "lovas-E0.c0:110.44-110.73"
B8 00 41 # invokestatic 65 # vrender_char(w, G->buffer[i], "lovas-E0.c0:110.44-110.73")
57       # pop             # (ignore result)
15 03    # vload 3         # i
10 01    # bipush 1        # 1
60       # iadd            # 
36 03    # vstore 3        # i += 1;
A7 00 06 # goto +6         # goto <698:endif>
# <697:else>
A7 00 06 # goto +6         # break
# <698:endif>
A7 FF D1 # goto -47        # goto <693:loop>
# <695:exit>
15 01    # vload 1         # w
B7 00 18 # invokenative 24 # cc_wboldon(w)
57       # pop             # (ignore result)
15 01    # vload 1         # w
B7 00 19 # invokenative 25 # cc_wunderon(w)
57       # pop             # (ignore result)
15 01    # vload 1         # w
10 5B    # bipush 91       # '['
14 3D 9E # aldc 15774      # s[15774] = "lovas-E0.c0:112.17-112.30"
B8 00 09 # invokestatic 9  # char_ord__1('[', "lovas-E0.c0:112.17-112.30")
B7 00 0E # invokenative 14 # c_waddch(w, char_ord__1('[', "lovas-E0.c0:112.17-112.30"))
57       # pop             # (ignore result)
15 00    # vload 0         # G
62 10    # aaddf 16        # &G->gap_start
2E       # imload          # G->gap_start
36 03    # vstore 3        # i = G->gap_start;
# <699:loop>
A7 00 03 # goto +3         # goto <700:body>
# <700:body>
15 03    # vload 3         # i
15 00    # vload 0         # G
62 14    # aaddf 20        # &G->gap_end
2E       # imload          # G->gap_end
A1 00 06 # if_icmplt +6    # if (i < G->gap_end) goto <702:then>
A7 00 1B # goto +27        # goto <703:else>
# <702:then>
15 01    # vload 1         # w
10 2E    # bipush 46       # '.'
14 3D B8 # aldc 15800      # s[15800] = "lovas-E0.c0:113.65-113.78"
B8 00 09 # invokestatic 9  # char_ord__1('.', "lovas-E0.c0:113.65-113.78")
B7 00 0E # invokenative 14 # c_waddch(w, char_ord__1('.', "lovas-E0.c0:113.65-113.78"))
57       # pop             # (ignore result)
15 03    # vload 3         # i
10 01    # bipush 1        # 1
60       # iadd            # 
36 03    # vstore 3        # i += 1;
A7 00 06 # goto +6         # goto <704:endif>
# <703:else>
A7 00 06 # goto +6         # break
# <704:endif>
A7 FF D5 # goto -43        # goto <699:loop>
# <701:exit>
15 01    # vload 1         # w
10 5D    # bipush 93       # ']'
14 3D D2 # aldc 15826      # s[15826] = "lovas-E0.c0:114.17-114.30"
B8 00 09 # invokestatic 9  # char_ord__1(']', "lovas-E0.c0:114.17-114.30")
B7 00 0E # invokenative 14 # c_waddch(w, char_ord__1(']', "lovas-E0.c0:114.17-114.30"))
57       # pop             # (ignore result)
15 01    # vload 1         # w
B7 00 1A # invokenative 26 # cc_wunderoff(w)
57       # pop             # (ignore result)
15 01    # vload 1         # w
B7 00 1B # invokenative 27 # cc_wboldoff(w)
57       # pop             # (ignore result)
15 00    # vload 0         # G
62 14    # aaddf 20        # &G->gap_end
2E       # imload          # G->gap_end
36 03    # vstore 3        # i = G->gap_end;
# <705:loop>
A7 00 03 # goto +3         # goto <706:body>
# <706:body>
15 03    # vload 3         # i
15 00    # vload 0         # G
62 00    # aaddf 0         # &G->limit
2E       # imload          # G->limit
A1 00 06 # if_icmplt +6    # if (i < G->limit) goto <708:then>
A7 00 1F # goto +31        # goto <709:else>
# <708:then>
15 01    # vload 1         # w
15 00    # vload 0         # G
62 08    # aaddf 8         # &G->buffer
2F       # amload          # G->buffer
15 03    # vload 3         # i
63       # aadds           # &G->buffer[i]
34       # cmload          # G->buffer[i]
14 3D EC # aldc 15852      # s[15852] = "lovas-E0.c0:116.49-116.78"
B8 00 41 # invokestatic 65 # vrender_char(w, G->buffer[i], "lovas-E0.c0:116.49-116.78")
57       # pop             # (ignore result)
15 03    # vload 3         # i
10 01    # bipush 1        # 1
60       # iadd            # 
36 03    # vstore 3        # i += 1;
A7 00 06 # goto +6         # goto <710:endif>
# <709:else>
A7 00 06 # goto +6         # break
# <710:endif>
A7 FF D1 # goto -47        # goto <705:loop>
# <707:exit>
15 00    # vload 0         # G
14 3E 06 # aldc 15878      # s[15878] = "lovas-E0.c0:108.12-108.24"
B8 00 0B # invokestatic 11 # is_gapbuf(G, "lovas-E0.c0:108.12-108.24")
14 3E 20 # aldc 15904      # s[15904] = "lovas-E0.c0:108.4-108.25: @ensures annotation failed"
CF       # assert          # assertis_gapbuf(G, "lovas-E0.c0:108.12-108.24") [failure message on stack]
10 00    # bipush 0        # dummy return value
B0       # return          # 


#<vrender_buf>
00 03             # number of arguments = 3
00 0C             # number of local variables = 12
01 AD             # code length = 429 bytes
15 00    # vload 0         # B
14 3E 55 # aldc 15957      # s[15957] = "lovas-E0.c0:120.13-120.23"
B8 00 31 # invokestatic 49 # is_tbuf(B, "lovas-E0.c0:120.13-120.23")
14 3E 6F # aldc 15983      # s[15983] = "lovas-E0.c0:120.4-120.24: @requires annotation failed\n"
15 02    # vload 2         # _caller
14 3E A6 # aldc 16038      # s[16038] = ": caller location"
B7 00 01 # invokenative 1  # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1  # string_join("lovas-E0.c0:120.4-120.24: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assertis_tbuf(B, "lovas-E0.c0:120.13-120.23") [failure message on stack]
15 01    # vload 1         # w
B7 00 1C # invokenative 28 # c_wclear(w)
57       # pop             # (ignore result)
15 00    # vload 0         # B
62 08    # aaddf 8         # &B->point
2F       # amload          # B->point
62 10    # aaddf 16        # &B->point->prev
2F       # amload          # B->point->prev
15 00    # vload 0         # B
62 00    # aaddf 0         # &B->start
2F       # amload          # B->start
9F 00 1C # if_cmpeq +28    # if (B->point->prev == B->start) goto <711:then>
A7 00 03 # goto +3         # goto <714:or>
# <714:or>
15 00    # vload 0         # B
62 08    # aaddf 8         # &B->point
2F       # amload          # B->point
62 10    # aaddf 16        # &B->point->prev
2F       # amload          # B->point->prev
62 10    # aaddf 16        # &B->point->prev->prev
2F       # amload          # B->point->prev->prev
15 00    # vload 0         # B
62 00    # aaddf 0         # &B->start
2F       # amload          # B->start
9F 00 06 # if_cmpeq +6     # if (B->point->prev->prev == B->start) goto <711:then>
A7 00 1B # goto +27        # goto <712:else>
# <711:then>
15 01    # vload 1         # w
B7 00 18 # invokenative 24 # cc_wboldon(w)
57       # pop             # (ignore result)
15 01    # vload 1         # w
14 3E B8 # aldc 16056      # s[16056] = " **"
B7 00 16 # invokenative 22 # c_waddstr(w, " **")
57       # pop             # (ignore result)
15 01    # vload 1         # w
B7 00 1B # invokenative 27 # cc_wboldoff(w)
57       # pop             # (ignore result)
A7 00 18 # goto +24        # goto <713:endif>
# <712:else>
15 01    # vload 1         # w
B7 00 1D # invokenative 29 # cc_wdimon(w)
57       # pop             # (ignore result)
15 01    # vload 1         # w
14 3E BC # aldc 16060      # s[16060] = "<.."
B7 00 16 # invokenative 22 # c_waddstr(w, "<..")
57       # pop             # (ignore result)
15 01    # vload 1         # w
B7 00 1E # invokenative 30 # cc_wdimoff(w)
57       # pop             # (ignore result)
# <713:endif>
15 00    # vload 0         # B
62 08    # aaddf 8         # &B->point
2F       # amload          # B->point
36 03    # vstore 3        # L = B->point;
15 03    # vload 3         # L
62 10    # aaddf 16        # &L->prev
2F       # amload          # L->prev
15 00    # vload 0         # B
62 00    # aaddf 0         # &B->start
2F       # amload          # B->start
A0 00 06 # if_cmpne +6     # if (L->prev != B->start) goto <715:then>
A7 00 0D # goto +13        # goto <716:else>
# <715:then>
15 03    # vload 3         # L
62 10    # aaddf 16        # &L->prev
2F       # amload          # L->prev
36 03    # vstore 3        # L = L->prev;
A7 00 03 # goto +3         # goto <717:endif>
# <716:else>
# <717:endif>
15 03    # vload 3         # L
62 10    # aaddf 16        # &L->prev
2F       # amload          # L->prev
15 00    # vload 0         # B
62 00    # aaddf 0         # &B->start
2F       # amload          # B->start
A0 00 06 # if_cmpne +6     # if (L->prev != B->start) goto <721:and>
A7 00 20 # goto +32        # goto <719:else>
# <721:and>
15 03    # vload 3         # L
62 08    # aaddf 8         # &L->next
2F       # amload          # L->next
62 08    # aaddf 8         # &L->next->next
2F       # amload          # L->next->next
15 00    # vload 0         # B
62 10    # aaddf 16        # &B->end
2F       # amload          # B->end
9F 00 06 # if_cmpeq +6     # if (L->next->next == B->end) goto <718:then>
A7 00 0D # goto +13        # goto <719:else>
# <718:then>
15 03    # vload 3         # L
62 10    # aaddf 16        # &L->prev
2F       # amload          # L->prev
36 03    # vstore 3        # L = L->prev;
A7 00 03 # goto +3         # goto <720:endif>
# <719:else>
# <720:endif>
10 00    # bipush 0        # 0
36 04    # vstore 4        # i = 0;
# <722:loop>
A7 00 03 # goto +3         # goto <723:body>
# <723:body>
15 04    # vload 4         # i
10 03    # bipush 3        # 3
A1 00 06 # if_icmplt +6    # if (i < 3) goto <728:and>
A7 00 64 # goto +100       # goto <726:else>
# <728:and>
15 03    # vload 3         # L
15 00    # vload 0         # B
62 10    # aaddf 16        # &B->end
2F       # amload          # B->end
A0 00 06 # if_cmpne +6     # if (L != B->end) goto <725:then>
A7 00 57 # goto +87        # goto <726:else>
# <725:then>
15 01    # vload 1         # w
14 3E C0 # aldc 16064      # s[16064] = " <-> "
B7 00 16 # invokenative 22 # c_waddstr(w, " <-> ")
57       # pop             # (ignore result)
15 03    # vload 3         # L
15 00    # vload 0         # B
62 08    # aaddf 8         # &B->point
2F       # amload          # B->point
9F 00 06 # if_cmpeq +6     # if (L == B->point) goto <729:then>
A7 00 0C # goto +12        # goto <730:else>
# <729:then>
15 01    # vload 1         # w
B7 00 15 # invokenative 21 # cc_wreverseon(w)
57       # pop             # (ignore result)
A7 00 03 # goto +3         # goto <731:endif>
# <730:else>
# <731:endif>
15 03    # vload 3         # L
62 00    # aaddf 0         # &L->data
2F       # amload          # L->data
15 01    # vload 1         # w
14 3E C6 # aldc 16070      # s[16070] = "lovas-E0.c0:142.9-142.35"
B8 00 42 # invokestatic 66 # vrender_gapbuf(L->data, w, "lovas-E0.c0:142.9-142.35")
57       # pop             # (ignore result)
15 03    # vload 3         # L
15 00    # vload 0         # B
62 08    # aaddf 8         # &B->point
2F       # amload          # B->point
9F 00 06 # if_cmpeq +6     # if (L == B->point) goto <732:then>
A7 00 0C # goto +12        # goto <733:else>
# <732:then>
15 01    # vload 1         # w
B7 00 17 # invokenative 23 # cc_wreverseoff(w)
57       # pop             # (ignore result)
A7 00 03 # goto +3         # goto <734:endif>
# <733:else>
# <734:endif>
15 03    # vload 3         # L
62 08    # aaddf 8         # &L->next
2F       # amload          # L->next
36 03    # vstore 3        # L = L->next;
15 04    # vload 4         # i
10 01    # bipush 1        # 1
60       # iadd            # 
36 04    # vstore 4        # i += 1;
A7 00 06 # goto +6         # goto <727:endif>
# <726:else>
A7 00 06 # goto +6         # break
# <727:endif>
A7 FF 8F # goto -113       # goto <722:loop>
# <724:exit>
15 01    # vload 1         # w
14 3E DF # aldc 16095      # s[16095] = " <-> "
B7 00 16 # invokenative 22 # c_waddstr(w, " <-> ")
57       # pop             # (ignore result)
15 00    # vload 0         # B
62 08    # aaddf 8         # &B->point
2F       # amload          # B->point
62 08    # aaddf 8         # &B->point->next
2F       # amload          # B->point->next
15 00    # vload 0         # B
62 10    # aaddf 16        # &B->end
2F       # amload          # B->end
9F 00 1C # if_cmpeq +28    # if (B->point->next == B->end) goto <735:then>
A7 00 03 # goto +3         # goto <738:or>
# <738:or>
15 00    # vload 0         # B
62 08    # aaddf 8         # &B->point
2F       # amload          # B->point
62 08    # aaddf 8         # &B->point->next
2F       # amload          # B->point->next
62 08    # aaddf 8         # &B->point->next->next
2F       # amload          # B->point->next->next
15 00    # vload 0         # B
62 10    # aaddf 16        # &B->end
2F       # amload          # B->end
9F 00 06 # if_cmpeq +6     # if (B->point->next->next == B->end) goto <735:then>
A7 00 1B # goto +27        # goto <736:else>
# <735:then>
15 01    # vload 1         # w
B7 00 18 # invokenative 24 # cc_wboldon(w)
57       # pop             # (ignore result)
15 01    # vload 1         # w
14 3E E5 # aldc 16101      # s[16101] = "** "
B7 00 16 # invokenative 22 # c_waddstr(w, "** ")
57       # pop             # (ignore result)
15 01    # vload 1         # w
B7 00 1B # invokenative 27 # cc_wboldoff(w)
57       # pop             # (ignore result)
A7 00 18 # goto +24        # goto <737:endif>
# <736:else>
15 01    # vload 1         # w
B7 00 1D # invokenative 29 # cc_wdimon(w)
57       # pop             # (ignore result)
15 01    # vload 1         # w
14 3E E9 # aldc 16105      # s[16105] = "..>"
B7 00 16 # invokenative 22 # c_waddstr(w, "..>")
57       # pop             # (ignore result)
15 01    # vload 1         # w
B7 00 1E # invokenative 30 # cc_wdimoff(w)
57       # pop             # (ignore result)
# <737:endif>
15 01    # vload 1         # w
B7 00 12 # invokenative 18 # c_wrefresh(w)
57       # pop             # (ignore result)
15 00    # vload 0         # B
14 3E ED # aldc 16109      # s[16109] = "lovas-E0.c0:121.12-121.22"
B8 00 31 # invokestatic 49 # is_tbuf(B, "lovas-E0.c0:121.12-121.22")
14 3F 07 # aldc 16135      # s[16135] = "lovas-E0.c0:121.4-121.23: @ensures annotation failed"
CF       # assert          # assertis_tbuf(B, "lovas-E0.c0:121.12-121.22") [failure message on stack]
10 00    # bipush 0        # dummy return value
B0       # return          # 

00 2E             # native count
# native pool
00 01 00 5D       # string_length
00 02 00 5C       # string_join
00 02 00 55       # string_charat
00 03 00 5E       # string_sub
00 02 00 56       # string_compare
00 01 00 5A       # string_fromchar
00 02 00 5F       # string_terminated
00 01 00 60       # string_to_chararray
00 01 00 58       # string_from_chararray
00 01 00 54       # char_ord
00 01 00 53       # char_chr
00 00 00 0E       # eof
00 00 00 15       # readline
00 01 00 14       # println
00 02 00 23       # c_waddch
00 01 00 31       # cc_highlight
00 03 00 27       # c_wmove
00 01 00 26       # c_werase
00 01 00 28       # c_wrefresh
00 01 00 2B       # cc_getbegx
00 01 00 2D       # cc_getmaxx
00 01 00 3D       # cc_wreverseon
00 02 00 24       # c_waddstr
00 01 00 3C       # cc_wreverseoff
00 01 00 39       # cc_wboldon
00 01 00 3F       # cc_wunderon
00 01 00 3E       # cc_wunderoff
00 01 00 38       # cc_wboldoff
00 01 00 25       # c_wclear
00 01 00 3B       # cc_wdimon
00 01 00 3A       # cc_wdimoff
00 00 00 1D       # c_initscr
00 00 00 17       # c_cbreak
00 00 00 20       # c_noecho
00 02 00 1E       # c_keypad
00 01 00 18       # c_curs_set
00 01 00 2E       # cc_getmaxy
00 01 00 2C       # cc_getbegy
00 05 00 22       # c_subwin
00 00 00 1C       # c_getch
00 01 00 32       # cc_key_is_backspace
00 01 00 35       # cc_key_is_left
00 01 00 36       # cc_key_is_right
00 01 00 34       # cc_key_is_enter
00 00 00 1A       # c_endwin
00 01 00 10       # print

