C0 C0 FF EE       # magic number
00 0D             # version 6, arch = 1 (64 bits)

00 13             # int pool count
# int pool
00 FF FF FF
01 00 00 00
00 00 00 FF
00 00 FF FF
00 01 00 00
00 00 00 FF
00 00 00 FF
00 00 01 00
00 00 00 FF
00 00 00 FF
00 00 00 FF
00 00 00 FF
00 00 00 FF
00 00 00 FF
00 00 00 FF
7F FF FF FF
80 00 00 00
7F FF FF FF
80 00 00 00

2A 78             # string pool total size
# string pool
70 69 78 65 6C 2E 63 30 3A 31 33 2E 37 2D 31 33 2E 33 37 3A 20 40 61 73 73 65 72 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "pixel.c0:13.7-13.37: @assert annotation failed"
70 69 78 65 6C 2E 63 30 3A 38 2E 34 2D 38 2E 34 34 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "pixel.c0:8.4-8.44: @ensures annotation failed"
70 69 78 65 6C 2E 63 30 3A 32 36 2E 37 2D 32 36 2E 33 37 3A 20 40 61 73 73 65 72 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "pixel.c0:26.7-26.37: @assert annotation failed"
70 69 78 65 6C 2E 63 30 3A 32 31 2E 34 2D 32 31 2E 34 34 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "pixel.c0:21.4-21.44: @ensures annotation failed"
70 69 78 65 6C 2E 63 30 3A 33 39 2E 37 2D 33 39 2E 33 37 3A 20 40 61 73 73 65 72 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "pixel.c0:39.7-39.37: @assert annotation failed"
70 69 78 65 6C 2E 63 30 3A 33 34 2E 34 2D 33 34 2E 34 34 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "pixel.c0:34.4-34.44: @ensures annotation failed"
70 69 78 65 6C 2E 63 30 3A 34 37 2E 34 2D 34 37 2E 34 34 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "pixel.c0:47.4-47.44: @ensures annotation failed"
70 69 78 65 6C 2E 63 30 3A 36 32 2E 34 2D 36 32 2E 33 36 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "pixel.c0:62.4-62.36: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
70 69 78 65 6C 2E 63 30 3A 36 33 2E 34 2D 36 33 2E 34 30 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "pixel.c0:63.4-63.40: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
70 69 78 65 6C 2E 63 30 3A 36 34 2E 34 2D 36 34 2E 33 38 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "pixel.c0:64.4-64.38: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
70 69 78 65 6C 2E 63 30 3A 36 35 2E 34 2D 36 35 2E 34 30 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "pixel.c0:65.4-65.40: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 38 2E 31 2D 39 2E 33 33 00  # "/afs/andrew/course/15/122/lib/util.h0:8.1-9.33"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 39 2E 36 2D 39 2E 32 37 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.h0:9.6-9.27: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 31 30 2E 31 2D 31 31 2E 34 32 00  # "/afs/andrew/course/15/122/lib/util.h0:10.1-11.42"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 31 31 2E 36 2D 31 31 2E 33 36 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.h0:11.6-11.36: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 31 32 2E 31 2D 31 33 2E 34 33 00  # "/afs/andrew/course/15/122/lib/util.h0:12.1-13.43"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 31 33 2E 36 2D 31 33 2E 33 37 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.h0:13.6-13.37: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 31 37 2E 31 39 2D 31 37 2E 32 38 00  # "/afs/andrew/course/15/122/lib/util.h0:17.19-17.28"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 31 37 2E 36 2D 31 37 2E 32 39 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/util.h0:17.6-17.29: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 31 36 2E 31 2D 31 39 2E 34 38 00  # "/afs/andrew/course/15/122/lib/util.h0:16.1-19.48"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 31 38 2E 36 2D 31 38 2E 32 37 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.h0:18.6-18.27: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 31 39 2E 36 2D 31 39 2E 34 32 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.h0:19.6-19.42: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 32 32 2E 31 2D 32 34 2E 34 39 00  # "/afs/andrew/course/15/122/lib/util.h0:22.1-24.49"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 32 33 2E 36 2D 32 33 2E 34 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.h0:23.6-23.43: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 32 34 2E 36 2D 32 34 2E 34 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.h0:24.6-24.43: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 32 37 2E 31 2D 32 39 2E 34 39 00  # "/afs/andrew/course/15/122/lib/util.h0:27.1-29.49"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 32 38 2E 36 2D 32 38 2E 34 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.h0:28.6-28.43: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 32 39 2E 36 2D 32 39 2E 34 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.h0:29.6-29.43: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 31 39 2E 36 2D 31 39 2E 35 30 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/string.h0:19.6-19.50: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 32 33 2E 36 2D 32 34 2E 35 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0:23.6-24.55: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 33 31 2E 36 2D 33 31 2E 36 39 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/string.h0:31.6-31.69: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 33 32 2E 36 2D 33 32 2E 35 32 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0:32.6-32.52: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 33 37 2E 36 2D 33 37 2E 34 34 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0:37.6-37.44: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 34 33 2E 36 2D 34 33 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/string.h0:43.6-43.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 34 34 2E 36 2D 34 34 2E 34 32 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0:44.6-44.42: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 34 35 2E 31 34 2D 34 35 2E 33 39 00  # "/afs/andrew/course/15/122/lib/string.h0:45.14-45.39"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 34 35 2E 36 2D 34 35 2E 34 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0:45.6-45.45: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 35 32 2E 36 2D 35 32 2E 34 31 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/string.h0:52.6-52.41: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 35 36 2E 36 2D 35 36 2E 35 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0:56.6-56.55: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 35 37 2E 31 34 2D 35 37 2E 36 32 00  # "/afs/andrew/course/15/122/lib/string.h0:57.14-57.62"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 35 37 2E 36 2D 35 37 2E 36 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0:57.6-57.63: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 36 32 2E 31 35 2D 36 32 2E 34 37 00  # "/afs/andrew/course/15/122/lib/string.h0:62.15-62.47"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 36 32 2E 36 2D 36 32 2E 34 38 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/string.h0:62.6-62.48: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 36 33 2E 36 2D 36 33 2E 35 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0:63.6-63.55: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 36 37 2E 36 2D 36 37 2E 34 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0:67.6-67.45: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 36 39 2E 36 2D 36 39 2E 33 34 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/string.h0:69.6-69.34: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 31 33 2E 34 2D 31 33 2E 34 31 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.c0:13.4-13.41: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 31 34 2E 34 2D 31 34 2E 34 31 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.c0:14.4-14.41: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 32 31 2E 34 2D 32 31 2E 34 31 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.c0:21.4-21.41: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 32 32 2E 34 2D 32 32 2E 34 31 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.c0:22.4-22.41: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 32 39 2E 31 37 2D 32 39 2E 32 36 00  # "/afs/andrew/course/15/122/lib/util.c0:29.17-29.26"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 32 39 2E 34 2D 32 39 2E 32 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/util.c0:29.4-29.27: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 33 30 2E 34 2D 33 30 2E 32 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.c0:30.4-30.25: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 33 37 2E 34 2D 33 37 2E 33 30 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/util.c0:37.4-37.30: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 34 30 2E 32 31 2D 34 30 2E 33 34 00  # "/afs/andrew/course/15/122/lib/util.c0:40.21-40.34"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 34 30 2E 31 32 2D 34 30 2E 33 39 00  # "/afs/andrew/course/15/122/lib/util.c0:40.12-40.39"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 34 32 2E 32 31 2D 34 32 2E 33 34 00  # "/afs/andrew/course/15/122/lib/util.c0:42.21-42.34"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 34 32 2E 31 32 2D 34 32 2E 34 34 00  # "/afs/andrew/course/15/122/lib/util.c0:42.12-42.44"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 35 31 2E 31 38 2D 35 31 2E 32 38 00  # "/afs/andrew/course/15/122/lib/util.c0:51.18-51.28"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 35 35 2E 38 2D 35 35 2E 34 35 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.c0:55.8-55.45: @loop_invariant annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 35 37 2E 32 33 2D 35 37 2E 34 33 00  # "/afs/andrew/course/15/122/lib/util.c0:57.23-57.43"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 36 30 2E 31 30 2D 36 30 2E 33 34 00  # "/afs/andrew/course/15/122/lib/util.c0:60.10-60.34"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 34 39 2E 34 30 2D 34 39 2E 35 30 00  # "/afs/andrew/course/15/122/lib/util.c0:49.40-49.50"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 34 39 2E 34 2D 34 39 2E 35 31 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.c0:49.4-49.51: @ensures annotation failed"
69 6D 61 67 65 75 74 69 6C 2E 63 30 3A 37 2E 34 2D 37 2E 33 36 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "imageutil.c0:7.4-7.36: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
69 6D 61 67 65 75 74 69 6C 2E 63 30 3A 31 32 2E 31 37 2D 31 32 2E 32 36 00  # "imageutil.c0:12.17-12.26"
69 6D 61 67 65 75 74 69 6C 2E 63 30 3A 32 33 2E 31 33 2D 32 33 2E 34 36 00  # "imageutil.c0:23.13-23.46"
69 6D 61 67 65 75 74 69 6C 2E 63 30 3A 32 33 2E 34 2D 32 33 2E 34 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "imageutil.c0:23.4-23.47: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
69 6D 61 67 65 75 74 69 6C 2E 63 30 3A 32 34 2E 34 2D 32 34 2E 35 31 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "imageutil.c0:24.4-24.51: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
69 6D 61 67 65 75 74 69 6C 2E 63 30 3A 32 35 2E 34 2D 32 35 2E 34 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "imageutil.c0:25.4-25.45: @ensures annotation failed"
69 6D 61 67 65 75 74 69 6C 2E 63 30 3A 34 31 2E 31 33 2D 34 31 2E 34 36 00  # "imageutil.c0:41.13-41.46"
69 6D 61 67 65 75 74 69 6C 2E 63 30 3A 34 31 2E 34 2D 34 31 2E 34 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "imageutil.c0:41.4-41.47: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
69 6D 61 67 65 75 74 69 6C 2E 63 30 3A 34 32 2E 34 2D 34 32 2E 35 31 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "imageutil.c0:42.4-42.51: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
69 6D 61 67 65 75 74 69 6C 2E 63 30 3A 34 33 2E 34 2D 34 33 2E 34 34 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "imageutil.c0:43.4-43.44: @ensures annotation failed"
69 6D 61 67 65 75 74 69 6C 2E 63 30 3A 35 37 2E 31 33 2D 35 37 2E 34 36 00  # "imageutil.c0:57.13-57.46"
69 6D 61 67 65 75 74 69 6C 2E 63 30 3A 35 37 2E 34 2D 35 37 2E 34 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "imageutil.c0:57.4-57.47: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
69 6D 61 67 65 75 74 69 6C 2E 63 30 3A 37 36 2E 31 33 2D 37 36 2E 34 36 00  # "imageutil.c0:76.13-76.46"
69 6D 61 67 65 75 74 69 6C 2E 63 30 3A 37 36 2E 34 2D 37 36 2E 34 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "imageutil.c0:76.4-76.47: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
69 6D 61 67 65 75 74 69 6C 2E 63 30 3A 37 37 2E 31 33 2D 37 37 2E 35 31 00  # "imageutil.c0:77.13-77.51"
69 6D 61 67 65 75 74 69 6C 2E 63 30 3A 37 37 2E 34 2D 37 37 2E 35 32 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "imageutil.c0:77.4-77.52: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
69 6D 61 67 65 75 74 69 6C 2E 63 30 3A 37 38 2E 34 2D 37 38 2E 35 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "imageutil.c0:78.4-78.55: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 63 6F 6E 69 6F 2E 68 30 3A 31 34 2E 36 2D 31 34 2E 32 32 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/conio.h0:14.6-14.22: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
72 65 66 6C 65 63 74 2E 63 30 3A 35 2E 31 33 2D 35 2E 34 36 00  # "reflect.c0:5.13-5.46"
72 65 66 6C 65 63 74 2E 63 30 3A 35 2E 34 2D 35 2E 34 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "reflect.c0:5.4-5.47: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
72 65 66 6C 65 63 74 2E 63 30 3A 32 34 2E 35 2D 32 34 2E 34 35 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "reflect.c0:24.5-24.45: @loop_invariant annotation failed"
72 65 66 6C 65 63 74 2E 63 30 3A 32 37 2E 36 2D 32 37 2E 34 39 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "reflect.c0:27.6-27.49: @loop_invariant annotation failed"
72 65 66 6C 65 63 74 2E 63 30 3A 33 35 2E 31 37 2D 33 35 2E 35 33 00  # "reflect.c0:35.17-35.53"
72 65 66 6C 65 63 74 2E 63 30 3A 33 35 2E 31 30 2D 33 35 2E 35 34 3A 20 40 61 73 73 65 72 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "reflect.c0:35.10-35.54: @assert annotation failed"
72 65 66 6C 65 63 74 2E 63 30 3A 33 36 2E 32 31 2D 33 36 2E 35 32 00  # "reflect.c0:36.21-36.52"
72 65 66 6C 65 63 74 2E 63 30 3A 33 37 2E 31 38 2D 33 37 2E 35 39 00  # "reflect.c0:37.18-37.59"
72 65 66 6C 65 63 74 2E 63 30 3A 33 37 2E 31 31 2D 33 37 2E 36 30 3A 20 40 61 73 73 65 72 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "reflect.c0:37.11-37.60: @assert annotation failed"
72 65 66 6C 65 63 74 2E 63 30 3A 33 38 2E 32 31 2D 33 38 2E 35 37 00  # "reflect.c0:38.21-38.57"
72 65 66 6C 65 63 74 2E 63 30 3A 33 39 2E 31 31 2D 33 39 2E 35 36 3A 20 40 61 73 73 65 72 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "reflect.c0:39.11-39.56: @assert annotation failed"
72 65 66 6C 65 63 74 2E 63 30 3A 34 30 2E 31 31 2D 34 30 2E 34 34 3A 20 40 61 73 73 65 72 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "reflect.c0:40.11-40.44: @assert annotation failed"
72 65 66 6C 65 63 74 2E 63 30 3A 34 31 2E 31 31 2D 34 31 2E 35 36 3A 20 40 61 73 73 65 72 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "reflect.c0:41.11-41.56: @assert annotation failed"
72 65 66 6C 65 63 74 2E 63 30 3A 34 32 2E 31 31 2D 34 32 2E 34 34 3A 20 40 61 73 73 65 72 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "reflect.c0:42.11-42.44: @assert annotation failed"
72 65 66 6C 65 63 74 2E 63 30 3A 35 34 2E 31 33 2D 35 34 2E 34 36 00  # "reflect.c0:54.13-54.46"
72 65 66 6C 65 63 74 2E 63 30 3A 35 34 2E 34 2D 35 34 2E 34 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "reflect.c0:54.4-54.47: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
72 65 66 6C 65 63 74 2E 63 30 3A 37 31 2E 35 2D 37 31 2E 34 33 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "reflect.c0:71.5-71.43: @loop_invariant annotation failed"
72 65 66 6C 65 63 74 2E 63 30 3A 37 34 2E 31 30 2D 37 34 2E 35 33 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "reflect.c0:74.10-74.53: @loop_invariant annotation failed"
72 65 66 6C 65 63 74 2E 63 30 3A 37 39 2E 32 32 2D 37 39 2E 35 38 00  # "reflect.c0:79.22-79.58"
72 65 66 6C 65 63 74 2E 63 30 3A 37 39 2E 31 35 2D 37 39 2E 35 39 3A 20 40 61 73 73 65 72 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "reflect.c0:79.15-79.59: @assert annotation failed"
72 65 66 6C 65 63 74 2E 63 30 3A 38 30 2E 32 34 2D 38 30 2E 35 35 00  # "reflect.c0:80.24-80.55"
72 65 66 6C 65 63 74 2E 63 30 3A 38 31 2E 32 31 2D 38 31 2E 36 32 00  # "reflect.c0:81.21-81.62"
72 65 66 6C 65 63 74 2E 63 30 3A 38 31 2E 31 34 2D 38 31 2E 36 33 3A 20 40 61 73 73 65 72 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "reflect.c0:81.14-81.63: @assert annotation failed"
72 65 66 6C 65 63 74 2E 63 30 3A 38 32 2E 32 34 2D 38 32 2E 36 30 00  # "reflect.c0:82.24-82.60"
72 65 66 6C 65 63 74 2E 63 30 3A 38 33 2E 31 34 2D 38 33 2E 35 39 3A 20 40 61 73 73 65 72 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "reflect.c0:83.14-83.59: @assert annotation failed"
72 65 66 6C 65 63 74 2E 63 30 3A 38 34 2E 31 34 2D 38 34 2E 34 35 3A 20 40 61 73 73 65 72 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "reflect.c0:84.14-84.45: @assert annotation failed"
72 65 66 6C 65 63 74 2E 63 30 3A 38 35 2E 31 34 2D 38 35 2E 38 37 3A 20 40 61 73 73 65 72 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "reflect.c0:85.14-85.87: @assert annotation failed"
72 65 66 6C 65 63 74 2E 63 30 3A 31 30 39 2E 39 2D 31 30 39 2E 37 33 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "reflect.c0:109.9-109.73: @loop_invariant annotation failed"
72 65 66 6C 65 63 74 2E 63 30 3A 31 31 30 2E 39 2D 31 31 30 2E 37 34 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "reflect.c0:110.9-110.74: @loop_invariant annotation failed"
72 65 66 6C 65 63 74 2E 63 30 3A 31 31 35 2E 32 31 2D 31 31 35 2E 37 32 00  # "reflect.c0:115.21-115.72"
72 65 66 6C 65 63 74 2E 63 30 3A 31 31 36 2E 31 32 2D 31 31 36 2E 35 36 3A 20 40 61 73 73 65 72 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "reflect.c0:116.12-116.56: @assert annotation failed"
72 65 66 6C 65 63 74 2E 63 30 3A 31 31 37 2E 33 31 2D 31 31 37 2E 36 32 00  # "reflect.c0:117.31-117.62"
72 65 66 6C 65 63 74 2E 63 30 3A 31 32 37 2E 31 33 2D 31 32 37 2E 34 36 00  # "reflect.c0:127.13-127.46"
72 65 66 6C 65 63 74 2E 63 30 3A 31 32 37 2E 34 2D 31 32 37 2E 34 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "reflect.c0:127.4-127.47: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
72 65 66 6C 65 63 74 2E 63 30 3A 31 32 38 2E 34 2D 31 32 38 2E 34 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "reflect.c0:128.4-128.45: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
72 65 66 6C 65 63 74 2E 63 30 3A 31 33 38 2E 31 32 2D 31 33 38 2E 34 33 00  # "reflect.c0:138.12-138.43"
72 65 66 6C 65 63 74 2E 63 30 3A 31 33 39 2E 31 32 2D 31 33 39 2E 34 32 00  # "reflect.c0:139.12-139.42"
72 65 66 6C 65 63 74 2E 63 30 3A 31 34 30 2E 32 34 2D 31 34 30 2E 35 34 00  # "reflect.c0:140.24-140.54"
72 65 66 6C 65 63 74 2E 63 30 3A 31 34 30 2E 31 34 2D 31 34 30 2E 37 30 00  # "reflect.c0:140.14-140.70"
72 65 66 6C 65 63 74 2E 63 30 3A 31 34 33 2E 31 33 2D 31 34 33 2E 35 30 00  # "reflect.c0:143.13-143.50"
72 65 66 6C 65 63 74 2E 63 30 3A 31 34 33 2E 36 2D 31 34 33 2E 35 31 3A 20 40 61 73 73 65 72 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "reflect.c0:143.6-143.51: @assert annotation failed"
72 65 66 6C 65 63 74 2E 63 30 3A 31 34 36 2E 31 31 2D 31 34 36 2E 35 39 00  # "reflect.c0:146.11-146.59"
72 65 66 6C 65 63 74 2E 63 30 3A 31 34 37 2E 31 31 2D 31 34 37 2E 35 33 00  # "reflect.c0:147.11-147.53"
72 65 66 6C 65 63 74 2E 63 30 3A 31 34 38 2E 31 31 2D 31 34 38 2E 36 32 00  # "reflect.c0:148.11-148.62"
72 65 66 6C 65 63 74 2E 63 30 3A 31 34 39 2E 31 31 2D 31 34 39 2E 36 30 00  # "reflect.c0:149.11-149.60"
72 65 66 6C 65 63 74 2E 63 30 3A 31 32 39 2E 34 2D 31 32 39 2E 35 34 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "reflect.c0:129.4-129.54: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 61 72 67 73 2E 68 30 3A 38 2E 36 2D 38 2E 32 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/args.h0:8.6-8.27: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 61 72 67 73 2E 68 30 3A 31 34 2E 36 2D 31 34 2E 32 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/args.h0:14.6-14.27: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 61 72 67 73 2E 68 30 3A 32 30 2E 36 2D 32 30 2E 32 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/args.h0:20.6-20.27: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 61 72 67 73 2E 68 30 3A 33 34 2E 36 2D 33 34 2E 37 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/args.h0:34.6-34.73: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 70 61 72 73 65 2E 68 30 3A 31 33 2E 36 2D 31 33 2E 33 39 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/parse.h0:13.6-13.39: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 70 61 72 73 65 2E 68 30 3A 32 30 2E 36 2D 32 30 2E 33 39 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/parse.h0:20.6-20.39: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 70 61 72 73 65 2E 68 30 3A 32 33 2E 36 2D 32 33 2E 34 38 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/parse.h0:23.6-23.48: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 70 61 72 73 65 2E 68 30 3A 32 37 2E 31 35 2D 32 37 2E 33 34 00  # "/afs/andrew/course/15/122/lib/parse.h0:27.15-27.34"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 70 61 72 73 65 2E 68 30 3A 32 37 2E 36 2D 32 37 2E 33 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/parse.h0:27.6-27.35: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 70 61 72 73 65 2E 68 30 3A 32 38 2E 36 2D 32 38 2E 34 38 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/parse.h0:28.6-28.48: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 69 6D 67 2E 68 30 3A 31 32 2E 36 2D 31 32 2E 32 39 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/img.h0:12.6-12.29: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 69 6D 67 2E 68 30 3A 31 33 2E 36 2D 31 33 2E 32 36 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/img.h0:13.6-13.26: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 69 6D 67 2E 68 30 3A 31 37 2E 36 2D 31 37 2E 32 39 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/img.h0:17.6-17.29: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 69 6D 67 2E 68 30 3A 31 38 2E 36 2D 31 38 2E 32 36 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/img.h0:18.6-18.26: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 69 6D 67 2E 68 30 3A 32 32 2E 36 2D 32 32 2E 33 39 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/img.h0:22.6-22.39: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 69 6D 67 2E 68 30 3A 32 33 2E 36 2D 32 33 2E 33 30 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/img.h0:23.6-23.30: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 69 6D 67 2E 68 30 3A 32 34 2E 31 34 2D 32 34 2E 33 34 00  # "/afs/andrew/course/15/122/lib/img.h0:24.14-24.34"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 69 6D 67 2E 68 30 3A 32 34 2E 36 2D 32 34 2E 34 34 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/img.h0:24.6-24.44: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 69 6D 67 2E 68 30 3A 32 35 2E 31 34 2D 32 35 2E 33 35 00  # "/afs/andrew/course/15/122/lib/img.h0:25.14-25.35"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 69 6D 67 2E 68 30 3A 32 35 2E 36 2D 32 35 2E 34 36 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/img.h0:25.6-25.46: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 69 6D 67 2E 68 30 3A 32 39 2E 36 2D 32 39 2E 32 39 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/img.h0:29.6-29.29: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 69 6D 67 2E 68 30 3A 33 30 2E 31 34 2D 33 30 2E 33 34 00  # "/afs/andrew/course/15/122/lib/img.h0:30.14-30.34"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 69 6D 67 2E 68 30 3A 33 30 2E 33 38 2D 33 30 2E 35 36 00  # "/afs/andrew/course/15/122/lib/img.h0:30.38-30.56"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 69 6D 67 2E 68 30 3A 33 30 2E 36 2D 33 30 2E 35 37 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/img.h0:30.6-30.57: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 69 6D 67 2E 68 30 3A 33 31 2E 31 34 2D 33 31 2E 33 35 00  # "/afs/andrew/course/15/122/lib/img.h0:31.14-31.35"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 69 6D 67 2E 68 30 3A 33 31 2E 33 39 2D 33 31 2E 35 38 00  # "/afs/andrew/course/15/122/lib/img.h0:31.39-31.58"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 69 6D 67 2E 68 30 3A 33 31 2E 36 2D 33 31 2E 35 39 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/img.h0:31.6-31.59: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 69 6D 67 2E 68 30 3A 33 38 2E 36 2D 33 38 2E 32 39 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/img.h0:38.6-38.29: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 69 6D 67 2E 68 30 3A 33 39 2E 31 34 2D 33 39 2E 33 34 00  # "/afs/andrew/course/15/122/lib/img.h0:39.14-39.34"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 69 6D 67 2E 68 30 3A 33 39 2E 36 2D 33 39 2E 34 34 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/img.h0:39.6-39.44: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 69 6D 67 2E 68 30 3A 34 30 2E 31 34 2D 34 30 2E 33 35 00  # "/afs/andrew/course/15/122/lib/img.h0:40.14-40.35"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 69 6D 67 2E 68 30 3A 34 30 2E 36 2D 34 30 2E 34 36 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/img.h0:40.6-40.46: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 69 6D 67 2E 68 30 3A 35 30 2E 36 2D 35 30 2E 32 39 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/img.h0:50.6-50.29: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 69 6D 67 2E 68 30 3A 35 38 2E 36 2D 35 38 2E 32 39 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/img.h0:58.6-58.29: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 69 6D 67 2E 68 30 3A 35 39 2E 33 34 2D 35 39 2E 35 32 00  # "/afs/andrew/course/15/122/lib/img.h0:59.34-59.52"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 69 6D 67 2E 68 30 3A 35 39 2E 35 35 2D 35 39 2E 37 34 00  # "/afs/andrew/course/15/122/lib/img.h0:59.55-59.74"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 69 6D 67 2E 68 30 3A 35 39 2E 36 2D 35 39 2E 37 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/img.h0:59.6-59.75: @ensures annotation failed"
49 6E 70 75 74 20 69 6D 61 67 65 3A 20 20 00  # "Input image:  "
4F 75 74 70 75 74 20 69 6D 61 67 65 3A 20 00  # "Output image: "
43 6F 75 6C 64 20 6E 6F 74 20 6C 6F 61 64 20 73 6F 75 72 63 65 20 69 6D 61 67 65 00  # "Could not load source image"
72 65 66 6C 65 63 74 2D 6D 61 69 6E 2E 63 30 3A 31 37 2E 31 35 2D 31 37 2E 33 34 00  # "reflect-main.c0:17.15-17.34"
72 65 66 6C 65 63 74 2D 6D 61 69 6E 2E 63 30 3A 31 38 2E 31 36 2D 31 38 2E 33 36 00  # "reflect-main.c0:18.16-18.36"
72 65 66 6C 65 63 74 2D 6D 61 69 6E 2E 63 30 3A 31 39 2E 32 32 2D 31 39 2E 34 30 00  # "reflect-main.c0:19.22-19.40"
4C 6F 61 64 65 64 20 69 6D 61 67 65 2E 20 20 44 69 6D 65 6E 73 69 6F 6E 73 20 61 72 65 20 00  # "Loaded image.  Dimensions are "
20 62 79 20 00  # " by "
2E 00  # "."
52 75 6E 6E 69 6E 67 20 72 65 66 6C 65 63 74 20 74 72 61 6E 73 66 6F 72 6D 2E 2E 2E 00  # "Running reflect transform..."
72 65 66 6C 65 63 74 2D 6D 61 69 6E 2E 63 30 3A 33 30 2E 32 36 2D 33 30 2E 35 38 00  # "reflect-main.c0:30.26-30.58"
72 65 66 6C 65 63 74 2D 6D 61 69 6E 2E 63 30 3A 33 31 2E 36 2D 33 31 2E 36 35 3A 20 40 61 73 73 65 72 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "reflect-main.c0:31.6-31.65: @assert annotation failed"
64 6F 6E 65 2E 00  # "done."
72 65 66 6C 65 63 74 2D 6D 61 69 6E 2E 63 30 3A 33 35 2E 31 38 2D 33 35 2E 34 39 00  # "reflect-main.c0:35.18-35.49"
72 65 66 6C 65 63 74 2D 6D 61 69 6E 2E 63 30 3A 33 36 2E 32 33 2D 33 36 2E 33 39 00  # "reflect-main.c0:36.23-36.39"
72 65 66 6C 65 63 74 2D 6D 61 69 6E 2E 63 30 3A 33 38 2E 38 2D 33 38 2E 33 30 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "reflect-main.c0:38.8-38.30: @loop_invariant annotation failed"
53 61 76 69 6E 67 20 6F 75 74 70 75 74 2E 2E 2E 00  # "Saving output..."
72 65 66 6C 65 63 74 2D 6D 61 69 6E 2E 63 30 3A 34 35 2E 33 2D 34 35 2E 32 37 00  # "reflect-main.c0:45.3-45.27"
64 6F 6E 65 2E 00  # "done."
2E 70 6E 67 00  # ".png"
72 65 66 6C 65 63 74 2D 6D 61 69 6E 2E 63 30 3A 35 31 2E 34 31 2D 35 31 2E 37 30 00  # "reflect-main.c0:51.41-51.70"
49 6E 70 75 74 20 66 69 6C 65 20 64 6F 65 73 20 6E 6F 74 20 65 6E 64 20 77 69 74 68 20 2E 70 6E 67 00  # "Input file does not end with .png"
72 65 66 6C 65 63 74 2D 6D 61 69 6E 2E 63 30 3A 35 35 2E 31 36 2D 35 35 2E 34 33 00  # "reflect-main.c0:55.16-55.43"
5F 00  # "_"
72 65 66 6C 65 63 74 2D 6D 61 69 6E 2E 63 30 3A 35 36 2E 39 2D 35 36 2E 33 30 00  # "reflect-main.c0:56.9-56.30"
72 65 66 6C 65 63 74 2D 6D 61 69 6E 2E 63 30 3A 35 37 2E 39 2D 35 37 2E 33 31 00  # "reflect-main.c0:57.9-57.31"
2E 70 6E 67 00  # ".png"
72 65 66 6C 65 63 74 2D 6D 61 69 6E 2E 63 30 3A 35 38 2E 39 2D 35 38 2E 33 33 00  # "reflect-main.c0:58.9-58.33"
28 6E 6F 6E 65 29 00  # "(none)"
2D 69 00  # "-i"
72 65 66 6C 65 63 74 2D 6D 61 69 6E 2E 63 30 3A 36 37 2E 33 2D 36 37 2E 32 37 00  # "reflect-main.c0:67.3-67.27"
2D 6F 00  # "-o"
72 65 66 6C 65 63 74 2D 6D 61 69 6E 2E 63 30 3A 36 38 2E 33 2D 36 38 2E 32 38 00  # "reflect-main.c0:68.3-68.28"
72 65 66 6C 65 63 74 2D 6D 61 69 6E 2E 63 30 3A 36 39 2E 33 2D 36 39 2E 31 35 00  # "reflect-main.c0:69.3-69.15"
00  # ""
55 73 61 67 65 3A 20 72 65 66 6C 65 63 74 20 2D 69 20 3C 69 6E 70 75 74 20 69 6D 61 67 65 3E 20 5B 2D 6F 20 3C 6F 75 74 70 75 74 20 69 6D 61 67 65 3E 5D 00  # "Usage: reflect -i <input image> [-o <output image>]"
00  # ""
72 65 66 6C 65 63 74 00  # "reflect"
72 65 66 6C 65 63 74 2D 6D 61 69 6E 2E 63 30 3A 37 36 2E 31 35 2D 37 36 2E 34 38 00  # "reflect-main.c0:76.15-76.48"
72 65 66 6C 65 63 74 2D 6D 61 69 6E 2E 63 30 3A 37 39 2E 33 2D 37 39 2E 33 32 00  # "reflect-main.c0:79.3-79.32"

00 39             # function count
# function_pool

#<main>
00 00             # number of arguments = 0
00 10             # number of local variables = 16
00 7B             # code length = 123 bytes
14 29 A5 # aldc 10661      # s[10661] = "(none)"
36 00    # vstore 0        # _caller = "(none)";
BB 08    # new 8           # alloc(string)
36 02    # vstore 2        # input = alloc(string);
BB 08    # new 8           # alloc(string)
36 03    # vstore 3        # output = alloc(string);
14 29 AC # aldc 10668      # s[10668] = "-i"
15 02    # vload 2         # input
14 29 AF # aldc 10671      # s[10671] = "reflect-main.c0:67.3-67.27"
B8 00 2A # invokestatic 42 # args_string__1("-i", input, "reflect-main.c0:67.3-67.27")
57       # pop             # (ignore result)
14 29 CA # aldc 10698      # s[10698] = "-o"
15 03    # vload 3         # output
14 29 CD # aldc 10701      # s[10701] = "reflect-main.c0:68.3-68.28"
B8 00 2A # invokestatic 42 # args_string__1("-o", output, "reflect-main.c0:68.3-68.28")
57       # pop             # (ignore result)
14 29 E8 # aldc 10728      # s[10728] = "reflect-main.c0:69.3-69.15"
B8 00 2B # invokestatic 43 # args_parse__1("reflect-main.c0:69.3-69.15")
57       # pop             # (ignore result)
14 2A 03 # aldc 10755      # s[10755] = ""
15 02    # vload 2         # input
2F       # amload          # *(input)
B7 00 22 # invokenative 34 # string_equal("", *(input))
10 01    # bipush 1        # true
9F 00 06 # if_cmpeq +6     # if (string_equal("", *(input)) == true) goto <535:then>
A7 00 0A # goto +10        # goto <536:else>
# <535:then>
14 2A 04 # aldc 10756      # s[10756] = "Usage: reflect -i <input image> [-o <output image>]"
BF       # athrow          # error "Usage: reflect -i <input image> [-o <output image>]"
A7 00 03 # goto +3         # goto <537:endif>
# <536:else>
# <537:endif>
14 2A 38 # aldc 10808      # s[10808] = ""
15 03    # vload 3         # output
2F       # amload          # *(output)
B7 00 22 # invokenative 34 # string_equal("", *(output))
10 01    # bipush 1        # true
9F 00 06 # if_cmpeq +6     # if (string_equal("", *(output)) == true) goto <538:then>
A7 00 15 # goto +21        # goto <539:else>
# <538:then>
15 03    # vload 3         # output
15 02    # vload 2         # input
2F       # amload          # *(input)
14 2A 39 # aldc 10809      # s[10809] = "reflect"
14 2A 41 # aldc 10817      # s[10817] = "reflect-main.c0:76.15-76.48"
B8 00 38 # invokestatic 56 # default_output(*(input), "reflect", "reflect-main.c0:76.15-76.48")
4F       # amstore         # *(output) = default_output(*(input), "reflect", "reflect-main.c0:76.15-76.48");
A7 00 03 # goto +3         # goto <540:endif>
# <539:else>
# <540:endif>
15 02    # vload 2         # input
2F       # amload          # *(input)
15 03    # vload 3         # output
2F       # amload          # *(output)
14 2A 5D # aldc 10845      # s[10845] = "reflect-main.c0:79.3-79.32"
B8 00 37 # invokestatic 55 # reflect_main(*(input), *(output), "reflect-main.c0:79.3-79.32")
57       # pop             # (ignore result)
10 00    # bipush 0        # 0
36 01    # vstore 1        # _result = 0;
15 01    # vload 1         # _result
B0       # return          # 


#<get_red>
00 02             # number of arguments = 2
00 05             # number of local variables = 5
00 58             # code length = 88 bytes
10 17    # bipush 23       # 23
10 07    # bipush 7        # 7
64       # isub            # (23 - 7)
36 03    # vstore 3        # shiftAmt = (23 - 7);
15 00    # vload 0         # p
36 04    # vstore 4        # pixelBits = p;
15 04    # vload 4         # pixelBits
13 00 00 # ildc 0          # c[0] = 16777215
7E       # iand            # (pixelBits & 16777215)
36 04    # vstore 4        # pixelBits = (pixelBits & 16777215);
15 04    # vload 4         # pixelBits
13 00 01 # ildc 1          # c[1] = 16777216
A1 00 06 # if_icmplt +6    # if (pixelBits < 16777216) goto <00:cond_true>
A7 00 08 # goto +8         # goto <01:cond_false>
# <00:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <02:cond_end>
# <01:cond_false>
10 00    # bipush 0        # false
# <02:cond_end>
14 00 00 # aldc 0          # s[0] = "pixel.c0:13.7-13.37: @assert annotation failed"
CF       # assert          # assert(pixelBits < 16777216) [failure message on stack]
15 04    # vload 4         # pixelBits
15 03    # vload 3         # shiftAmt
7A       # ishr            # (pixelBits >> shiftAmt)
36 02    # vstore 2        # _result = (pixelBits >> shiftAmt);
10 00    # bipush 0        # 0
15 02    # vload 2         # _result
A4 00 06 # if_icmple +6    # if (0 <= _result) goto <03:cond_true>
A7 00 18 # goto +24        # goto <04:cond_false>
# <03:cond_true>
15 02    # vload 2         # _result
13 00 02 # ildc 2          # c[2] = 255
A4 00 06 # if_icmple +6    # if (_result <= 255) goto <06:cond_true>
A7 00 08 # goto +8         # goto <07:cond_false>
# <06:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <08:cond_end>
# <07:cond_false>
10 00    # bipush 0        # false
# <08:cond_end>
A7 00 05 # goto +5         # goto <05:cond_end>
# <04:cond_false>
10 00    # bipush 0        # false
# <05:cond_end>
14 00 2F # aldc 47         # s[47] = "pixel.c0:8.4-8.44: @ensures annotation failed"
CF       # assert          # assert((0 <= _result) && (_result <= 255)) [failure message on stack]
15 02    # vload 2         # _result
B0       # return          # 


#<get_green>
00 02             # number of arguments = 2
00 05             # number of local variables = 5
00 58             # code length = 88 bytes
10 0F    # bipush 15       # 15
10 07    # bipush 7        # 7
64       # isub            # (15 - 7)
36 03    # vstore 3        # shiftAmt = (15 - 7);
15 00    # vload 0         # p
36 04    # vstore 4        # pixelBits = p;
15 04    # vload 4         # pixelBits
13 00 03 # ildc 3          # c[3] = 65535
7E       # iand            # (pixelBits & 65535)
36 04    # vstore 4        # pixelBits = (pixelBits & 65535);
15 04    # vload 4         # pixelBits
13 00 04 # ildc 4          # c[4] = 65536
A1 00 06 # if_icmplt +6    # if (pixelBits < 65536) goto <09:cond_true>
A7 00 08 # goto +8         # goto <10:cond_false>
# <09:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <11:cond_end>
# <10:cond_false>
10 00    # bipush 0        # false
# <11:cond_end>
14 00 5D # aldc 93         # s[93] = "pixel.c0:26.7-26.37: @assert annotation failed"
CF       # assert          # assert(pixelBits < 65536) [failure message on stack]
15 04    # vload 4         # pixelBits
15 03    # vload 3         # shiftAmt
7A       # ishr            # (pixelBits >> shiftAmt)
36 02    # vstore 2        # _result = (pixelBits >> shiftAmt);
10 00    # bipush 0        # 0
15 02    # vload 2         # _result
A4 00 06 # if_icmple +6    # if (0 <= _result) goto <12:cond_true>
A7 00 18 # goto +24        # goto <13:cond_false>
# <12:cond_true>
15 02    # vload 2         # _result
13 00 05 # ildc 5          # c[5] = 255
A4 00 06 # if_icmple +6    # if (_result <= 255) goto <15:cond_true>
A7 00 08 # goto +8         # goto <16:cond_false>
# <15:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <17:cond_end>
# <16:cond_false>
10 00    # bipush 0        # false
# <17:cond_end>
A7 00 05 # goto +5         # goto <14:cond_end>
# <13:cond_false>
10 00    # bipush 0        # false
# <14:cond_end>
14 00 8C # aldc 140        # s[140] = "pixel.c0:21.4-21.44: @ensures annotation failed"
CF       # assert          # assert((0 <= _result) && (_result <= 255)) [failure message on stack]
15 02    # vload 2         # _result
B0       # return          # 


#<get_blue>
00 02             # number of arguments = 2
00 05             # number of local variables = 5
00 58             # code length = 88 bytes
10 07    # bipush 7        # 7
10 07    # bipush 7        # 7
64       # isub            # (7 - 7)
36 03    # vstore 3        # shiftAmt = (7 - 7);
15 00    # vload 0         # p
36 04    # vstore 4        # pixelBits = p;
15 04    # vload 4         # pixelBits
13 00 06 # ildc 6          # c[6] = 255
7E       # iand            # (pixelBits & 255)
36 04    # vstore 4        # pixelBits = (pixelBits & 255);
15 04    # vload 4         # pixelBits
13 00 07 # ildc 7          # c[7] = 256
A1 00 06 # if_icmplt +6    # if (pixelBits < 256) goto <18:cond_true>
A7 00 08 # goto +8         # goto <19:cond_false>
# <18:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <20:cond_end>
# <19:cond_false>
10 00    # bipush 0        # false
# <20:cond_end>
14 00 BC # aldc 188        # s[188] = "pixel.c0:39.7-39.37: @assert annotation failed"
CF       # assert          # assert(pixelBits < 256) [failure message on stack]
15 04    # vload 4         # pixelBits
15 03    # vload 3         # shiftAmt
7A       # ishr            # (pixelBits >> shiftAmt)
36 02    # vstore 2        # _result = (pixelBits >> shiftAmt);
10 00    # bipush 0        # 0
15 02    # vload 2         # _result
A4 00 06 # if_icmple +6    # if (0 <= _result) goto <21:cond_true>
A7 00 18 # goto +24        # goto <22:cond_false>
# <21:cond_true>
15 02    # vload 2         # _result
13 00 08 # ildc 8          # c[8] = 255
A4 00 06 # if_icmple +6    # if (_result <= 255) goto <24:cond_true>
A7 00 08 # goto +8         # goto <25:cond_false>
# <24:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <26:cond_end>
# <25:cond_false>
10 00    # bipush 0        # false
# <26:cond_end>
A7 00 05 # goto +5         # goto <23:cond_end>
# <22:cond_false>
10 00    # bipush 0        # false
# <23:cond_end>
14 00 EB # aldc 235        # s[235] = "pixel.c0:34.4-34.44: @ensures annotation failed"
CF       # assert          # assert((0 <= _result) && (_result <= 255)) [failure message on stack]
15 02    # vload 2         # _result
B0       # return          # 


#<get_alpha>
00 02             # number of arguments = 2
00 05             # number of local variables = 5
00 46             # code length = 70 bytes
10 1F    # bipush 31       # 31
10 07    # bipush 7        # 7
64       # isub            # (31 - 7)
36 03    # vstore 3        # shiftAmt = (31 - 7);
15 00    # vload 0         # p
36 04    # vstore 4        # pixelBits = p;
15 04    # vload 4         # pixelBits
15 03    # vload 3         # shiftAmt
7A       # ishr            # (pixelBits >> shiftAmt)
36 04    # vstore 4        # pixelBits = (pixelBits >> shiftAmt);
15 04    # vload 4         # pixelBits
13 00 09 # ildc 9          # c[9] = 255
7E       # iand            # (pixelBits & 255)
36 04    # vstore 4        # pixelBits = (pixelBits & 255);
15 04    # vload 4         # pixelBits
36 02    # vstore 2        # _result = pixelBits;
10 00    # bipush 0        # 0
15 02    # vload 2         # _result
A4 00 06 # if_icmple +6    # if (0 <= _result) goto <27:cond_true>
A7 00 18 # goto +24        # goto <28:cond_false>
# <27:cond_true>
15 02    # vload 2         # _result
13 00 0A # ildc 10         # c[10] = 255
A4 00 06 # if_icmple +6    # if (_result <= 255) goto <30:cond_true>
A7 00 08 # goto +8         # goto <31:cond_false>
# <30:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <32:cond_end>
# <31:cond_false>
10 00    # bipush 0        # false
# <32:cond_end>
A7 00 05 # goto +5         # goto <29:cond_end>
# <28:cond_false>
10 00    # bipush 0        # false
# <29:cond_end>
14 01 1B # aldc 283        # s[283] = "pixel.c0:47.4-47.44: @ensures annotation failed"
CF       # assert          # assert((0 <= _result) && (_result <= 255)) [failure message on stack]
15 02    # vload 2         # _result
B0       # return          # 


#<make_pixel>
00 05             # number of arguments = 5
00 0C             # number of local variables = 12
00 FA             # code length = 250 bytes
10 00    # bipush 0        # 0
15 01    # vload 1         # red
A4 00 06 # if_icmple +6    # if (0 <= red) goto <33:cond_true>
A7 00 18 # goto +24        # goto <34:cond_false>
# <33:cond_true>
15 01    # vload 1         # red
13 00 0B # ildc 11         # c[11] = 255
A4 00 06 # if_icmple +6    # if (red <= 255) goto <36:cond_true>
A7 00 08 # goto +8         # goto <37:cond_false>
# <36:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <38:cond_end>
# <37:cond_false>
10 00    # bipush 0        # false
# <38:cond_end>
A7 00 05 # goto +5         # goto <35:cond_end>
# <34:cond_false>
10 00    # bipush 0        # false
# <35:cond_end>
14 01 4B # aldc 331        # s[331] = "pixel.c0:62.4-62.36: @requires annotation failed\n"
15 04    # vload 4         # _caller
14 01 7D # aldc 381        # s[381] = ": caller location"
B7 00 00 # invokenative 0  # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0  # string_join("pixel.c0:62.4-62.36: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert((0 <= red) && (red <= 255)) [failure message on stack]
10 00    # bipush 0        # 0
15 02    # vload 2         # green
A4 00 06 # if_icmple +6    # if (0 <= green) goto <39:cond_true>
A7 00 18 # goto +24        # goto <40:cond_false>
# <39:cond_true>
15 02    # vload 2         # green
13 00 0C # ildc 12         # c[12] = 255
A4 00 06 # if_icmple +6    # if (green <= 255) goto <42:cond_true>
A7 00 08 # goto +8         # goto <43:cond_false>
# <42:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <44:cond_end>
# <43:cond_false>
10 00    # bipush 0        # false
# <44:cond_end>
A7 00 05 # goto +5         # goto <41:cond_end>
# <40:cond_false>
10 00    # bipush 0        # false
# <41:cond_end>
14 01 8F # aldc 399        # s[399] = "pixel.c0:63.4-63.40: @requires annotation failed\n"
15 04    # vload 4         # _caller
14 01 C1 # aldc 449        # s[449] = ": caller location"
B7 00 00 # invokenative 0  # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0  # string_join("pixel.c0:63.4-63.40: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert((0 <= green) && (green <= 255)) [failure message on stack]
10 00    # bipush 0        # 0
15 03    # vload 3         # blue
A4 00 06 # if_icmple +6    # if (0 <= blue) goto <45:cond_true>
A7 00 18 # goto +24        # goto <46:cond_false>
# <45:cond_true>
15 03    # vload 3         # blue
13 00 0D # ildc 13         # c[13] = 255
A4 00 06 # if_icmple +6    # if (blue <= 255) goto <48:cond_true>
A7 00 08 # goto +8         # goto <49:cond_false>
# <48:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <50:cond_end>
# <49:cond_false>
10 00    # bipush 0        # false
# <50:cond_end>
A7 00 05 # goto +5         # goto <47:cond_end>
# <46:cond_false>
10 00    # bipush 0        # false
# <47:cond_end>
14 01 D3 # aldc 467        # s[467] = "pixel.c0:64.4-64.38: @requires annotation failed\n"
15 04    # vload 4         # _caller
14 02 05 # aldc 517        # s[517] = ": caller location"
B7 00 00 # invokenative 0  # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0  # string_join("pixel.c0:64.4-64.38: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert((0 <= blue) && (blue <= 255)) [failure message on stack]
10 00    # bipush 0        # 0
15 00    # vload 0         # alpha
A4 00 06 # if_icmple +6    # if (0 <= alpha) goto <51:cond_true>
A7 00 18 # goto +24        # goto <52:cond_false>
# <51:cond_true>
15 00    # vload 0         # alpha
13 00 0E # ildc 14         # c[14] = 255
A4 00 06 # if_icmple +6    # if (alpha <= 255) goto <54:cond_true>
A7 00 08 # goto +8         # goto <55:cond_false>
# <54:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <56:cond_end>
# <55:cond_false>
10 00    # bipush 0        # false
# <56:cond_end>
A7 00 05 # goto +5         # goto <53:cond_end>
# <52:cond_false>
10 00    # bipush 0        # false
# <53:cond_end>
14 02 17 # aldc 535        # s[535] = "pixel.c0:65.4-65.40: @requires annotation failed\n"
15 04    # vload 4         # _caller
14 02 49 # aldc 585        # s[585] = ": caller location"
B7 00 00 # invokenative 0  # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0  # string_join("pixel.c0:65.4-65.40: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert((0 <= alpha) && (alpha <= 255)) [failure message on stack]
10 1F    # bipush 31       # 31
10 07    # bipush 7        # 7
64       # isub            # (31 - 7)
36 06    # vstore 6        # alphaShift = (31 - 7);
10 17    # bipush 23       # 23
10 07    # bipush 7        # 7
64       # isub            # (23 - 7)
36 07    # vstore 7        # redShift = (23 - 7);
10 0F    # bipush 15       # 15
10 07    # bipush 7        # 7
64       # isub            # (15 - 7)
36 08    # vstore 8        # greenShift = (15 - 7);
15 00    # vload 0         # alpha
15 06    # vload 6         # alphaShift
78       # ishl            # (alpha << alphaShift)
36 09    # vstore 9        # alphaBit = (alpha << alphaShift);
15 01    # vload 1         # red
15 07    # vload 7         # redShift
78       # ishl            # (red << redShift)
36 0A    # vstore 10       # redBit = (red << redShift);
15 02    # vload 2         # green
15 08    # vload 8         # greenShift
78       # ishl            # (green << greenShift)
36 0B    # vstore 11       # greenBit = (green << greenShift);
15 09    # vload 9         # alphaBit
15 0A    # vload 10        # redBit
60       # iadd            # (alphaBit + redBit)
15 0B    # vload 11        # greenBit
60       # iadd            # ((alphaBit + redBit) + greenBit)
15 03    # vload 3         # blue
60       # iadd            # (((alphaBit + redBit) + greenBit) + blue)
36 05    # vstore 5        # _result = (((alphaBit + redBit) + greenBit) + blue);
15 05    # vload 5         # _result
B0       # return          # 


#<int_size>
00 01             # number of arguments = 1
00 0C             # number of local variables = 12
00 07             # code length = 7 bytes
10 04    # bipush 4        # 4
36 01    # vstore 1        # _result = 4;
15 01    # vload 1         # _result
B0       # return          # 


#<int_size__1>
00 01             # number of arguments = 1
00 0C             # number of local variables = 12
00 20             # code length = 32 bytes
14 02 5B # aldc 603        # s[603] = "/afs/andrew/course/15/122/lib/util.h0:8.1-9.33"
B8 00 06 # invokestatic 6  # int_size("/afs/andrew/course/15/122/lib/util.h0:8.1-9.33")
36 01    # vstore 1        # _result = int_size("/afs/andrew/course/15/122/lib/util.h0:8.1-9.33");
15 01    # vload 1         # _result
10 04    # bipush 4        # 4
9F 00 06 # if_cmpeq +6     # if (_result == 4) goto <57:cond_true>
A7 00 08 # goto +8         # goto <58:cond_false>
# <57:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <59:cond_end>
# <58:cond_false>
10 00    # bipush 0        # false
# <59:cond_end>
14 02 8A # aldc 650        # s[650] = "/afs/andrew/course/15/122/lib/util.h0:9.6-9.27: @ensures annotation failed"
CF       # assert          # assert(_result == 4) [failure message on stack]
15 01    # vload 1         # _result
B0       # return          # 


#<int_max>
00 01             # number of arguments = 1
00 0C             # number of local variables = 12
00 08             # code length = 8 bytes
13 00 11 # ildc 17         # c[17] = 2147483647
36 01    # vstore 1        # _result = 2147483647;
15 01    # vload 1         # _result
B0       # return          # 


#<int_max__1>
00 01             # number of arguments = 1
00 0C             # number of local variables = 12
00 21             # code length = 33 bytes
14 02 D5 # aldc 725        # s[725] = "/afs/andrew/course/15/122/lib/util.h0:10.1-11.42"
B8 00 08 # invokestatic 8  # int_max("/afs/andrew/course/15/122/lib/util.h0:10.1-11.42")
36 01    # vstore 1        # _result = int_max("/afs/andrew/course/15/122/lib/util.h0:10.1-11.42");
15 01    # vload 1         # _result
13 00 0F # ildc 15         # c[15] = 2147483647
9F 00 06 # if_cmpeq +6     # if (_result == 2147483647) goto <60:cond_true>
A7 00 08 # goto +8         # goto <61:cond_false>
# <60:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <62:cond_end>
# <61:cond_false>
10 00    # bipush 0        # false
# <62:cond_end>
14 03 06 # aldc 774        # s[774] = "/afs/andrew/course/15/122/lib/util.h0:11.6-11.36: @ensures annotation failed"
CF       # assert          # assert(_result == 2147483647) [failure message on stack]
15 01    # vload 1         # _result
B0       # return          # 


#<int_min>
00 01             # number of arguments = 1
00 0C             # number of local variables = 12
00 08             # code length = 8 bytes
13 00 12 # ildc 18         # c[18] = -2147483648
36 01    # vstore 1        # _result = -2147483648;
15 01    # vload 1         # _result
B0       # return          # 


#<int_min__1>
00 01             # number of arguments = 1
00 0C             # number of local variables = 12
00 21             # code length = 33 bytes
14 03 53 # aldc 851        # s[851] = "/afs/andrew/course/15/122/lib/util.h0:12.1-13.43"
B8 00 0A # invokestatic 10 # int_min("/afs/andrew/course/15/122/lib/util.h0:12.1-13.43")
36 01    # vstore 1        # _result = int_min("/afs/andrew/course/15/122/lib/util.h0:12.1-13.43");
15 01    # vload 1         # _result
13 00 10 # ildc 16         # c[16] = -2147483648
9F 00 06 # if_cmpeq +6     # if (_result == -(-2147483648)) goto <63:cond_true>
A7 00 08 # goto +8         # goto <64:cond_false>
# <63:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <65:cond_end>
# <64:cond_false>
10 00    # bipush 0        # false
# <65:cond_end>
14 03 84 # aldc 900        # s[900] = "/afs/andrew/course/15/122/lib/util.h0:13.6-13.37: @ensures annotation failed"
CF       # assert          # assert(_result == -(-2147483648)) [failure message on stack]
15 01    # vload 1         # _result
B0       # return          # 


#<abs>
00 02             # number of arguments = 2
00 0C             # number of local variables = 12
00 52             # code length = 82 bytes
15 00    # vload 0         # x
14 0D AE # aldc 3502       # s[3502] = "/afs/andrew/course/15/122/lib/util.c0:29.17-29.26"
B8 00 0B # invokestatic 11 # int_min__1("/afs/andrew/course/15/122/lib/util.c0:29.17-29.26")
A3 00 06 # if_icmpgt +6    # if (x > int_min__1("/afs/andrew/course/15/122/lib/util.c0:29.17-29.26")) goto <190:cond_true>
A7 00 08 # goto +8         # goto <191:cond_false>
# <190:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <192:cond_end>
# <191:cond_false>
10 00    # bipush 0        # false
# <192:cond_end>
14 0D E0 # aldc 3552       # s[3552] = "/afs/andrew/course/15/122/lib/util.c0:29.4-29.27: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 0E 2F # aldc 3631       # s[3631] = ": caller location"
B7 00 00 # invokenative 0  # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0  # string_join("/afs/andrew/course/15/122/lib/util.c0:29.4-29.27: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert(x > int_min__1("/afs/andrew/course/15/122/lib/util.c0:29.17-29.26")) [failure message on stack]
15 00    # vload 0         # x
10 00    # bipush 0        # 0
A1 00 06 # if_icmplt +6    # if (x < 0) goto <193:cond_true>
A7 00 0B # goto +11        # goto <194:cond_false>
# <193:cond_true>
10 00    # bipush 0        # 
15 00    # vload 0         # x
64       # isub            # -(x)
A7 00 05 # goto +5         # goto <195:cond_end>
# <194:cond_false>
15 00    # vload 0         # x
# <195:cond_end>
36 02    # vstore 2        # _result = ((x < 0) ? -(x) : x);
15 02    # vload 2         # _result
10 00    # bipush 0        # 0
A2 00 06 # if_icmpge +6    # if (_result >= 0) goto <196:cond_true>
A7 00 08 # goto +8         # goto <197:cond_false>
# <196:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <198:cond_end>
# <197:cond_false>
10 00    # bipush 0        # false
# <198:cond_end>
14 0E 41 # aldc 3649       # s[3649] = "/afs/andrew/course/15/122/lib/util.c0:30.4-30.25: @ensures annotation failed"
CF       # assert          # assert(_result >= 0) [failure message on stack]
15 02    # vload 2         # _result
B0       # return          # 


#<abs__1>
00 02             # number of arguments = 2
00 0C             # number of local variables = 12
00 6D             # code length = 109 bytes
15 00    # vload 0         # x
14 03 D1 # aldc 977        # s[977] = "/afs/andrew/course/15/122/lib/util.h0:17.19-17.28"
B8 00 0B # invokestatic 11 # int_min__1("/afs/andrew/course/15/122/lib/util.h0:17.19-17.28")
A3 00 06 # if_icmpgt +6    # if (x > int_min__1("/afs/andrew/course/15/122/lib/util.h0:17.19-17.28")) goto <66:cond_true>
A7 00 08 # goto +8         # goto <67:cond_false>
# <66:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <68:cond_end>
# <67:cond_false>
10 00    # bipush 0        # false
# <68:cond_end>
14 04 03 # aldc 1027       # s[1027] = "/afs/andrew/course/15/122/lib/util.h0:17.6-17.29: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 04 52 # aldc 1106       # s[1106] = ": caller location"
B7 00 00 # invokenative 0  # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0  # string_join("/afs/andrew/course/15/122/lib/util.h0:17.6-17.29: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert(x > int_min__1("/afs/andrew/course/15/122/lib/util.h0:17.19-17.28")) [failure message on stack]
15 00    # vload 0         # x
14 04 64 # aldc 1124       # s[1124] = "/afs/andrew/course/15/122/lib/util.h0:16.1-19.48"
B8 00 0C # invokestatic 12 # abs(x, "/afs/andrew/course/15/122/lib/util.h0:16.1-19.48")
36 02    # vstore 2        # _result = abs(x, "/afs/andrew/course/15/122/lib/util.h0:16.1-19.48");
15 02    # vload 2         # _result
10 00    # bipush 0        # 0
A2 00 06 # if_icmpge +6    # if (_result >= 0) goto <69:cond_true>
A7 00 08 # goto +8         # goto <70:cond_false>
# <69:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <71:cond_end>
# <70:cond_false>
10 00    # bipush 0        # false
# <71:cond_end>
14 04 95 # aldc 1173       # s[1173] = "/afs/andrew/course/15/122/lib/util.h0:18.6-18.27: @ensures annotation failed"
CF       # assert          # assert(_result >= 0) [failure message on stack]
15 02    # vload 2         # _result
15 00    # vload 0         # x
10 00    # bipush 0        # 0
A1 00 06 # if_icmplt +6    # if (x < 0) goto <75:cond_true>
A7 00 0B # goto +11        # goto <76:cond_false>
# <75:cond_true>
10 00    # bipush 0        # 
15 00    # vload 0         # x
64       # isub            # -(x)
A7 00 05 # goto +5         # goto <77:cond_end>
# <76:cond_false>
15 00    # vload 0         # x
# <77:cond_end>
9F 00 06 # if_cmpeq +6     # if (_result == ((x < 0) ? -(x) : x)) goto <72:cond_true>
A7 00 08 # goto +8         # goto <73:cond_false>
# <72:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <74:cond_end>
# <73:cond_false>
10 00    # bipush 0        # false
# <74:cond_end>
14 04 E2 # aldc 1250       # s[1250] = "/afs/andrew/course/15/122/lib/util.h0:19.6-19.42: @ensures annotation failed"
CF       # assert          # assert(_result == ((x < 0) ? -(x) : x)) [failure message on stack]
15 02    # vload 2         # _result
B0       # return          # 


#<max>
00 03             # number of arguments = 3
00 0C             # number of local variables = 12
00 5E             # code length = 94 bytes
15 00    # vload 0         # x
15 01    # vload 1         # y
A3 00 06 # if_icmpgt +6    # if (x > y) goto <160:cond_true>
A7 00 08 # goto +8         # goto <161:cond_false>
# <160:cond_true>
15 00    # vload 0         # x
A7 00 05 # goto +5         # goto <162:cond_end>
# <161:cond_false>
15 01    # vload 1         # y
# <162:cond_end>
36 03    # vstore 3        # _result = ((x > y) ? x : y);
15 03    # vload 3         # _result
15 00    # vload 0         # x
9F 00 06 # if_cmpeq +6     # if (_result == x) goto <163:cond_true>
A7 00 08 # goto +8         # goto <164:cond_false>
# <163:cond_true>
10 01    # bipush 1        # true
A7 00 14 # goto +20        # goto <165:cond_end>
# <164:cond_false>
15 03    # vload 3         # _result
15 01    # vload 1         # y
9F 00 06 # if_cmpeq +6     # if (_result == y) goto <166:cond_true>
A7 00 08 # goto +8         # goto <167:cond_false>
# <166:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <168:cond_end>
# <167:cond_false>
10 00    # bipush 0        # false
# <168:cond_end>
# <165:cond_end>
14 0C 7A # aldc 3194       # s[3194] = "/afs/andrew/course/15/122/lib/util.c0:13.4-13.41: @ensures annotation failed"
CF       # assert          # assert((_result == x) || (_result == y)) [failure message on stack]
15 03    # vload 3         # _result
15 00    # vload 0         # x
A2 00 06 # if_icmpge +6    # if (_result >= x) goto <169:cond_true>
A7 00 17 # goto +23        # goto <170:cond_false>
# <169:cond_true>
15 03    # vload 3         # _result
15 01    # vload 1         # y
A2 00 06 # if_icmpge +6    # if (_result >= y) goto <172:cond_true>
A7 00 08 # goto +8         # goto <173:cond_false>
# <172:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <174:cond_end>
# <173:cond_false>
10 00    # bipush 0        # false
# <174:cond_end>
A7 00 05 # goto +5         # goto <171:cond_end>
# <170:cond_false>
10 00    # bipush 0        # false
# <171:cond_end>
14 0C C7 # aldc 3271       # s[3271] = "/afs/andrew/course/15/122/lib/util.c0:14.4-14.41: @ensures annotation failed"
CF       # assert          # assert((_result >= x) && (_result >= y)) [failure message on stack]
15 03    # vload 3         # _result
B0       # return          # 


#<max__1>
00 03             # number of arguments = 3
00 0C             # number of local variables = 12
00 57             # code length = 87 bytes
15 00    # vload 0         # x
15 01    # vload 1         # y
14 05 2F # aldc 1327       # s[1327] = "/afs/andrew/course/15/122/lib/util.h0:22.1-24.49"
B8 00 0E # invokestatic 14 # max(x, y, "/afs/andrew/course/15/122/lib/util.h0:22.1-24.49")
36 03    # vstore 3        # _result = max(x, y, "/afs/andrew/course/15/122/lib/util.h0:22.1-24.49");
15 03    # vload 3         # _result
15 00    # vload 0         # x
9F 00 06 # if_cmpeq +6     # if (_result == x) goto <78:cond_true>
A7 00 08 # goto +8         # goto <79:cond_false>
# <78:cond_true>
10 01    # bipush 1        # true
A7 00 14 # goto +20        # goto <80:cond_end>
# <79:cond_false>
15 03    # vload 3         # _result
15 01    # vload 1         # y
9F 00 06 # if_cmpeq +6     # if (_result == y) goto <81:cond_true>
A7 00 08 # goto +8         # goto <82:cond_false>
# <81:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <83:cond_end>
# <82:cond_false>
10 00    # bipush 0        # false
# <83:cond_end>
# <80:cond_end>
14 05 60 # aldc 1376       # s[1376] = "/afs/andrew/course/15/122/lib/util.h0:23.6-23.43: @ensures annotation failed"
CF       # assert          # assert((_result == x) || (_result == y)) [failure message on stack]
15 03    # vload 3         # _result
15 00    # vload 0         # x
A2 00 06 # if_icmpge +6    # if (_result >= x) goto <84:cond_true>
A7 00 17 # goto +23        # goto <85:cond_false>
# <84:cond_true>
15 03    # vload 3         # _result
15 01    # vload 1         # y
A2 00 06 # if_icmpge +6    # if (_result >= y) goto <87:cond_true>
A7 00 08 # goto +8         # goto <88:cond_false>
# <87:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <89:cond_end>
# <88:cond_false>
10 00    # bipush 0        # false
# <89:cond_end>
A7 00 05 # goto +5         # goto <86:cond_end>
# <85:cond_false>
10 00    # bipush 0        # false
# <86:cond_end>
14 05 AD # aldc 1453       # s[1453] = "/afs/andrew/course/15/122/lib/util.h0:24.6-24.43: @ensures annotation failed"
CF       # assert          # assert((_result >= x) && (_result >= y)) [failure message on stack]
15 03    # vload 3         # _result
B0       # return          # 


#<min>
00 03             # number of arguments = 3
00 0C             # number of local variables = 12
00 5E             # code length = 94 bytes
15 00    # vload 0         # x
15 01    # vload 1         # y
A3 00 06 # if_icmpgt +6    # if (x > y) goto <175:cond_true>
A7 00 08 # goto +8         # goto <176:cond_false>
# <175:cond_true>
15 01    # vload 1         # y
A7 00 05 # goto +5         # goto <177:cond_end>
# <176:cond_false>
15 00    # vload 0         # x
# <177:cond_end>
36 03    # vstore 3        # _result = ((x > y) ? y : x);
15 03    # vload 3         # _result
15 00    # vload 0         # x
9F 00 06 # if_cmpeq +6     # if (_result == x) goto <178:cond_true>
A7 00 08 # goto +8         # goto <179:cond_false>
# <178:cond_true>
10 01    # bipush 1        # true
A7 00 14 # goto +20        # goto <180:cond_end>
# <179:cond_false>
15 03    # vload 3         # _result
15 01    # vload 1         # y
9F 00 06 # if_cmpeq +6     # if (_result == y) goto <181:cond_true>
A7 00 08 # goto +8         # goto <182:cond_false>
# <181:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <183:cond_end>
# <182:cond_false>
10 00    # bipush 0        # false
# <183:cond_end>
# <180:cond_end>
14 0D 14 # aldc 3348       # s[3348] = "/afs/andrew/course/15/122/lib/util.c0:21.4-21.41: @ensures annotation failed"
CF       # assert          # assert((_result == x) || (_result == y)) [failure message on stack]
15 03    # vload 3         # _result
15 00    # vload 0         # x
A4 00 06 # if_icmple +6    # if (_result <= x) goto <184:cond_true>
A7 00 17 # goto +23        # goto <185:cond_false>
# <184:cond_true>
15 03    # vload 3         # _result
15 01    # vload 1         # y
A4 00 06 # if_icmple +6    # if (_result <= y) goto <187:cond_true>
A7 00 08 # goto +8         # goto <188:cond_false>
# <187:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <189:cond_end>
# <188:cond_false>
10 00    # bipush 0        # false
# <189:cond_end>
A7 00 05 # goto +5         # goto <186:cond_end>
# <185:cond_false>
10 00    # bipush 0        # false
# <186:cond_end>
14 0D 61 # aldc 3425       # s[3425] = "/afs/andrew/course/15/122/lib/util.c0:22.4-22.41: @ensures annotation failed"
CF       # assert          # assert((_result <= x) && (_result <= y)) [failure message on stack]
15 03    # vload 3         # _result
B0       # return          # 


#<min__1>
00 03             # number of arguments = 3
00 0C             # number of local variables = 12
00 57             # code length = 87 bytes
15 00    # vload 0         # x
15 01    # vload 1         # y
14 05 FA # aldc 1530       # s[1530] = "/afs/andrew/course/15/122/lib/util.h0:27.1-29.49"
B8 00 10 # invokestatic 16 # min(x, y, "/afs/andrew/course/15/122/lib/util.h0:27.1-29.49")
36 03    # vstore 3        # _result = min(x, y, "/afs/andrew/course/15/122/lib/util.h0:27.1-29.49");
15 03    # vload 3         # _result
15 00    # vload 0         # x
9F 00 06 # if_cmpeq +6     # if (_result == x) goto <90:cond_true>
A7 00 08 # goto +8         # goto <91:cond_false>
# <90:cond_true>
10 01    # bipush 1        # true
A7 00 14 # goto +20        # goto <92:cond_end>
# <91:cond_false>
15 03    # vload 3         # _result
15 01    # vload 1         # y
9F 00 06 # if_cmpeq +6     # if (_result == y) goto <93:cond_true>
A7 00 08 # goto +8         # goto <94:cond_false>
# <93:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <95:cond_end>
# <94:cond_false>
10 00    # bipush 0        # false
# <95:cond_end>
# <92:cond_end>
14 06 2B # aldc 1579       # s[1579] = "/afs/andrew/course/15/122/lib/util.h0:28.6-28.43: @ensures annotation failed"
CF       # assert          # assert((_result == x) || (_result == y)) [failure message on stack]
15 03    # vload 3         # _result
15 00    # vload 0         # x
A4 00 06 # if_icmple +6    # if (_result <= x) goto <96:cond_true>
A7 00 17 # goto +23        # goto <97:cond_false>
# <96:cond_true>
15 03    # vload 3         # _result
15 01    # vload 1         # y
A4 00 06 # if_icmple +6    # if (_result <= y) goto <99:cond_true>
A7 00 08 # goto +8         # goto <100:cond_false>
# <99:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <101:cond_end>
# <100:cond_false>
10 00    # bipush 0        # false
# <101:cond_end>
A7 00 05 # goto +5         # goto <98:cond_end>
# <97:cond_false>
10 00    # bipush 0        # false
# <98:cond_end>
14 06 78 # aldc 1656       # s[1656] = "/afs/andrew/course/15/122/lib/util.h0:29.6-29.43: @ensures annotation failed"
CF       # assert          # assert((_result <= x) && (_result <= y)) [failure message on stack]
15 03    # vload 3         # _result
B0       # return          # 


#<int2hex>
00 02             # number of arguments = 2
00 0C             # number of local variables = 12
00 AB             # code length = 171 bytes
10 02    # bipush 2        # 2
14 0F B7 # aldc 4023       # s[4023] = "/afs/andrew/course/15/122/lib/util.c0:51.18-51.28"
B8 00 07 # invokestatic 7  # int_size__1("/afs/andrew/course/15/122/lib/util.c0:51.18-51.28")
68       # imul            # (2 * int_size__1("/afs/andrew/course/15/122/lib/util.c0:51.18-51.28"))
36 03    # vstore 3        # digits = (2 * int_size__1("/afs/andrew/course/15/122/lib/util.c0:51.18-51.28"));
15 03    # vload 3         # digits
10 01    # bipush 1        # 1
60       # iadd            # (digits + 1)
BC 01    # newarray 1      # alloc_array(char, (digits + 1))
36 04    # vstore 4        # s = alloc_array(char, (digits + 1));
15 04    # vload 4         # s
15 03    # vload 3         # digits
63       # aadds           # &s[digits]
10 00    # bipush 0        # '\000'
55       # cmstore         # s[digits] = '\0';
10 00    # bipush 0        # 0
36 05    # vstore 5        # i = 0;
# <213:loop>
A7 00 03 # goto +3         # goto <214:body>
# <214:body>
10 00    # bipush 0        # 0
15 05    # vload 5         # i
A4 00 06 # if_icmple +6    # if (0 <= i) goto <216:cond_true>
A7 00 17 # goto +23        # goto <217:cond_false>
# <216:cond_true>
15 05    # vload 5         # i
15 03    # vload 3         # digits
A4 00 06 # if_icmple +6    # if (i <= digits) goto <219:cond_true>
A7 00 08 # goto +8         # goto <220:cond_false>
# <219:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <221:cond_end>
# <220:cond_false>
10 00    # bipush 0        # false
# <221:cond_end>
A7 00 05 # goto +5         # goto <218:cond_end>
# <217:cond_false>
10 00    # bipush 0        # false
# <218:cond_end>
14 0F E9 # aldc 4073       # s[4073] = "/afs/andrew/course/15/122/lib/util.c0:55.8-55.45: @loop_invariant annotation failed"
CF       # assert          # assert((0 <= i) && (i <= digits)) [failure message on stack]
15 05    # vload 5         # i
15 03    # vload 3         # digits
A1 00 06 # if_icmplt +6    # if (i < digits) goto <222:then>
A7 00 2B # goto +43        # goto <223:else>
# <222:then>
15 04    # vload 4         # s
15 03    # vload 3         # digits
15 05    # vload 5         # i
64       # isub            # (digits - i)
10 01    # bipush 1        # 1
64       # isub            # ((digits - i) - 1)
63       # aadds           # &s[((digits - i) - 1)]
15 00    # vload 0         # x
10 0F    # bipush 15       # 15
7E       # iand            # (x & 15)
14 10 3D # aldc 4157       # s[4157] = "/afs/andrew/course/15/122/lib/util.c0:57.23-57.43"
B8 00 1D # invokestatic 29 # hexdig2char((x & 15), "/afs/andrew/course/15/122/lib/util.c0:57.23-57.43")
55       # cmstore         # s[((digits - i) - 1)] = hexdig2char((x & 15), "/afs/andrew/course/15/122/lib/util.c0:57.23-57.43");
15 00    # vload 0         # x
10 04    # bipush 4        # 4
7A       # ishr            # (x >> 4)
36 00    # vstore 0        # x = (x >> 4);
15 05    # vload 5         # i
10 01    # bipush 1        # 1
60       # iadd            # 
36 05    # vstore 5        # i += 1;
A7 00 06 # goto +6         # goto <224:endif>
# <223:else>
A7 00 06 # goto +6         # break
# <224:endif>
A7 FF A4 # goto -92        # goto <213:loop>
# <215:exit>
15 04    # vload 4         # s
14 10 6F # aldc 4207       # s[4207] = "/afs/andrew/course/15/122/lib/util.c0:60.10-60.34"
B8 00 1A # invokestatic 26 # string_from_chararray__1(s, "/afs/andrew/course/15/122/lib/util.c0:60.10-60.34")
36 02    # vstore 2        # _result = string_from_chararray__1(s, "/afs/andrew/course/15/122/lib/util.c0:60.10-60.34");
15 02    # vload 2         # _result
B7 00 01 # invokenative 1  # string_length(_result)
10 02    # bipush 2        # 2
14 10 A1 # aldc 4257       # s[4257] = "/afs/andrew/course/15/122/lib/util.c0:49.40-49.50"
B8 00 07 # invokestatic 7  # int_size__1("/afs/andrew/course/15/122/lib/util.c0:49.40-49.50")
68       # imul            # (2 * int_size__1("/afs/andrew/course/15/122/lib/util.c0:49.40-49.50"))
9F 00 06 # if_cmpeq +6     # if (string_length(_result) == (2 * int_size__1("/afs/andrew/course/15/122/lib/util.c0:49.40-49.50"))) goto <225:cond_true>
A7 00 08 # goto +8         # goto <226:cond_false>
# <225:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <227:cond_end>
# <226:cond_false>
10 00    # bipush 0        # false
# <227:cond_end>
14 10 D3 # aldc 4307       # s[4307] = "/afs/andrew/course/15/122/lib/util.c0:49.4-49.51: @ensures annotation failed"
CF       # assert          # assert(string_length(_result) == (2 * int_size__1("/afs/andrew/course/15/122/lib/util.c0:49.40-49.50"))) [failure message on stack]
15 02    # vload 2         # _result
B0       # return          # 


#<string_charat__1>
00 03             # number of arguments = 3
00 0C             # number of local variables = 12
00 3E             # code length = 62 bytes
10 00    # bipush 0        # 0
15 01    # vload 1         # idx
A4 00 06 # if_icmple +6    # if (0 <= idx) goto <102:cond_true>
A7 00 1A # goto +26        # goto <103:cond_false>
# <102:cond_true>
15 01    # vload 1         # idx
15 00    # vload 0         # s
B7 00 01 # invokenative 1  # string_length(s)
A1 00 06 # if_icmplt +6    # if (idx < string_length(s)) goto <105:cond_true>
A7 00 08 # goto +8         # goto <106:cond_false>
# <105:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <107:cond_end>
# <106:cond_false>
10 00    # bipush 0        # false
# <107:cond_end>
A7 00 05 # goto +5         # goto <104:cond_end>
# <103:cond_false>
10 00    # bipush 0        # false
# <104:cond_end>
14 06 C5 # aldc 1733       # s[1733] = "/afs/andrew/course/15/122/lib/string.h0:19.6-19.50: @requires annotation failed\n"
15 02    # vload 2         # _caller
14 07 16 # aldc 1814       # s[1814] = ": caller location"
B7 00 00 # invokenative 0  # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0  # string_join("/afs/andrew/course/15/122/lib/string.h0:19.6-19.50: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert((0 <= idx) && (idx < string_length(s))) [failure message on stack]
15 00    # vload 0         # s
15 01    # vload 1         # idx
B7 00 02 # invokenative 2  # string_charat(s, idx)
36 03    # vstore 3        # _result = string_charat(s, idx);
15 03    # vload 3         # _result
B0       # return          # 


#<string_join__1>
00 03             # number of arguments = 3
00 0C             # number of local variables = 12
00 2D             # code length = 45 bytes
15 00    # vload 0         # a
15 01    # vload 1         # b
B7 00 00 # invokenative 0  # string_join(a, b)
36 03    # vstore 3        # _result = string_join(a, b);
15 03    # vload 3         # _result
B7 00 01 # invokenative 1  # string_length(_result)
15 00    # vload 0         # a
B7 00 01 # invokenative 1  # string_length(a)
15 01    # vload 1         # b
B7 00 01 # invokenative 1  # string_length(b)
60       # iadd            # (string_length(a) + string_length(b))
9F 00 06 # if_cmpeq +6     # if (string_length(_result) == (string_length(a) + string_length(b))) goto <108:cond_true>
A7 00 08 # goto +8         # goto <109:cond_false>
# <108:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <110:cond_end>
# <109:cond_false>
10 00    # bipush 0        # false
# <110:cond_end>
14 07 28 # aldc 1832       # s[1832] = "/afs/andrew/course/15/122/lib/string.h0:23.6-24.55: @ensures annotation failed"
CF       # assert          # assert(string_length(_result) == (string_length(a) + string_length(b))) [failure message on stack]
15 03    # vload 3         # _result
B0       # return          # 


#<string_sub__1>
00 04             # number of arguments = 4
00 0C             # number of local variables = 12
00 65             # code length = 101 bytes
10 00    # bipush 0        # 0
15 01    # vload 1         # start
A4 00 06 # if_icmple +6    # if (0 <= start) goto <114:and>
A7 00 24 # goto +36        # goto <112:cond_false>
# <114:and>
15 01    # vload 1         # start
15 02    # vload 2         # end
A4 00 06 # if_icmple +6    # if (start <= end) goto <111:cond_true>
A7 00 1A # goto +26        # goto <112:cond_false>
# <111:cond_true>
15 02    # vload 2         # end
15 00    # vload 0         # a
B7 00 01 # invokenative 1  # string_length(a)
A4 00 06 # if_icmple +6    # if (end <= string_length(a)) goto <115:cond_true>
A7 00 08 # goto +8         # goto <116:cond_false>
# <115:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <117:cond_end>
# <116:cond_false>
10 00    # bipush 0        # false
# <117:cond_end>
A7 00 05 # goto +5         # goto <113:cond_end>
# <112:cond_false>
10 00    # bipush 0        # false
# <113:cond_end>
14 07 77 # aldc 1911       # s[1911] = "/afs/andrew/course/15/122/lib/string.h0:31.6-31.69: @requires annotation failed\n"
15 03    # vload 3         # _caller
14 07 C8 # aldc 1992       # s[1992] = ": caller location"
B7 00 00 # invokenative 0  # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0  # string_join("/afs/andrew/course/15/122/lib/string.h0:31.6-31.69: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert(((0 <= start) && (start <= end)) && (end <= string_length(a))) [failure message on stack]
15 00    # vload 0         # a
15 01    # vload 1         # start
15 02    # vload 2         # end
B7 00 03 # invokenative 3  # string_sub(a, start, end)
36 04    # vstore 4        # _result = string_sub(a, start, end);
15 04    # vload 4         # _result
B7 00 01 # invokenative 1  # string_length(_result)
15 02    # vload 2         # end
15 01    # vload 1         # start
64       # isub            # (end - start)
9F 00 06 # if_cmpeq +6     # if (string_length(_result) == (end - start)) goto <118:cond_true>
A7 00 08 # goto +8         # goto <119:cond_false>
# <118:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <120:cond_end>
# <119:cond_false>
10 00    # bipush 0        # false
# <120:cond_end>
14 07 DA # aldc 2010       # s[2010] = "/afs/andrew/course/15/122/lib/string.h0:32.6-32.52: @ensures annotation failed"
CF       # assert          # assert(string_length(_result) == (end - start)) [failure message on stack]
15 04    # vload 4         # _result
B0       # return          # 


#<string_compare__1>
00 03             # number of arguments = 3
00 0C             # number of local variables = 12
00 30             # code length = 48 bytes
15 00    # vload 0         # a
15 01    # vload 1         # b
B7 00 04 # invokenative 4  # string_compare(a, b)
36 03    # vstore 3        # _result = string_compare(a, b);
10 FF    # bipush -1       # -1
15 03    # vload 3         # _result
A4 00 06 # if_icmple +6    # if (-(1) <= _result) goto <121:cond_true>
A7 00 17 # goto +23        # goto <122:cond_false>
# <121:cond_true>
15 03    # vload 3         # _result
10 01    # bipush 1        # 1
A4 00 06 # if_icmple +6    # if (_result <= 1) goto <124:cond_true>
A7 00 08 # goto +8         # goto <125:cond_false>
# <124:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <126:cond_end>
# <125:cond_false>
10 00    # bipush 0        # false
# <126:cond_end>
A7 00 05 # goto +5         # goto <123:cond_end>
# <122:cond_false>
10 00    # bipush 0        # false
# <123:cond_end>
14 08 29 # aldc 2089       # s[2089] = "/afs/andrew/course/15/122/lib/string.h0:37.6-37.44: @ensures annotation failed"
CF       # assert          # assert((-(1) <= _result) && (_result <= 1)) [failure message on stack]
15 03    # vload 3         # _result
B0       # return          # 


#<string_fromchar__1>
00 02             # number of arguments = 2
00 0C             # number of local variables = 12
00 5F             # code length = 95 bytes
15 00    # vload 0         # c
10 00    # bipush 0        # '\000'
A0 00 06 # if_cmpne +6     # if (c != '\0') goto <127:cond_true>
A7 00 08 # goto +8         # goto <128:cond_false>
# <127:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <129:cond_end>
# <128:cond_false>
10 00    # bipush 0        # false
# <129:cond_end>
14 08 78 # aldc 2168       # s[2168] = "/afs/andrew/course/15/122/lib/string.h0:43.6-43.25: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 08 C9 # aldc 2249       # s[2249] = ": caller location"
B7 00 00 # invokenative 0  # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0  # string_join("/afs/andrew/course/15/122/lib/string.h0:43.6-43.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert(c != '\0') [failure message on stack]
15 00    # vload 0         # c
B7 00 05 # invokenative 5  # string_fromchar(c)
36 02    # vstore 2        # _result = string_fromchar(c);
15 02    # vload 2         # _result
B7 00 01 # invokenative 1  # string_length(_result)
10 01    # bipush 1        # 1
9F 00 06 # if_cmpeq +6     # if (string_length(_result) == 1) goto <130:cond_true>
A7 00 08 # goto +8         # goto <131:cond_false>
# <130:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <132:cond_end>
# <131:cond_false>
10 00    # bipush 0        # false
# <132:cond_end>
14 08 DB # aldc 2267       # s[2267] = "/afs/andrew/course/15/122/lib/string.h0:44.6-44.42: @ensures annotation failed"
CF       # assert          # assert(string_length(_result) == 1) [failure message on stack]
15 02    # vload 2         # _result
10 00    # bipush 0        # 0
14 09 2A # aldc 2346       # s[2346] = "/afs/andrew/course/15/122/lib/string.h0:45.14-45.39"
B8 00 13 # invokestatic 19 # string_charat__1(_result, 0, "/afs/andrew/course/15/122/lib/string.h0:45.14-45.39")
15 00    # vload 0         # c
9F 00 06 # if_cmpeq +6     # if (string_charat__1(_result, 0, "/afs/andrew/course/15/122/lib/string.h0:45.14-45.39") == c) goto <133:cond_true>
A7 00 08 # goto +8         # goto <134:cond_false>
# <133:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <135:cond_end>
# <134:cond_false>
10 00    # bipush 0        # false
# <135:cond_end>
14 09 5E # aldc 2398       # s[2398] = "/afs/andrew/course/15/122/lib/string.h0:45.6-45.45: @ensures annotation failed"
CF       # assert          # assert(string_charat__1(_result, 0, "/afs/andrew/course/15/122/lib/string.h0:45.14-45.39") == c) [failure message on stack]
15 02    # vload 2         # _result
B0       # return          # 


#<string_terminated__1>
00 03             # number of arguments = 3
00 0C             # number of local variables = 12
00 3C             # code length = 60 bytes
10 00    # bipush 0        # 0
15 01    # vload 1         # n
A4 00 06 # if_icmple +6    # if (0 <= n) goto <136:cond_true>
A7 00 18 # goto +24        # goto <137:cond_false>
# <136:cond_true>
15 01    # vload 1         # n
15 00    # vload 0         # A
BE       # arraylength     # \length(A)
A4 00 06 # if_icmple +6    # if (n <= \length(A)) goto <139:cond_true>
A7 00 08 # goto +8         # goto <140:cond_false>
# <139:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <141:cond_end>
# <140:cond_false>
10 00    # bipush 0        # false
# <141:cond_end>
A7 00 05 # goto +5         # goto <138:cond_end>
# <137:cond_false>
10 00    # bipush 0        # false
# <138:cond_end>
14 09 AD # aldc 2477       # s[2477] = "/afs/andrew/course/15/122/lib/string.h0:52.6-52.41: @requires annotation failed\n"
15 02    # vload 2         # _caller
14 09 FE # aldc 2558       # s[2558] = ": caller location"
B7 00 00 # invokenative 0  # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0  # string_join("/afs/andrew/course/15/122/lib/string.h0:52.6-52.41: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert((0 <= n) && (n <= \length(A))) [failure message on stack]
15 00    # vload 0         # A
15 01    # vload 1         # n
B7 00 06 # invokenative 6  # string_terminated(A, n)
36 03    # vstore 3        # _result = string_terminated(A, n);
15 03    # vload 3         # _result
B0       # return          # 


#<string_to_chararray__1>
00 02             # number of arguments = 2
00 0C             # number of local variables = 12
00 3A             # code length = 58 bytes
15 00    # vload 0         # s
B7 00 07 # invokenative 7  # string_to_chararray(s)
36 02    # vstore 2        # _result = string_to_chararray(s);
15 02    # vload 2         # _result
BE       # arraylength     # \length(_result)
15 00    # vload 0         # s
B7 00 01 # invokenative 1  # string_length(s)
10 01    # bipush 1        # 1
60       # iadd            # (string_length(s) + 1)
A2 00 06 # if_icmpge +6    # if (\length(_result) >= (string_length(s) + 1)) goto <142:cond_true>
A7 00 08 # goto +8         # goto <143:cond_false>
# <142:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <144:cond_end>
# <143:cond_false>
10 00    # bipush 0        # false
# <144:cond_end>
14 0A 10 # aldc 2576       # s[2576] = "/afs/andrew/course/15/122/lib/string.h0:56.6-56.55: @ensures annotation failed"
CF       # assert          # assert(\length(_result) >= (string_length(s) + 1)) [failure message on stack]
15 02    # vload 2         # _result
15 00    # vload 0         # s
B7 00 01 # invokenative 1  # string_length(s)
10 01    # bipush 1        # 1
60       # iadd            # (string_length(s) + 1)
14 0A 5F # aldc 2655       # s[2655] = "/afs/andrew/course/15/122/lib/string.h0:57.14-57.62"
B8 00 18 # invokestatic 24 # string_terminated__1(_result, (string_length(s) + 1), "/afs/andrew/course/15/122/lib/string.h0:57.14-57.62")
14 0A 93 # aldc 2707       # s[2707] = "/afs/andrew/course/15/122/lib/string.h0:57.6-57.63: @ensures annotation failed"
CF       # assert          # assertstring_terminated__1(_result, (string_length(s) + 1), "/afs/andrew/course/15/122/lib/string.h0:57.14-57.62") [failure message on stack]
15 02    # vload 2         # _result
B0       # return          # 


#<string_from_chararray__1>
00 02             # number of arguments = 2
00 0C             # number of local variables = 12
00 40             # code length = 64 bytes
15 00    # vload 0         # A
15 00    # vload 0         # A
BE       # arraylength     # \length(A)
14 0A E2 # aldc 2786       # s[2786] = "/afs/andrew/course/15/122/lib/string.h0:62.15-62.47"
B8 00 18 # invokestatic 24 # string_terminated__1(A, \length(A), "/afs/andrew/course/15/122/lib/string.h0:62.15-62.47")
14 0B 16 # aldc 2838       # s[2838] = "/afs/andrew/course/15/122/lib/string.h0:62.6-62.48: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 0B 67 # aldc 2919       # s[2919] = ": caller location"
B7 00 00 # invokenative 0  # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0  # string_join("/afs/andrew/course/15/122/lib/string.h0:62.6-62.48: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assertstring_terminated__1(A, \length(A), "/afs/andrew/course/15/122/lib/string.h0:62.15-62.47") [failure message on stack]
15 00    # vload 0         # A
B7 00 08 # invokenative 8  # string_from_chararray(A)
36 02    # vstore 2        # _result = string_from_chararray(A);
15 02    # vload 2         # _result
B7 00 01 # invokenative 1  # string_length(_result)
10 01    # bipush 1        # 1
60       # iadd            # (string_length(_result) + 1)
15 00    # vload 0         # A
BE       # arraylength     # \length(A)
A4 00 06 # if_icmple +6    # if ((string_length(_result) + 1) <= \length(A)) goto <145:cond_true>
A7 00 08 # goto +8         # goto <146:cond_false>
# <145:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <147:cond_end>
# <146:cond_false>
10 00    # bipush 0        # false
# <147:cond_end>
14 0B 79 # aldc 2937       # s[2937] = "/afs/andrew/course/15/122/lib/string.h0:63.6-63.55: @ensures annotation failed"
CF       # assert          # assert((string_length(_result) + 1) <= \length(A)) [failure message on stack]
15 02    # vload 2         # _result
B0       # return          # 


#<char_ord__1>
00 02             # number of arguments = 2
00 0C             # number of local variables = 12
00 2E             # code length = 46 bytes
15 00    # vload 0         # c
B7 00 09 # invokenative 9  # char_ord(c)
36 02    # vstore 2        # _result = char_ord(c);
10 00    # bipush 0        # 0
15 02    # vload 2         # _result
A4 00 06 # if_icmple +6    # if (0 <= _result) goto <148:cond_true>
A7 00 17 # goto +23        # goto <149:cond_false>
# <148:cond_true>
15 02    # vload 2         # _result
10 7F    # bipush 127      # 127
A4 00 06 # if_icmple +6    # if (_result <= 127) goto <151:cond_true>
A7 00 08 # goto +8         # goto <152:cond_false>
# <151:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <153:cond_end>
# <152:cond_false>
10 00    # bipush 0        # false
# <153:cond_end>
A7 00 05 # goto +5         # goto <150:cond_end>
# <149:cond_false>
10 00    # bipush 0        # false
# <150:cond_end>
14 0B C8 # aldc 3016       # s[3016] = "/afs/andrew/course/15/122/lib/string.h0:67.6-67.45: @ensures annotation failed"
CF       # assert          # assert((0 <= _result) && (_result <= 127)) [failure message on stack]
15 02    # vload 2         # _result
B0       # return          # 


#<char_chr__1>
00 02             # number of arguments = 2
00 0C             # number of local variables = 12
00 39             # code length = 57 bytes
10 00    # bipush 0        # 0
15 00    # vload 0         # n
A4 00 06 # if_icmple +6    # if (0 <= n) goto <154:cond_true>
A7 00 17 # goto +23        # goto <155:cond_false>
# <154:cond_true>
15 00    # vload 0         # n
10 7F    # bipush 127      # 127
A4 00 06 # if_icmple +6    # if (n <= 127) goto <157:cond_true>
A7 00 08 # goto +8         # goto <158:cond_false>
# <157:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <159:cond_end>
# <158:cond_false>
10 00    # bipush 0        # false
# <159:cond_end>
A7 00 05 # goto +5         # goto <156:cond_end>
# <155:cond_false>
10 00    # bipush 0        # false
# <156:cond_end>
14 0C 17 # aldc 3095       # s[3095] = "/afs/andrew/course/15/122/lib/string.h0:69.6-69.34: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 0C 68 # aldc 3176       # s[3176] = ": caller location"
B7 00 00 # invokenative 0  # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0  # string_join("/afs/andrew/course/15/122/lib/string.h0:69.6-69.34: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert((0 <= n) && (n <= 127)) [failure message on stack]
15 00    # vload 0         # n
B7 00 0A # invokenative 10 # char_chr(n)
36 02    # vstore 2        # _result = char_chr(n);
15 02    # vload 2         # _result
B0       # return          # 


#<hexdig2char>
00 02             # number of arguments = 2
00 0C             # number of local variables = 12
00 93             # code length = 147 bytes
10 00    # bipush 0        # 0
15 00    # vload 0         # d
A4 00 06 # if_icmple +6    # if (0 <= d) goto <199:cond_true>
A7 00 17 # goto +23        # goto <200:cond_false>
# <199:cond_true>
15 00    # vload 0         # d
10 10    # bipush 16       # 16
A1 00 06 # if_icmplt +6    # if (d < 16) goto <202:cond_true>
A7 00 08 # goto +8         # goto <203:cond_false>
# <202:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <204:cond_end>
# <203:cond_false>
10 00    # bipush 0        # false
# <204:cond_end>
A7 00 05 # goto +5         # goto <201:cond_end>
# <200:cond_false>
10 00    # bipush 0        # false
# <201:cond_end>
14 0E 8E # aldc 3726       # s[3726] = "/afs/andrew/course/15/122/lib/util.c0:37.4-37.30: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 0E DD # aldc 3805       # s[3805] = ": caller location"
B7 00 00 # invokenative 0  # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0  # string_join("/afs/andrew/course/15/122/lib/util.c0:37.4-37.30: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert((0 <= d) && (d < 16)) [failure message on stack]
10 00    # bipush 0        # 0
15 00    # vload 0         # d
A4 00 06 # if_icmple +6    # if (0 <= d) goto <208:and>
A7 00 26 # goto +38        # goto <206:else>
# <208:and>
15 00    # vload 0         # d
10 0A    # bipush 10       # 10
A1 00 06 # if_icmplt +6    # if (d < 10) goto <205:then>
A7 00 1C # goto +28        # goto <206:else>
# <205:then>
10 30    # bipush 48       # '0'
14 0E EF # aldc 3823       # s[3823] = "/afs/andrew/course/15/122/lib/util.c0:40.21-40.34"
B8 00 1B # invokestatic 27 # char_ord__1('0', "/afs/andrew/course/15/122/lib/util.c0:40.21-40.34")
15 00    # vload 0         # d
60       # iadd            # (char_ord__1('0', "/afs/andrew/course/15/122/lib/util.c0:40.21-40.34") + d)
14 0F 21 # aldc 3873       # s[3873] = "/afs/andrew/course/15/122/lib/util.c0:40.12-40.39"
B8 00 1C # invokestatic 28 # char_chr__1((char_ord__1('0', "/afs/andrew/course/15/122/lib/util.c0:40.21-40.34") + d), "/afs/andrew/course/15/122/lib/util.c0:40.12-40.39")
36 02    # vstore 2        # _result = char_chr__1((char_ord__1('0', "/afs/andrew/course/15/122/lib/util.c0:40.21-40.34") + d), "/afs/andrew/course/15/122/lib/util.c0:40.12-40.39");
15 02    # vload 2         # _result
B0       # return          # 
A7 00 3A # goto +58        # goto <207:endif>
# <206:else>
10 0A    # bipush 10       # 10
15 00    # vload 0         # d
A4 00 06 # if_icmple +6    # if (10 <= d) goto <212:and>
A7 00 29 # goto +41        # goto <210:else>
# <212:and>
15 00    # vload 0         # d
10 10    # bipush 16       # 16
A1 00 06 # if_icmplt +6    # if (d < 16) goto <209:then>
A7 00 1F # goto +31        # goto <210:else>
# <209:then>
10 41    # bipush 65       # 'A'
14 0F 53 # aldc 3923       # s[3923] = "/afs/andrew/course/15/122/lib/util.c0:42.21-42.34"
B8 00 1B # invokestatic 27 # char_ord__1('A', "/afs/andrew/course/15/122/lib/util.c0:42.21-42.34")
15 00    # vload 0         # d
10 0A    # bipush 10       # 10
64       # isub            # (d - 10)
60       # iadd            # (char_ord__1('A', "/afs/andrew/course/15/122/lib/util.c0:42.21-42.34") + (d - 10))
14 0F 85 # aldc 3973       # s[3973] = "/afs/andrew/course/15/122/lib/util.c0:42.12-42.44"
B8 00 1C # invokestatic 28 # char_chr__1((char_ord__1('A', "/afs/andrew/course/15/122/lib/util.c0:42.21-42.34") + (d - 10)), "/afs/andrew/course/15/122/lib/util.c0:42.12-42.44")
36 02    # vstore 2        # _result = char_chr__1((char_ord__1('A', "/afs/andrew/course/15/122/lib/util.c0:42.21-42.34") + (d - 10)), "/afs/andrew/course/15/122/lib/util.c0:42.12-42.44");
15 02    # vload 2         # _result
B0       # return          # 
A7 00 0A # goto +10        # goto <211:endif>
# <210:else>
10 3F    # bipush 63       # '\?'
36 02    # vstore 2        # _result = '?';
15 02    # vload 2         # _result
B0       # return          # 
# <211:endif>
# <207:endif>


#<is_valid_imagesize>
00 03             # number of arguments = 3
00 0C             # number of local variables = 12
00 65             # code length = 101 bytes
15 00    # vload 0         # width
10 00    # bipush 0        # 0
A3 00 06 # if_icmpgt +6    # if (width > 0) goto <228:cond_true>
A7 00 17 # goto +23        # goto <229:cond_false>
# <228:cond_true>
15 01    # vload 1         # height
10 00    # bipush 0        # 0
A3 00 06 # if_icmpgt +6    # if (height > 0) goto <231:cond_true>
A7 00 08 # goto +8         # goto <232:cond_false>
# <231:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <233:cond_end>
# <232:cond_false>
10 00    # bipush 0        # false
# <233:cond_end>
A7 00 05 # goto +5         # goto <230:cond_end>
# <229:cond_false>
10 00    # bipush 0        # false
# <230:cond_end>
14 11 20 # aldc 4384       # s[4384] = "imageutil.c0:7.4-7.36: @requires annotation failed\n"
15 02    # vload 2         # _caller
14 11 54 # aldc 4436       # s[4436] = ": caller location"
B7 00 00 # invokenative 0  # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0  # string_join("imageutil.c0:7.4-7.36: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert((width > 0) && (height > 0)) [failure message on stack]
15 00    # vload 0         # width
10 00    # bipush 0        # 0
A3 00 06 # if_icmpgt +6    # if (width > 0) goto <237:and>
A7 00 28 # goto +40        # goto <235:cond_false>
# <237:and>
15 01    # vload 1         # height
10 00    # bipush 0        # 0
A3 00 06 # if_icmpgt +6    # if (height > 0) goto <234:cond_true>
A7 00 1E # goto +30        # goto <235:cond_false>
# <234:cond_true>
15 00    # vload 0         # width
14 11 66 # aldc 4454       # s[4454] = "imageutil.c0:12.17-12.26"
B8 00 09 # invokestatic 9  # int_max__1("imageutil.c0:12.17-12.26")
15 01    # vload 1         # height
6C       # idiv            # (int_max__1("imageutil.c0:12.17-12.26") / height)
A4 00 06 # if_icmple +6    # if (width <= (int_max__1("imageutil.c0:12.17-12.26") / height)) goto <238:cond_true>
A7 00 08 # goto +8         # goto <239:cond_false>
# <238:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <240:cond_end>
# <239:cond_false>
10 00    # bipush 0        # false
# <240:cond_end>
A7 00 05 # goto +5         # goto <236:cond_end>
# <235:cond_false>
10 00    # bipush 0        # false
# <236:cond_end>
36 03    # vstore 3        # _result = (((width > 0) && (height > 0)) && (width <= (int_max__1("imageutil.c0:12.17-12.26") / height)));
15 03    # vload 3         # _result
B0       # return          # 


#<get_row>
00 04             # number of arguments = 4
00 0C             # number of local variables = 12
00 81             # code length = 129 bytes
15 01    # vload 1         # width
15 02    # vload 2         # height
14 11 7F # aldc 4479       # s[4479] = "imageutil.c0:23.13-23.46"
B8 00 1E # invokestatic 30 # is_valid_imagesize(width, height, "imageutil.c0:23.13-23.46")
14 11 98 # aldc 4504       # s[4504] = "imageutil.c0:23.4-23.47: @requires annotation failed\n"
15 03    # vload 3         # _caller
14 11 CE # aldc 4558       # s[4558] = ": caller location"
B7 00 00 # invokenative 0  # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0  # string_join("imageutil.c0:23.4-23.47: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assertis_valid_imagesize(width, height, "imageutil.c0:23.13-23.46") [failure message on stack]
10 00    # bipush 0        # 0
15 00    # vload 0         # index
A4 00 06 # if_icmple +6    # if (0 <= index) goto <241:cond_true>
A7 00 1A # goto +26        # goto <242:cond_false>
# <241:cond_true>
15 00    # vload 0         # index
15 01    # vload 1         # width
15 02    # vload 2         # height
68       # imul            # (width * height)
A1 00 06 # if_icmplt +6    # if (index < (width * height)) goto <244:cond_true>
A7 00 08 # goto +8         # goto <245:cond_false>
# <244:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <246:cond_end>
# <245:cond_false>
10 00    # bipush 0        # false
# <246:cond_end>
A7 00 05 # goto +5         # goto <243:cond_end>
# <242:cond_false>
10 00    # bipush 0        # false
# <243:cond_end>
14 11 E0 # aldc 4576       # s[4576] = "imageutil.c0:24.4-24.51: @requires annotation failed\n"
15 03    # vload 3         # _caller
14 12 16 # aldc 4630       # s[4630] = ": caller location"
B7 00 00 # invokenative 0  # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0  # string_join("imageutil.c0:24.4-24.51: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert((0 <= index) && (index < (width * height))) [failure message on stack]
15 01    # vload 1         # width
36 05    # vstore 5        # num_cols = width;
15 00    # vload 0         # index
15 05    # vload 5         # num_cols
6C       # idiv            # (index / num_cols)
36 06    # vstore 6        # num_rows = (index / num_cols);
15 06    # vload 6         # num_rows
36 04    # vstore 4        # _result = num_rows;
10 00    # bipush 0        # 0
15 04    # vload 4         # _result
A4 00 06 # if_icmple +6    # if (0 <= _result) goto <247:cond_true>
A7 00 17 # goto +23        # goto <248:cond_false>
# <247:cond_true>
15 04    # vload 4         # _result
15 02    # vload 2         # height
A1 00 06 # if_icmplt +6    # if (_result < height) goto <250:cond_true>
A7 00 08 # goto +8         # goto <251:cond_false>
# <250:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <252:cond_end>
# <251:cond_false>
10 00    # bipush 0        # false
# <252:cond_end>
A7 00 05 # goto +5         # goto <249:cond_end>
# <248:cond_false>
10 00    # bipush 0        # false
# <249:cond_end>
14 12 28 # aldc 4648       # s[4648] = "imageutil.c0:25.4-25.45: @ensures annotation failed"
CF       # assert          # assert((0 <= _result) && (_result < height)) [failure message on stack]
15 04    # vload 4         # _result
B0       # return          # 


#<get_column>
00 04             # number of arguments = 4
00 0C             # number of local variables = 12
00 81             # code length = 129 bytes
15 01    # vload 1         # width
15 02    # vload 2         # height
14 12 5C # aldc 4700       # s[4700] = "imageutil.c0:41.13-41.46"
B8 00 1E # invokestatic 30 # is_valid_imagesize(width, height, "imageutil.c0:41.13-41.46")
14 12 75 # aldc 4725       # s[4725] = "imageutil.c0:41.4-41.47: @requires annotation failed\n"
15 03    # vload 3         # _caller
14 12 AB # aldc 4779       # s[4779] = ": caller location"
B7 00 00 # invokenative 0  # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0  # string_join("imageutil.c0:41.4-41.47: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assertis_valid_imagesize(width, height, "imageutil.c0:41.13-41.46") [failure message on stack]
10 00    # bipush 0        # 0
15 00    # vload 0         # index
A4 00 06 # if_icmple +6    # if (0 <= index) goto <253:cond_true>
A7 00 1A # goto +26        # goto <254:cond_false>
# <253:cond_true>
15 00    # vload 0         # index
15 01    # vload 1         # width
15 02    # vload 2         # height
68       # imul            # (width * height)
A1 00 06 # if_icmplt +6    # if (index < (width * height)) goto <256:cond_true>
A7 00 08 # goto +8         # goto <257:cond_false>
# <256:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <258:cond_end>
# <257:cond_false>
10 00    # bipush 0        # false
# <258:cond_end>
A7 00 05 # goto +5         # goto <255:cond_end>
# <254:cond_false>
10 00    # bipush 0        # false
# <255:cond_end>
14 12 BD # aldc 4797       # s[4797] = "imageutil.c0:42.4-42.51: @requires annotation failed\n"
15 03    # vload 3         # _caller
14 12 F3 # aldc 4851       # s[4851] = ": caller location"
B7 00 00 # invokenative 0  # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0  # string_join("imageutil.c0:42.4-42.51: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert((0 <= index) && (index < (width * height))) [failure message on stack]
15 01    # vload 1         # width
36 05    # vstore 5        # num_cols = width;
15 00    # vload 0         # index
15 01    # vload 1         # width
70       # irem            # (index % width)
36 06    # vstore 6        # col_index = (index % width);
15 06    # vload 6         # col_index
36 04    # vstore 4        # _result = col_index;
10 00    # bipush 0        # 0
15 04    # vload 4         # _result
A4 00 06 # if_icmple +6    # if (0 <= _result) goto <259:cond_true>
A7 00 17 # goto +23        # goto <260:cond_false>
# <259:cond_true>
15 04    # vload 4         # _result
15 01    # vload 1         # width
A1 00 06 # if_icmplt +6    # if (_result < width) goto <262:cond_true>
A7 00 08 # goto +8         # goto <263:cond_false>
# <262:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <264:cond_end>
# <263:cond_false>
10 00    # bipush 0        # false
# <264:cond_end>
A7 00 05 # goto +5         # goto <261:cond_end>
# <260:cond_false>
10 00    # bipush 0        # false
# <261:cond_end>
14 13 05 # aldc 4869       # s[4869] = "imageutil.c0:43.4-43.44: @ensures annotation failed"
CF       # assert          # assert((0 <= _result) && (_result < width)) [failure message on stack]
15 04    # vload 4         # _result
B0       # return          # 


#<is_valid_pixel>
00 05             # number of arguments = 5
00 0C             # number of local variables = 12
00 AC             # code length = 172 bytes
15 02    # vload 2         # width
15 03    # vload 3         # height
14 13 39 # aldc 4921       # s[4921] = "imageutil.c0:57.13-57.46"
B8 00 1E # invokestatic 30 # is_valid_imagesize(width, height, "imageutil.c0:57.13-57.46")
14 13 52 # aldc 4946       # s[4946] = "imageutil.c0:57.4-57.47: @requires annotation failed\n"
15 04    # vload 4         # _caller
14 13 88 # aldc 5000       # s[5000] = ": caller location"
B7 00 00 # invokenative 0  # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0  # string_join("imageutil.c0:57.4-57.47: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assertis_valid_imagesize(width, height, "imageutil.c0:57.13-57.46") [failure message on stack]
15 00    # vload 0         # row
15 02    # vload 2         # width
68       # imul            # (row * width)
15 01    # vload 1         # col
60       # iadd            # ((row * width) + col)
36 06    # vstore 6        # index = ((row * width) + col);
15 02    # vload 2         # width
15 03    # vload 3         # height
68       # imul            # (width * height)
36 07    # vstore 7        # arrayLength = (width * height);
10 00    # bipush 0        # 0
15 00    # vload 0         # row
A4 00 06 # if_icmple +6    # if (0 <= row) goto <265:cond_true>
A7 00 17 # goto +23        # goto <266:cond_false>
# <265:cond_true>
15 00    # vload 0         # row
15 03    # vload 3         # height
A1 00 06 # if_icmplt +6    # if (row < height) goto <268:cond_true>
A7 00 08 # goto +8         # goto <269:cond_false>
# <268:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <270:cond_end>
# <269:cond_false>
10 00    # bipush 0        # false
# <270:cond_end>
A7 00 05 # goto +5         # goto <267:cond_end>
# <266:cond_false>
10 00    # bipush 0        # false
# <267:cond_end>
36 08    # vstore 8        # validRow = ((0 <= row) && (row < height));
10 00    # bipush 0        # 0
15 01    # vload 1         # col
A4 00 06 # if_icmple +6    # if (0 <= col) goto <271:cond_true>
A7 00 17 # goto +23        # goto <272:cond_false>
# <271:cond_true>
15 01    # vload 1         # col
15 02    # vload 2         # width
A1 00 06 # if_icmplt +6    # if (col < width) goto <274:cond_true>
A7 00 08 # goto +8         # goto <275:cond_false>
# <274:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <276:cond_end>
# <275:cond_false>
10 00    # bipush 0        # false
# <276:cond_end>
A7 00 05 # goto +5         # goto <273:cond_end>
# <272:cond_false>
10 00    # bipush 0        # false
# <273:cond_end>
36 09    # vstore 9        # validCol = ((0 <= col) && (col < width));
15 08    # vload 8         # validRow
10 01    # bipush 1        # true
9F 00 06 # if_cmpeq +6     # if (validRow == true) goto <280:and>
A7 00 30 # goto +48        # goto <278:cond_false>
# <280:and>
15 09    # vload 9         # validCol
10 01    # bipush 1        # true
9F 00 06 # if_cmpeq +6     # if (validCol == true) goto <277:cond_true>
A7 00 26 # goto +38        # goto <278:cond_false>
# <277:cond_true>
10 00    # bipush 0        # 0
15 06    # vload 6         # index
A4 00 06 # if_icmple +6    # if (0 <= index) goto <281:cond_true>
A7 00 17 # goto +23        # goto <282:cond_false>
# <281:cond_true>
15 06    # vload 6         # index
15 07    # vload 7         # arrayLength
A1 00 06 # if_icmplt +6    # if (index < arrayLength) goto <284:cond_true>
A7 00 08 # goto +8         # goto <285:cond_false>
# <284:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <286:cond_end>
# <285:cond_false>
10 00    # bipush 0        # false
# <286:cond_end>
A7 00 05 # goto +5         # goto <283:cond_end>
# <282:cond_false>
10 00    # bipush 0        # false
# <283:cond_end>
A7 00 05 # goto +5         # goto <279:cond_end>
# <278:cond_false>
10 00    # bipush 0        # false
# <279:cond_end>
36 05    # vstore 5        # _result = ((validRow && validCol) && ((0 <= index) && (index < arrayLength)));
15 05    # vload 5         # _result
B0       # return          # 


#<get_index>
00 05             # number of arguments = 5
00 0C             # number of local variables = 12
00 6E             # code length = 110 bytes
15 02    # vload 2         # width
15 03    # vload 3         # height
14 13 9A # aldc 5018       # s[5018] = "imageutil.c0:76.13-76.46"
B8 00 1E # invokestatic 30 # is_valid_imagesize(width, height, "imageutil.c0:76.13-76.46")
14 13 B3 # aldc 5043       # s[5043] = "imageutil.c0:76.4-76.47: @requires annotation failed\n"
15 04    # vload 4         # _caller
14 13 E9 # aldc 5097       # s[5097] = ": caller location"
B7 00 00 # invokenative 0  # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0  # string_join("imageutil.c0:76.4-76.47: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assertis_valid_imagesize(width, height, "imageutil.c0:76.13-76.46") [failure message on stack]
15 00    # vload 0         # row
15 01    # vload 1         # col
15 02    # vload 2         # width
15 03    # vload 3         # height
14 13 FB # aldc 5115       # s[5115] = "imageutil.c0:77.13-77.51"
B8 00 21 # invokestatic 33 # is_valid_pixel(row, col, width, height, "imageutil.c0:77.13-77.51")
14 14 14 # aldc 5140       # s[5140] = "imageutil.c0:77.4-77.52: @requires annotation failed\n"
15 04    # vload 4         # _caller
14 14 4A # aldc 5194       # s[5194] = ": caller location"
B7 00 00 # invokenative 0  # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0  # string_join("imageutil.c0:77.4-77.52: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assertis_valid_pixel(row, col, width, height, "imageutil.c0:77.13-77.51") [failure message on stack]
15 00    # vload 0         # row
15 02    # vload 2         # width
68       # imul            # (row * width)
15 01    # vload 1         # col
60       # iadd            # ((row * width) + col)
36 06    # vstore 6        # index = ((row * width) + col);
15 06    # vload 6         # index
36 05    # vstore 5        # _result = index;
10 00    # bipush 0        # 0
15 05    # vload 5         # _result
A4 00 06 # if_icmple +6    # if (0 <= _result) goto <287:cond_true>
A7 00 1A # goto +26        # goto <288:cond_false>
# <287:cond_true>
15 05    # vload 5         # _result
15 02    # vload 2         # width
15 03    # vload 3         # height
68       # imul            # (width * height)
A1 00 06 # if_icmplt +6    # if (_result < (width * height)) goto <290:cond_true>
A7 00 08 # goto +8         # goto <291:cond_false>
# <290:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <292:cond_end>
# <291:cond_false>
10 00    # bipush 0        # false
# <292:cond_end>
A7 00 05 # goto +5         # goto <289:cond_end>
# <288:cond_false>
10 00    # bipush 0        # false
# <289:cond_end>
14 14 5C # aldc 5212       # s[5212] = "imageutil.c0:78.4-78.55: @ensures annotation failed"
CF       # assert          # assert((0 <= _result) && (_result < (width * height))) [failure message on stack]
15 05    # vload 5         # _result
B0       # return          # 


#<readline__1>
00 01             # number of arguments = 1
00 0C             # number of local variables = 12
00 1D             # code length = 29 bytes
B7 00 0B # invokenative 11 # eof()
10 01    # bipush 1        # 
82       # ixor            # !(eof())
14 14 90 # aldc 5264       # s[5264] = "/afs/andrew/course/15/122/lib/conio.h0:14.6-14.22: @requires annotation failed\n"
15 00    # vload 0         # _caller
14 14 E0 # aldc 5344       # s[5344] = ": caller location"
B7 00 00 # invokenative 0  # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0  # string_join("/afs/andrew/course/15/122/lib/conio.h0:14.6-14.22: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert!(eof()) [failure message on stack]
B7 00 0C # invokenative 12 # readline()
36 01    # vstore 1        # _result = readline();
15 01    # vload 1         # _result
B0       # return          # 


#<reflect_y>
00 04             # number of arguments = 4
00 0F             # number of local variables = 15
01 EC             # code length = 492 bytes
15 01    # vload 1         # width
15 02    # vload 2         # height
14 14 F2 # aldc 5362       # s[5362] = "reflect.c0:5.13-5.46"
B8 00 1E # invokestatic 30 # is_valid_imagesize(width, height, "reflect.c0:5.13-5.46")
14 15 07 # aldc 5383       # s[5383] = "reflect.c0:5.4-5.47: @requires annotation failed\n"
15 03    # vload 3         # _caller
14 15 39 # aldc 5433       # s[5433] = ": caller location"
B7 00 00 # invokenative 0  # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0  # string_join("reflect.c0:5.4-5.47: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assertis_valid_imagesize(width, height, "reflect.c0:5.13-5.46") [failure message on stack]
15 01    # vload 1         # width
15 02    # vload 2         # height
68       # imul            # (width * height)
36 05    # vstore 5        # arrayLength = (width * height);
15 01    # vload 1         # width
15 02    # vload 2         # height
68       # imul            # (width * height)
BC 04    # newarray 4      # alloc_array(pixel, (width * height))
36 06    # vstore 6        # result = alloc_array(pixel, (width * height));
10 FF    # bipush -1       # -1
36 07    # vstore 7        # midCol = -(1);
10 00    # bipush 0        # 0
36 08    # vstore 8        # stopIndex = 0;
15 01    # vload 1         # width
10 01    # bipush 1        # 1
9F 00 06 # if_cmpeq +6     # if (width == 1) goto <293:then>
A7 00 0D # goto +13        # goto <294:else>
# <293:then>
15 00    # vload 0         # pixels
36 04    # vstore 4        # _result = pixels;
15 04    # vload 4         # _result
B0       # return          # 
A7 00 03 # goto +3         # goto <295:endif>
# <294:else>
# <295:endif>
15 01    # vload 1         # width
10 02    # bipush 2        # 2
70       # irem            # (width % 2)
10 01    # bipush 1        # 1
9F 00 06 # if_cmpeq +6     # if ((width % 2) == 1) goto <296:then>
A7 00 14 # goto +20        # goto <297:else>
# <296:then>
15 01    # vload 1         # width
10 01    # bipush 1        # 1
64       # isub            # (width - 1)
10 02    # bipush 2        # 2
6C       # idiv            # ((width - 1) / 2)
36 07    # vstore 7        # midCol = ((width - 1) / 2);
15 07    # vload 7         # midCol
36 08    # vstore 8        # stopIndex = midCol;
A7 00 0A # goto +10        # goto <298:endif>
# <297:else>
15 01    # vload 1         # width
10 02    # bipush 2        # 2
6C       # idiv            # (width / 2)
36 08    # vstore 8        # stopIndex = (width / 2);
# <298:endif>
15 01    # vload 1         # width
10 01    # bipush 1        # 1
64       # isub            # (width - 1)
36 09    # vstore 9        # constantSum = (width - 1);
10 00    # bipush 0        # 0
36 0A    # vstore 10       # row = 0;
# <299:loop>
A7 00 03 # goto +3         # goto <300:body>
# <300:body>
10 00    # bipush 0        # 0
15 0A    # vload 10        # row
A4 00 06 # if_icmple +6    # if (0 <= row) goto <302:cond_true>
A7 00 17 # goto +23        # goto <303:cond_false>
# <302:cond_true>
15 0A    # vload 10        # row
15 02    # vload 2         # height
A4 00 06 # if_icmple +6    # if (row <= height) goto <305:cond_true>
A7 00 08 # goto +8         # goto <306:cond_false>
# <305:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <307:cond_end>
# <306:cond_false>
10 00    # bipush 0        # false
# <307:cond_end>
A7 00 05 # goto +5         # goto <304:cond_end>
# <303:cond_false>
10 00    # bipush 0        # false
# <304:cond_end>
14 15 4B # aldc 5451       # s[5451] = "reflect.c0:24.5-24.45: @loop_invariant annotation failed"
CF       # assert          # assert((0 <= row) && (row <= height)) [failure message on stack]
15 0A    # vload 10        # row
15 02    # vload 2         # height
A1 00 06 # if_icmplt +6    # if (row < height) goto <308:then>
A7 01 3C # goto +316       # goto <309:else>
# <308:then>
10 00    # bipush 0        # 0
36 0B    # vstore 11       # col = 0;
# <311:loop>
A7 00 03 # goto +3         # goto <312:body>
# <312:body>
10 00    # bipush 0        # 0
15 0B    # vload 11        # col
A4 00 06 # if_icmple +6    # if (0 <= col) goto <314:cond_true>
A7 00 17 # goto +23        # goto <315:cond_false>
# <314:cond_true>
15 0B    # vload 11        # col
15 08    # vload 8         # stopIndex
A4 00 06 # if_icmple +6    # if (col <= stopIndex) goto <317:cond_true>
A7 00 08 # goto +8         # goto <318:cond_false>
# <317:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <319:cond_end>
# <318:cond_false>
10 00    # bipush 0        # false
# <319:cond_end>
A7 00 05 # goto +5         # goto <316:cond_end>
# <315:cond_false>
10 00    # bipush 0        # false
# <316:cond_end>
14 15 84 # aldc 5508       # s[5508] = "reflect.c0:27.6-27.49: @loop_invariant annotation failed"
CF       # assert          # assert((0 <= col) && (col <= stopIndex)) [failure message on stack]
15 0B    # vload 11        # col
15 08    # vload 8         # stopIndex
A1 00 06 # if_icmplt +6    # if (col < stopIndex) goto <320:then>
A7 00 F7 # goto +247       # goto <321:else>
# <320:then>
10 00    # bipush 0        # 0
36 0C    # vstore 12       # otherCol = 0;
15 07    # vload 7         # midCol
15 0B    # vload 11        # col
A0 00 06 # if_cmpne +6     # if (midCol != col) goto <323:then>
A7 00 DF # goto +223       # goto <324:else>
# <323:then>
15 09    # vload 9         # constantSum
15 0B    # vload 11        # col
64       # isub            # (constantSum - col)
36 0C    # vstore 12       # otherCol = (constantSum - col);
15 0A    # vload 10        # row
15 0B    # vload 11        # col
15 01    # vload 1         # width
15 02    # vload 2         # height
14 15 BD # aldc 5565       # s[5565] = "reflect.c0:35.17-35.53"
B8 00 21 # invokestatic 33 # is_valid_pixel(row, col, width, height, "reflect.c0:35.17-35.53")
14 15 D4 # aldc 5588       # s[5588] = "reflect.c0:35.10-35.54: @assert annotation failed"
CF       # assert          # assertis_valid_pixel(row, col, width, height, "reflect.c0:35.17-35.53") [failure message on stack]
15 0A    # vload 10        # row
15 0B    # vload 11        # col
15 01    # vload 1         # width
15 02    # vload 2         # height
14 16 06 # aldc 5638       # s[5638] = "reflect.c0:36.21-36.52"
B8 00 22 # invokestatic 34 # get_index(row, col, width, height, "reflect.c0:36.21-36.52")
36 0D    # vstore 13       # index1 = get_index(row, col, width, height, "reflect.c0:36.21-36.52");
15 0A    # vload 10        # row
15 0C    # vload 12        # otherCol
15 01    # vload 1         # width
15 02    # vload 2         # height
14 16 1D # aldc 5661       # s[5661] = "reflect.c0:37.18-37.59"
B8 00 21 # invokestatic 33 # is_valid_pixel(row, otherCol, width, height, "reflect.c0:37.18-37.59")
14 16 34 # aldc 5684       # s[5684] = "reflect.c0:37.11-37.60: @assert annotation failed"
CF       # assert          # assertis_valid_pixel(row, otherCol, width, height, "reflect.c0:37.18-37.59") [failure message on stack]
15 0A    # vload 10        # row
15 0C    # vload 12        # otherCol
15 01    # vload 1         # width
15 02    # vload 2         # height
14 16 66 # aldc 5734       # s[5734] = "reflect.c0:38.21-38.57"
B8 00 22 # invokestatic 34 # get_index(row, otherCol, width, height, "reflect.c0:38.21-38.57")
36 0E    # vstore 14       # index2 = get_index(row, otherCol, width, height, "reflect.c0:38.21-38.57");
10 00    # bipush 0        # 0
15 0D    # vload 13        # index1
A4 00 06 # if_icmple +6    # if (0 <= index1) goto <326:cond_true>
A7 00 18 # goto +24        # goto <327:cond_false>
# <326:cond_true>
15 0D    # vload 13        # index1
15 06    # vload 6         # result
BE       # arraylength     # \length(result)
A1 00 06 # if_icmplt +6    # if (index1 < \length(result)) goto <329:cond_true>
A7 00 08 # goto +8         # goto <330:cond_false>
# <329:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <331:cond_end>
# <330:cond_false>
10 00    # bipush 0        # false
# <331:cond_end>
A7 00 05 # goto +5         # goto <328:cond_end>
# <327:cond_false>
10 00    # bipush 0        # false
# <328:cond_end>
14 16 7D # aldc 5757       # s[5757] = "reflect.c0:39.11-39.56: @assert annotation failed"
CF       # assert          # assert((0 <= index1) && (index1 < \length(result))) [failure message on stack]
15 0D    # vload 13        # index1
15 00    # vload 0         # pixels
BE       # arraylength     # \length(pixels)
A1 00 06 # if_icmplt +6    # if (index1 < \length(pixels)) goto <332:cond_true>
A7 00 08 # goto +8         # goto <333:cond_false>
# <332:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <334:cond_end>
# <333:cond_false>
10 00    # bipush 0        # false
# <334:cond_end>
14 16 AF # aldc 5807       # s[5807] = "reflect.c0:40.11-40.44: @assert annotation failed"
CF       # assert          # assert(index1 < \length(pixels)) [failure message on stack]
10 00    # bipush 0        # 0
15 0E    # vload 14        # index2
A4 00 06 # if_icmple +6    # if (0 <= index2) goto <335:cond_true>
A7 00 18 # goto +24        # goto <336:cond_false>
# <335:cond_true>
15 0E    # vload 14        # index2
15 06    # vload 6         # result
BE       # arraylength     # \length(result)
A1 00 06 # if_icmplt +6    # if (index2 < \length(result)) goto <338:cond_true>
A7 00 08 # goto +8         # goto <339:cond_false>
# <338:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <340:cond_end>
# <339:cond_false>
10 00    # bipush 0        # false
# <340:cond_end>
A7 00 05 # goto +5         # goto <337:cond_end>
# <336:cond_false>
10 00    # bipush 0        # false
# <337:cond_end>
14 16 E1 # aldc 5857       # s[5857] = "reflect.c0:41.11-41.56: @assert annotation failed"
CF       # assert          # assert((0 <= index2) && (index2 < \length(result))) [failure message on stack]
15 0E    # vload 14        # index2
15 00    # vload 0         # pixels
BE       # arraylength     # \length(pixels)
A1 00 06 # if_icmplt +6    # if (index2 < \length(pixels)) goto <341:cond_true>
A7 00 08 # goto +8         # goto <342:cond_false>
# <341:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <343:cond_end>
# <342:cond_false>
10 00    # bipush 0        # false
# <343:cond_end>
14 17 13 # aldc 5907       # s[5907] = "reflect.c0:42.11-42.44: @assert annotation failed"
CF       # assert          # assert(index2 < \length(pixels)) [failure message on stack]
15 06    # vload 6         # result
15 0E    # vload 14        # index2
63       # aadds           # &result[index2]
15 00    # vload 0         # pixels
15 0D    # vload 13        # index1
63       # aadds           # &pixels[index1]
2E       # imload          # pixels[index1]
4E       # imstore         # result[index2] = pixels[index1];
15 06    # vload 6         # result
15 0D    # vload 13        # index1
63       # aadds           # &result[index1]
15 00    # vload 0         # pixels
15 0E    # vload 14        # index2
63       # aadds           # &pixels[index2]
2E       # imload          # pixels[index2]
4E       # imstore         # result[index1] = pixels[index2];
A7 00 03 # goto +3         # goto <325:endif>
# <324:else>
# <325:endif>
15 0B    # vload 11        # col
10 01    # bipush 1        # 1
60       # iadd            # 
36 0B    # vstore 11       # col += 1;
A7 00 06 # goto +6         # goto <322:endif>
# <321:else>
A7 00 06 # goto +6         # break
# <322:endif>
A7 FE D8 # goto -296       # goto <311:loop>
# <313:exit>
15 0A    # vload 10        # row
10 01    # bipush 1        # 1
60       # iadd            # 
36 0A    # vstore 10       # row += 1;
A7 00 06 # goto +6         # goto <310:endif>
# <309:else>
A7 00 06 # goto +6         # break
# <310:endif>
A7 FE 93 # goto -365       # goto <299:loop>
# <301:exit>
15 06    # vload 6         # result
36 04    # vstore 4        # _result = result;
15 04    # vload 4         # _result
B0       # return          # 


#<reflect_x>
00 04             # number of arguments = 4
00 0F             # number of local variables = 15
01 DD             # code length = 477 bytes
15 01    # vload 1         # width
15 02    # vload 2         # height
14 17 45 # aldc 5957       # s[5957] = "reflect.c0:54.13-54.46"
B8 00 1E # invokestatic 30 # is_valid_imagesize(width, height, "reflect.c0:54.13-54.46")
14 17 5C # aldc 5980       # s[5980] = "reflect.c0:54.4-54.47: @requires annotation failed\n"
15 03    # vload 3         # _caller
14 17 90 # aldc 6032       # s[6032] = ": caller location"
B7 00 00 # invokenative 0  # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0  # string_join("reflect.c0:54.4-54.47: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assertis_valid_imagesize(width, height, "reflect.c0:54.13-54.46") [failure message on stack]
15 02    # vload 2         # height
10 01    # bipush 1        # 1
9F 00 06 # if_cmpeq +6     # if (height == 1) goto <344:then>
A7 00 0D # goto +13        # goto <345:else>
# <344:then>
15 00    # vload 0         # pixels
36 04    # vstore 4        # _result = pixels;
15 04    # vload 4         # _result
B0       # return          # 
A7 00 03 # goto +3         # goto <346:endif>
# <345:else>
# <346:endif>
15 01    # vload 1         # width
15 02    # vload 2         # height
68       # imul            # (width * height)
36 05    # vstore 5        # arrayLength = (width * height);
15 01    # vload 1         # width
15 02    # vload 2         # height
68       # imul            # (width * height)
BC 04    # newarray 4      # alloc_array(pixel, (width * height))
36 06    # vstore 6        # result = alloc_array(pixel, (width * height));
10 FF    # bipush -1       # -1
36 07    # vstore 7        # midRow = -(1);
10 00    # bipush 0        # 0
36 08    # vstore 8        # stopIndex = 0;
15 02    # vload 2         # height
10 02    # bipush 2        # 2
70       # irem            # (height % 2)
10 01    # bipush 1        # 1
9F 00 06 # if_cmpeq +6     # if ((height % 2) == 1) goto <347:then>
A7 00 14 # goto +20        # goto <348:else>
# <347:then>
15 02    # vload 2         # height
10 01    # bipush 1        # 1
64       # isub            # (height - 1)
10 02    # bipush 2        # 2
6C       # idiv            # ((height - 1) / 2)
36 07    # vstore 7        # midRow = ((height - 1) / 2);
15 07    # vload 7         # midRow
36 08    # vstore 8        # stopIndex = midRow;
A7 00 0A # goto +10        # goto <349:endif>
# <348:else>
15 02    # vload 2         # height
10 02    # bipush 2        # 2
6C       # idiv            # (height / 2)
36 08    # vstore 8        # stopIndex = (height / 2);
# <349:endif>
15 02    # vload 2         # height
10 01    # bipush 1        # 1
64       # isub            # (height - 1)
36 09    # vstore 9        # constantSum = (height - 1);
10 00    # bipush 0        # 0
36 0A    # vstore 10       # col = 0;
# <350:loop>
A7 00 03 # goto +3         # goto <351:body>
# <351:body>
10 00    # bipush 0        # 0
15 0A    # vload 10        # col
A4 00 06 # if_icmple +6    # if (0 <= col) goto <353:cond_true>
A7 00 17 # goto +23        # goto <354:cond_false>
# <353:cond_true>
15 0A    # vload 10        # col
15 01    # vload 1         # width
A4 00 06 # if_icmple +6    # if (col <= width) goto <356:cond_true>
A7 00 08 # goto +8         # goto <357:cond_false>
# <356:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <358:cond_end>
# <357:cond_false>
10 00    # bipush 0        # false
# <358:cond_end>
A7 00 05 # goto +5         # goto <355:cond_end>
# <354:cond_false>
10 00    # bipush 0        # false
# <355:cond_end>
14 17 A2 # aldc 6050       # s[6050] = "reflect.c0:71.5-71.43: @loop_invariant annotation failed"
CF       # assert          # assert((0 <= col) && (col <= width)) [failure message on stack]
15 0A    # vload 10        # col
15 01    # vload 1         # width
A1 00 06 # if_icmplt +6    # if (col < width) goto <359:then>
A7 01 2D # goto +301       # goto <360:else>
# <359:then>
10 00    # bipush 0        # 0
36 0B    # vstore 11       # row = 0;
# <362:loop>
A7 00 03 # goto +3         # goto <363:body>
# <363:body>
10 00    # bipush 0        # 0
15 0B    # vload 11        # row
A4 00 06 # if_icmple +6    # if (0 <= row) goto <365:cond_true>
A7 00 17 # goto +23        # goto <366:cond_false>
# <365:cond_true>
15 0B    # vload 11        # row
15 08    # vload 8         # stopIndex
A4 00 06 # if_icmple +6    # if (row <= stopIndex) goto <368:cond_true>
A7 00 08 # goto +8         # goto <369:cond_false>
# <368:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <370:cond_end>
# <369:cond_false>
10 00    # bipush 0        # false
# <370:cond_end>
A7 00 05 # goto +5         # goto <367:cond_end>
# <366:cond_false>
10 00    # bipush 0        # false
# <367:cond_end>
14 17 DB # aldc 6107       # s[6107] = "reflect.c0:74.10-74.53: @loop_invariant annotation failed"
CF       # assert          # assert((0 <= row) && (row <= stopIndex)) [failure message on stack]
15 0B    # vload 11        # row
15 08    # vload 8         # stopIndex
A1 00 06 # if_icmplt +6    # if (row < stopIndex) goto <371:then>
A7 00 E8 # goto +232       # goto <372:else>
# <371:then>
15 0B    # vload 11        # row
15 07    # vload 7         # midRow
A0 00 06 # if_cmpne +6     # if (row != midRow) goto <374:then>
A7 00 D4 # goto +212       # goto <375:else>
# <374:then>
15 09    # vload 9         # constantSum
15 0B    # vload 11        # row
64       # isub            # (constantSum - row)
36 0C    # vstore 12       # otherRow = (constantSum - row);
15 0B    # vload 11        # row
15 0A    # vload 10        # col
15 01    # vload 1         # width
15 02    # vload 2         # height
14 18 15 # aldc 6165       # s[6165] = "reflect.c0:79.22-79.58"
B8 00 21 # invokestatic 33 # is_valid_pixel(row, col, width, height, "reflect.c0:79.22-79.58")
14 18 2C # aldc 6188       # s[6188] = "reflect.c0:79.15-79.59: @assert annotation failed"
CF       # assert          # assertis_valid_pixel(row, col, width, height, "reflect.c0:79.22-79.58") [failure message on stack]
15 0B    # vload 11        # row
15 0A    # vload 10        # col
15 01    # vload 1         # width
15 02    # vload 2         # height
14 18 5E # aldc 6238       # s[6238] = "reflect.c0:80.24-80.55"
B8 00 22 # invokestatic 34 # get_index(row, col, width, height, "reflect.c0:80.24-80.55")
36 0D    # vstore 13       # index1 = get_index(row, col, width, height, "reflect.c0:80.24-80.55");
15 0C    # vload 12        # otherRow
15 0A    # vload 10        # col
15 01    # vload 1         # width
15 02    # vload 2         # height
14 18 75 # aldc 6261       # s[6261] = "reflect.c0:81.21-81.62"
B8 00 21 # invokestatic 33 # is_valid_pixel(otherRow, col, width, height, "reflect.c0:81.21-81.62")
14 18 8C # aldc 6284       # s[6284] = "reflect.c0:81.14-81.63: @assert annotation failed"
CF       # assert          # assertis_valid_pixel(otherRow, col, width, height, "reflect.c0:81.21-81.62") [failure message on stack]
15 0C    # vload 12        # otherRow
15 0A    # vload 10        # col
15 01    # vload 1         # width
15 02    # vload 2         # height
14 18 BE # aldc 6334       # s[6334] = "reflect.c0:82.24-82.60"
B8 00 22 # invokestatic 34 # get_index(otherRow, col, width, height, "reflect.c0:82.24-82.60")
36 0E    # vstore 14       # index2 = get_index(otherRow, col, width, height, "reflect.c0:82.24-82.60");
10 00    # bipush 0        # 0
15 0D    # vload 13        # index1
A4 00 06 # if_icmple +6    # if (0 <= index1) goto <377:cond_true>
A7 00 18 # goto +24        # goto <378:cond_false>
# <377:cond_true>
15 0D    # vload 13        # index1
15 06    # vload 6         # result
BE       # arraylength     # \length(result)
A1 00 06 # if_icmplt +6    # if (index1 < \length(result)) goto <380:cond_true>
A7 00 08 # goto +8         # goto <381:cond_false>
# <380:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <382:cond_end>
# <381:cond_false>
10 00    # bipush 0        # false
# <382:cond_end>
A7 00 05 # goto +5         # goto <379:cond_end>
# <378:cond_false>
10 00    # bipush 0        # false
# <379:cond_end>
14 18 D5 # aldc 6357       # s[6357] = "reflect.c0:83.14-83.59: @assert annotation failed"
CF       # assert          # assert((0 <= index1) && (index1 < \length(result))) [failure message on stack]
15 0D    # vload 13        # index1
15 00    # vload 0         # pixels
BE       # arraylength     # \length(pixels)
A1 00 06 # if_icmplt +6    # if (index1 < \length(pixels)) goto <383:cond_true>
A7 00 08 # goto +8         # goto <384:cond_false>
# <383:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <385:cond_end>
# <384:cond_false>
10 00    # bipush 0        # false
# <385:cond_end>
14 19 07 # aldc 6407       # s[6407] = "reflect.c0:84.14-84.45: @assert annotation failed"
CF       # assert          # assert(index1 < \length(pixels)) [failure message on stack]
10 00    # bipush 0        # 0
15 0E    # vload 14        # index2
A4 00 06 # if_icmple +6    # if (0 <= index2) goto <389:and>
A7 00 23 # goto +35        # goto <387:cond_false>
# <389:and>
15 0E    # vload 14        # index2
15 06    # vload 6         # result
BE       # arraylength     # \length(result)
A1 00 06 # if_icmplt +6    # if (index2 < \length(result)) goto <386:cond_true>
A7 00 18 # goto +24        # goto <387:cond_false>
# <386:cond_true>
15 0E    # vload 14        # index2
15 00    # vload 0         # pixels
BE       # arraylength     # \length(pixels)
A1 00 06 # if_icmplt +6    # if (index2 < \length(pixels)) goto <390:cond_true>
A7 00 08 # goto +8         # goto <391:cond_false>
# <390:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <392:cond_end>
# <391:cond_false>
10 00    # bipush 0        # false
# <392:cond_end>
A7 00 05 # goto +5         # goto <388:cond_end>
# <387:cond_false>
10 00    # bipush 0        # false
# <388:cond_end>
14 19 39 # aldc 6457       # s[6457] = "reflect.c0:85.14-85.87: @assert annotation failed"
CF       # assert          # assert(((0 <= index2) && (index2 < \length(result))) && (index2 < \length(pixels))) [failure message on stack]
15 06    # vload 6         # result
15 0D    # vload 13        # index1
63       # aadds           # &result[index1]
15 00    # vload 0         # pixels
15 0E    # vload 14        # index2
63       # aadds           # &pixels[index2]
2E       # imload          # pixels[index2]
4E       # imstore         # result[index1] = pixels[index2];
15 06    # vload 6         # result
15 0E    # vload 14        # index2
63       # aadds           # &result[index2]
15 00    # vload 0         # pixels
15 0D    # vload 13        # index1
63       # aadds           # &pixels[index1]
2E       # imload          # pixels[index1]
4E       # imstore         # result[index2] = pixels[index1];
A7 00 03 # goto +3         # goto <376:endif>
# <375:else>
# <376:endif>
15 0B    # vload 11        # row
10 01    # bipush 1        # 1
60       # iadd            # 
36 0B    # vstore 11       # row += 1;
A7 00 06 # goto +6         # goto <373:endif>
# <372:else>
A7 00 06 # goto +6         # break
# <373:endif>
A7 FE E7 # goto -281       # goto <362:loop>
# <364:exit>
15 0A    # vload 10        # col
10 01    # bipush 1        # 1
60       # iadd            # 
36 0A    # vstore 10       # col += 1;
A7 00 06 # goto +6         # goto <361:endif>
# <360:else>
A7 00 06 # goto +6         # break
# <361:endif>
A7 FE A2 # goto -350       # goto <350:loop>
# <352:exit>
15 06    # vload 6         # result
36 04    # vstore 4        # _result = result;
15 04    # vload 4         # _result
B0       # return          # 


#<insertPic>
00 07             # number of arguments = 7
00 10             # number of local variables = 16
01 0A             # code length = 266 bytes
15 00    # vload 0         # giant
36 08    # vstore 8        # result = giant;
10 02    # bipush 2        # 2
15 04    # vload 4         # width
68       # imul            # (2 * width)
36 09    # vstore 9        # giantWidth = (2 * width);
10 02    # bipush 2        # 2
15 05    # vload 5         # height
68       # imul            # (2 * height)
36 0A    # vstore 10       # giantHeight = (2 * height);
10 00    # bipush 0        # 0
36 0B    # vstore 11       # row = 0;
# <393:loop>
A7 00 03 # goto +3         # goto <394:body>
# <394:body>
15 0B    # vload 11        # row
15 05    # vload 5         # height
A1 00 06 # if_icmplt +6    # if (row < height) goto <396:then>
A7 00 DD # goto +221       # goto <397:else>
# <396:then>
10 00    # bipush 0        # 0
36 0C    # vstore 12       # col = 0;
# <399:loop>
A7 00 03 # goto +3         # goto <400:body>
# <400:body>
10 00    # bipush 0        # 0
15 03    # vload 3         # startCol
15 0C    # vload 12        # col
60       # iadd            # (startCol + col)
A4 00 06 # if_icmple +6    # if (0 <= (startCol + col)) goto <402:cond_true>
A7 00 1A # goto +26        # goto <403:cond_false>
# <402:cond_true>
15 03    # vload 3         # startCol
15 0C    # vload 12        # col
60       # iadd            # (startCol + col)
15 09    # vload 9         # giantWidth
A4 00 06 # if_icmple +6    # if ((startCol + col) <= giantWidth) goto <405:cond_true>
A7 00 08 # goto +8         # goto <406:cond_false>
# <405:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <407:cond_end>
# <406:cond_false>
10 00    # bipush 0        # false
# <407:cond_end>
A7 00 05 # goto +5         # goto <404:cond_end>
# <403:cond_false>
10 00    # bipush 0        # false
# <404:cond_end>
14 19 6B # aldc 6507       # s[6507] = "reflect.c0:109.9-109.73: @loop_invariant annotation failed"
CF       # assert          # assert((0 <= (startCol + col)) && ((startCol + col) <= giantWidth)) [failure message on stack]
10 00    # bipush 0        # 0
15 02    # vload 2         # startRow
15 0B    # vload 11        # row
60       # iadd            # (startRow + row)
A4 00 06 # if_icmple +6    # if (0 <= (startRow + row)) goto <408:cond_true>
A7 00 1A # goto +26        # goto <409:cond_false>
# <408:cond_true>
15 02    # vload 2         # startRow
15 0B    # vload 11        # row
60       # iadd            # (startRow + row)
15 0A    # vload 10        # giantHeight
A4 00 06 # if_icmple +6    # if ((startRow + row) <= giantHeight) goto <411:cond_true>
A7 00 08 # goto +8         # goto <412:cond_false>
# <411:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <413:cond_end>
# <412:cond_false>
10 00    # bipush 0        # false
# <413:cond_end>
A7 00 05 # goto +5         # goto <410:cond_end>
# <409:cond_false>
10 00    # bipush 0        # false
# <410:cond_end>
14 19 A6 # aldc 6566       # s[6566] = "reflect.c0:110.9-110.74: @loop_invariant annotation failed"
CF       # assert          # assert((0 <= (startRow + row)) && ((startRow + row) <= giantHeight)) [failure message on stack]
15 0C    # vload 12        # col
15 04    # vload 4         # width
A1 00 06 # if_icmplt +6    # if (col < width) goto <414:then>
A7 00 68 # goto +104       # goto <415:else>
# <414:then>
15 0B    # vload 11        # row
15 02    # vload 2         # startRow
60       # iadd            # (row + startRow)
36 0D    # vstore 13       # realRow = (row + startRow);
15 0C    # vload 12        # col
15 03    # vload 3         # startCol
60       # iadd            # (col + startCol)
36 0E    # vstore 14       # realCol = (col + startCol);
15 0D    # vload 13        # realRow
15 0E    # vload 14        # realCol
15 09    # vload 9         # giantWidth
15 0A    # vload 10        # giantHeight
14 19 E1 # aldc 6625       # s[6625] = "reflect.c0:115.21-115.72"
B8 00 22 # invokestatic 34 # get_index(realRow, realCol, giantWidth, giantHeight, "reflect.c0:115.21-115.72")
36 0F    # vstore 15       # index = get_index(realRow, realCol, giantWidth, giantHeight, "reflect.c0:115.21-115.72");
10 00    # bipush 0        # 0
15 0F    # vload 15        # index
A4 00 06 # if_icmple +6    # if (0 <= index) goto <417:cond_true>
A7 00 18 # goto +24        # goto <418:cond_false>
# <417:cond_true>
15 0F    # vload 15        # index
15 00    # vload 0         # giant
BE       # arraylength     # \length(giant)
A4 00 06 # if_icmple +6    # if (index <= \length(giant)) goto <420:cond_true>
A7 00 08 # goto +8         # goto <421:cond_false>
# <420:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <422:cond_end>
# <421:cond_false>
10 00    # bipush 0        # false
# <422:cond_end>
A7 00 05 # goto +5         # goto <419:cond_end>
# <418:cond_false>
10 00    # bipush 0        # false
# <419:cond_end>
14 19 FA # aldc 6650       # s[6650] = "reflect.c0:116.12-116.56: @assert annotation failed"
CF       # assert          # assert((0 <= index) && (index <= \length(giant))) [failure message on stack]
15 08    # vload 8         # result
15 0F    # vload 15        # index
63       # aadds           # &result[index]
15 01    # vload 1         # small
15 0B    # vload 11        # row
15 0C    # vload 12        # col
15 04    # vload 4         # width
15 05    # vload 5         # height
14 1A 2E # aldc 6702       # s[6702] = "reflect.c0:117.31-117.62"
B8 00 22 # invokestatic 34 # get_index(row, col, width, height, "reflect.c0:117.31-117.62")
63       # aadds           # &small[get_index(row, col, width, height, "reflect.c0:117.31-117.62")]
2E       # imload          # small[get_index(row, col, width, height, "reflect.c0:117.31-117.62")]
4E       # imstore         # result[index] = small[get_index(row, col, width, height, "reflect.c0:117.31-117.62")];
15 0C    # vload 12        # col
10 01    # bipush 1        # 1
60       # iadd            # 
36 0C    # vstore 12       # col += 1;
A7 00 06 # goto +6         # goto <416:endif>
# <415:else>
A7 00 06 # goto +6         # break
# <416:endif>
A7 FF 37 # goto -201       # goto <399:loop>
# <401:exit>
15 0B    # vload 11        # row
10 01    # bipush 1        # 1
60       # iadd            # 
36 0B    # vstore 11       # row += 1;
A7 00 06 # goto +6         # goto <398:endif>
# <397:else>
A7 00 06 # goto +6         # break
# <398:endif>
A7 FF 16 # goto -234       # goto <393:loop>
# <395:exit>
15 08    # vload 8         # result
36 07    # vstore 7        # _result = result;
15 07    # vload 7         # _result
B0       # return          # 


#<reflect>
00 04             # number of arguments = 4
00 10             # number of local variables = 16
01 2A             # code length = 298 bytes
15 01    # vload 1         # width
15 02    # vload 2         # height
14 1A 47 # aldc 6727       # s[6727] = "reflect.c0:127.13-127.46"
B8 00 1E # invokestatic 30 # is_valid_imagesize(width, height, "reflect.c0:127.13-127.46")
14 1A 60 # aldc 6752       # s[6752] = "reflect.c0:127.4-127.47: @requires annotation failed\n"
15 03    # vload 3         # _caller
14 1A 96 # aldc 6806       # s[6806] = ": caller location"
B7 00 00 # invokenative 0  # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0  # string_join("reflect.c0:127.4-127.47: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assertis_valid_imagesize(width, height, "reflect.c0:127.13-127.46") [failure message on stack]
15 01    # vload 1         # width
15 02    # vload 2         # height
68       # imul            # (width * height)
15 00    # vload 0         # pixels
BE       # arraylength     # \length(pixels)
9F 00 06 # if_cmpeq +6     # if ((width * height) == \length(pixels)) goto <423:cond_true>
A7 00 08 # goto +8         # goto <424:cond_false>
# <423:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <425:cond_end>
# <424:cond_false>
10 00    # bipush 0        # false
# <425:cond_end>
14 1A A8 # aldc 6824       # s[6824] = "reflect.c0:128.4-128.45: @requires annotation failed\n"
15 03    # vload 3         # _caller
14 1A DE # aldc 6878       # s[6878] = ": caller location"
B7 00 00 # invokenative 0  # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0  # string_join("reflect.c0:128.4-128.45: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert((width * height) == \length(pixels)) [failure message on stack]
15 01    # vload 1         # width
15 02    # vload 2         # height
68       # imul            # (width * height)
36 05    # vstore 5        # arrayLength = (width * height);
15 05    # vload 5         # arrayLength
BC 04    # newarray 4      # alloc_array(pixel, arrayLength)
36 06    # vstore 6        # y_axis = alloc_array(pixel, arrayLength);
15 05    # vload 5         # arrayLength
BC 04    # newarray 4      # alloc_array(pixel, arrayLength)
36 07    # vstore 7        # x_axis = alloc_array(pixel, arrayLength);
15 05    # vload 5         # arrayLength
BC 04    # newarray 4      # alloc_array(pixel, arrayLength)
36 08    # vstore 8        # both_axis = alloc_array(pixel, arrayLength);
15 00    # vload 0         # pixels
15 01    # vload 1         # width
15 02    # vload 2         # height
14 1A F0 # aldc 6896       # s[6896] = "reflect.c0:138.12-138.43"
B8 00 24 # invokestatic 36 # reflect_y(pixels, width, height, "reflect.c0:138.12-138.43")
36 06    # vstore 6        # y_axis = reflect_y(pixels, width, height, "reflect.c0:138.12-138.43");
15 00    # vload 0         # pixels
15 01    # vload 1         # width
15 02    # vload 2         # height
14 1B 09 # aldc 6921       # s[6921] = "reflect.c0:139.12-139.42"
B8 00 25 # invokestatic 37 # reflect_x(pixels, width, height, "reflect.c0:139.12-139.42")
36 07    # vstore 7        # x_axis = reflect_x(pixels, width, height, "reflect.c0:139.12-139.42");
15 00    # vload 0         # pixels
15 01    # vload 1         # width
15 02    # vload 2         # height
14 1B 22 # aldc 6946       # s[6946] = "reflect.c0:140.24-140.54"
B8 00 24 # invokestatic 36 # reflect_y(pixels, width, height, "reflect.c0:140.24-140.54")
15 01    # vload 1         # width
15 02    # vload 2         # height
14 1B 3B # aldc 6971       # s[6971] = "reflect.c0:140.14-140.70"
B8 00 25 # invokestatic 37 # reflect_x(reflect_y(pixels, width, height, "reflect.c0:140.24-140.54"), width, height, "reflect.c0:140.14-140.70")
36 08    # vstore 8        # both_axis = reflect_x(reflect_y(pixels, width, height, "reflect.c0:140.24-140.54"), width, height, "reflect.c0:140.14-140.70");
10 02    # bipush 2        # 2
15 01    # vload 1         # width
68       # imul            # (2 * width)
10 02    # bipush 2        # 2
15 02    # vload 2         # height
68       # imul            # (2 * height)
14 1B 54 # aldc 6996       # s[6996] = "reflect.c0:143.13-143.50"
B8 00 1E # invokestatic 30 # is_valid_imagesize((2 * width), (2 * height), "reflect.c0:143.13-143.50")
14 1B 6D # aldc 7021       # s[7021] = "reflect.c0:143.6-143.51: @assert annotation failed"
CF       # assert          # assertis_valid_imagesize((2 * width), (2 * height), "reflect.c0:143.13-143.50") [failure message on stack]
10 02    # bipush 2        # 2
15 01    # vload 1         # width
68       # imul            # (2 * width)
10 02    # bipush 2        # 2
15 02    # vload 2         # height
68       # imul            # (2 * height)
68       # imul            # ((2 * width) * (2 * height))
36 09    # vstore 9        # giantLength = ((2 * width) * (2 * height));
15 09    # vload 9         # giantLength
BC 04    # newarray 4      # alloc_array(pixel, giantLength)
36 0A    # vstore 10       # giant = alloc_array(pixel, giantLength);
15 0A    # vload 10        # giant
15 00    # vload 0         # pixels
10 00    # bipush 0        # 0
10 00    # bipush 0        # 0
15 01    # vload 1         # width
60       # iadd            # (0 + width)
15 01    # vload 1         # width
15 02    # vload 2         # height
14 1B A0 # aldc 7072       # s[7072] = "reflect.c0:146.11-146.59"
B8 00 26 # invokestatic 38 # insertPic(giant, pixels, 0, (0 + width), width, height, "reflect.c0:146.11-146.59")
36 0A    # vstore 10       # giant = insertPic(giant, pixels, 0, (0 + width), width, height, "reflect.c0:146.11-146.59");
15 0A    # vload 10        # giant
15 06    # vload 6         # y_axis
10 00    # bipush 0        # 0
10 00    # bipush 0        # 0
15 01    # vload 1         # width
15 02    # vload 2         # height
14 1B B9 # aldc 7097       # s[7097] = "reflect.c0:147.11-147.53"
B8 00 26 # invokestatic 38 # insertPic(giant, y_axis, 0, 0, width, height, "reflect.c0:147.11-147.53")
36 0A    # vstore 10       # giant = insertPic(giant, y_axis, 0, 0, width, height, "reflect.c0:147.11-147.53");
15 0A    # vload 10        # giant
15 07    # vload 7         # x_axis
15 02    # vload 2         # height
15 01    # vload 1         # width
15 01    # vload 1         # width
15 02    # vload 2         # height
14 1B D2 # aldc 7122       # s[7122] = "reflect.c0:148.11-148.62"
B8 00 26 # invokestatic 38 # insertPic(giant, x_axis, height, width, width, height, "reflect.c0:148.11-148.62")
36 0A    # vstore 10       # giant = insertPic(giant, x_axis, height, width, width, height, "reflect.c0:148.11-148.62");
15 0A    # vload 10        # giant
15 08    # vload 8         # both_axis
15 02    # vload 2         # height
10 00    # bipush 0        # 0
15 01    # vload 1         # width
15 02    # vload 2         # height
14 1B EB # aldc 7147       # s[7147] = "reflect.c0:149.11-149.60"
B8 00 26 # invokestatic 38 # insertPic(giant, both_axis, height, 0, width, height, "reflect.c0:149.11-149.60")
36 0A    # vstore 10       # giant = insertPic(giant, both_axis, height, 0, width, height, "reflect.c0:149.11-149.60");
15 0A    # vload 10        # giant
36 04    # vstore 4        # _result = giant;
15 04    # vload 4         # _result
BE       # arraylength     # \length(_result)
10 02    # bipush 2        # 2
15 01    # vload 1         # width
68       # imul            # (2 * width)
10 02    # bipush 2        # 2
68       # imul            # ((2 * width) * 2)
15 02    # vload 2         # height
68       # imul            # (((2 * width) * 2) * height)
9F 00 06 # if_cmpeq +6     # if (\length(_result) == (((2 * width) * 2) * height)) goto <426:cond_true>
A7 00 08 # goto +8         # goto <427:cond_false>
# <426:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <428:cond_end>
# <427:cond_false>
10 00    # bipush 0        # false
# <428:cond_end>
14 1C 04 # aldc 7172       # s[7172] = "reflect.c0:129.4-129.54: @ensures annotation failed"
CF       # assert          # assert(\length(_result) == (((2 * width) * 2) * height)) [failure message on stack]
15 04    # vload 4         # _result
B0       # return          # 


#<args_flag__1>
00 03             # number of arguments = 3
00 10             # number of local variables = 16
00 2D             # code length = 45 bytes
15 01    # vload 1         # ptr
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (ptr != NULL) goto <429:cond_true>
A7 00 08 # goto +8         # goto <430:cond_false>
# <429:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <431:cond_end>
# <430:cond_false>
10 00    # bipush 0        # false
# <431:cond_end>
14 1C 38 # aldc 7224       # s[7224] = "/afs/andrew/course/15/122/lib/args.h0:8.6-8.27: @requires annotation failed\n"
15 02    # vload 2         # _caller
14 1C 85 # aldc 7301       # s[7301] = ": caller location"
B7 00 00 # invokenative 0  # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0  # string_join("/afs/andrew/course/15/122/lib/args.h0:8.6-8.27: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert(ptr != NULL) [failure message on stack]
15 00    # vload 0         # name
15 01    # vload 1         # ptr
B7 00 0D # invokenative 13 # args_flag(name, ptr)
57       # pop             # (ignore result)
10 00    # bipush 0        # dummy return value
B0       # return          # 
10 00    # bipush 0        # dummy return value
B0       # return          # 


#<args_int__1>
00 03             # number of arguments = 3
00 10             # number of local variables = 16
00 2D             # code length = 45 bytes
15 01    # vload 1         # ptr
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (ptr != NULL) goto <432:cond_true>
A7 00 08 # goto +8         # goto <433:cond_false>
# <432:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <434:cond_end>
# <433:cond_false>
10 00    # bipush 0        # false
# <434:cond_end>
14 1C 97 # aldc 7319       # s[7319] = "/afs/andrew/course/15/122/lib/args.h0:14.6-14.27: @requires annotation failed\n"
15 02    # vload 2         # _caller
14 1C E6 # aldc 7398       # s[7398] = ": caller location"
B7 00 00 # invokenative 0  # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0  # string_join("/afs/andrew/course/15/122/lib/args.h0:14.6-14.27: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert(ptr != NULL) [failure message on stack]
15 00    # vload 0         # name
15 01    # vload 1         # ptr
B7 00 0E # invokenative 14 # args_int(name, ptr)
57       # pop             # (ignore result)
10 00    # bipush 0        # dummy return value
B0       # return          # 
10 00    # bipush 0        # dummy return value
B0       # return          # 


#<args_string__1>
00 03             # number of arguments = 3
00 10             # number of local variables = 16
00 2D             # code length = 45 bytes
15 01    # vload 1         # ptr
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (ptr != NULL) goto <435:cond_true>
A7 00 08 # goto +8         # goto <436:cond_false>
# <435:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <437:cond_end>
# <436:cond_false>
10 00    # bipush 0        # false
# <437:cond_end>
14 1C F8 # aldc 7416       # s[7416] = "/afs/andrew/course/15/122/lib/args.h0:20.6-20.27: @requires annotation failed\n"
15 02    # vload 2         # _caller
14 1D 47 # aldc 7495       # s[7495] = ": caller location"
B7 00 00 # invokenative 0  # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0  # string_join("/afs/andrew/course/15/122/lib/args.h0:20.6-20.27: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert(ptr != NULL) [failure message on stack]
15 00    # vload 0         # name
15 01    # vload 1         # ptr
B7 00 0F # invokenative 15 # args_string(name, ptr)
57       # pop             # (ignore result)
10 00    # bipush 0        # dummy return value
B0       # return          # 
10 00    # bipush 0        # dummy return value
B0       # return          # 


#<args_parse__1>
00 01             # number of arguments = 1
00 10             # number of local variables = 16
00 32             # code length = 50 bytes
B7 00 10 # invokenative 16 # args_parse()
36 01    # vstore 1        # _result = args_parse();
15 01    # vload 1         # _result
01       # aconst_null     # NULL
9F 00 06 # if_cmpeq +6     # if (_result == NULL) goto <438:cond_true>
A7 00 08 # goto +8         # goto <439:cond_false>
# <438:cond_true>
10 01    # bipush 1        # true
A7 00 1B # goto +27        # goto <440:cond_end>
# <439:cond_false>
15 01    # vload 1         # _result
62 00    # aaddf 0         # &_result->argc
2E       # imload          # _result->argc
15 01    # vload 1         # _result
62 08    # aaddf 8         # &_result->argv
2F       # amload          # _result->argv
BE       # arraylength     # \length(_result->argv)
9F 00 06 # if_cmpeq +6     # if (_result->argc == \length(_result->argv)) goto <441:cond_true>
A7 00 08 # goto +8         # goto <442:cond_false>
# <441:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <443:cond_end>
# <442:cond_false>
10 00    # bipush 0        # false
# <443:cond_end>
# <440:cond_end>
14 1D 59 # aldc 7513       # s[7513] = "/afs/andrew/course/15/122/lib/args.h0:34.6-34.73: @ensures annotation failed"
CF       # assert          # assert((_result == NULL) || (_result->argc == \length(_result->argv))) [failure message on stack]
15 01    # vload 1         # _result
B0       # return          # 


#<parse_int__1>
00 03             # number of arguments = 3
00 10             # number of local variables = 16
00 3B             # code length = 59 bytes
10 02    # bipush 2        # 2
15 01    # vload 1         # base
A4 00 06 # if_icmple +6    # if (2 <= base) goto <444:cond_true>
A7 00 17 # goto +23        # goto <445:cond_false>
# <444:cond_true>
15 01    # vload 1         # base
10 24    # bipush 36       # 36
A4 00 06 # if_icmple +6    # if (base <= 36) goto <447:cond_true>
A7 00 08 # goto +8         # goto <448:cond_false>
# <447:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <449:cond_end>
# <448:cond_false>
10 00    # bipush 0        # false
# <449:cond_end>
A7 00 05 # goto +5         # goto <446:cond_end>
# <445:cond_false>
10 00    # bipush 0        # false
# <446:cond_end>
14 1D A6 # aldc 7590       # s[7590] = "/afs/andrew/course/15/122/lib/parse.h0:13.6-13.39: @requires annotation failed\n"
15 02    # vload 2         # _caller
14 1D F6 # aldc 7670       # s[7670] = ": caller location"
B7 00 00 # invokenative 0  # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0  # string_join("/afs/andrew/course/15/122/lib/parse.h0:13.6-13.39: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert((2 <= base) && (base <= 36)) [failure message on stack]
15 00    # vload 0         # s
15 01    # vload 1         # base
B7 00 11 # invokenative 17 # parse_int(s, base)
36 03    # vstore 3        # _result = parse_int(s, base);
15 03    # vload 3         # _result
B0       # return          # 


#<int_tokens__1>
00 03             # number of arguments = 3
00 10             # number of local variables = 16
00 3B             # code length = 59 bytes
10 02    # bipush 2        # 2
15 01    # vload 1         # base
A4 00 06 # if_icmple +6    # if (2 <= base) goto <450:cond_true>
A7 00 17 # goto +23        # goto <451:cond_false>
# <450:cond_true>
15 01    # vload 1         # base
10 24    # bipush 36       # 36
A4 00 06 # if_icmple +6    # if (base <= 36) goto <453:cond_true>
A7 00 08 # goto +8         # goto <454:cond_false>
# <453:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <455:cond_end>
# <454:cond_false>
10 00    # bipush 0        # false
# <455:cond_end>
A7 00 05 # goto +5         # goto <452:cond_end>
# <451:cond_false>
10 00    # bipush 0        # false
# <452:cond_end>
14 1E 08 # aldc 7688       # s[7688] = "/afs/andrew/course/15/122/lib/parse.h0:20.6-20.39: @requires annotation failed\n"
15 02    # vload 2         # _caller
14 1E 58 # aldc 7768       # s[7768] = ": caller location"
B7 00 00 # invokenative 0  # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0  # string_join("/afs/andrew/course/15/122/lib/parse.h0:20.6-20.39: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert((2 <= base) && (base <= 36)) [failure message on stack]
15 00    # vload 0         # s
15 01    # vload 1         # base
B7 00 12 # invokenative 18 # int_tokens(s, base)
36 03    # vstore 3        # _result = int_tokens(s, base);
15 03    # vload 3         # _result
B0       # return          # 


#<parse_tokens__1>
00 02             # number of arguments = 2
00 10             # number of local variables = 16
00 23             # code length = 35 bytes
15 00    # vload 0         # s
B7 00 13 # invokenative 19 # parse_tokens(s)
36 02    # vstore 2        # _result = parse_tokens(s);
15 02    # vload 2         # _result
BE       # arraylength     # \length(_result)
15 00    # vload 0         # s
B7 00 14 # invokenative 20 # num_tokens(s)
9F 00 06 # if_cmpeq +6     # if (\length(_result) == num_tokens(s)) goto <456:cond_true>
A7 00 08 # goto +8         # goto <457:cond_false>
# <456:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <458:cond_end>
# <457:cond_false>
10 00    # bipush 0        # false
# <458:cond_end>
14 1E 6A # aldc 7786       # s[7786] = "/afs/andrew/course/15/122/lib/parse.h0:23.6-23.48: @ensures annotation failed"
CF       # assert          # assert(\length(_result) == num_tokens(s)) [failure message on stack]
15 02    # vload 2         # _result
B0       # return          # 


#<parse_ints__1>
00 03             # number of arguments = 3
00 10             # number of local variables = 16
00 3E             # code length = 62 bytes
15 00    # vload 0         # s
15 01    # vload 1         # base
14 1E B8 # aldc 7864       # s[7864] = "/afs/andrew/course/15/122/lib/parse.h0:27.15-27.34"
B8 00 2D # invokestatic 45 # int_tokens__1(s, base, "/afs/andrew/course/15/122/lib/parse.h0:27.15-27.34")
14 1E EB # aldc 7915       # s[7915] = "/afs/andrew/course/15/122/lib/parse.h0:27.6-27.35: @requires annotation failed\n"
15 02    # vload 2         # _caller
14 1F 3B # aldc 7995       # s[7995] = ": caller location"
B7 00 00 # invokenative 0  # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0  # string_join("/afs/andrew/course/15/122/lib/parse.h0:27.6-27.35: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assertint_tokens__1(s, base, "/afs/andrew/course/15/122/lib/parse.h0:27.15-27.34") [failure message on stack]
15 00    # vload 0         # s
15 01    # vload 1         # base
B7 00 15 # invokenative 21 # parse_ints(s, base)
36 03    # vstore 3        # _result = parse_ints(s, base);
15 03    # vload 3         # _result
BE       # arraylength     # \length(_result)
15 00    # vload 0         # s
B7 00 14 # invokenative 20 # num_tokens(s)
9F 00 06 # if_cmpeq +6     # if (\length(_result) == num_tokens(s)) goto <459:cond_true>
A7 00 08 # goto +8         # goto <460:cond_false>
# <459:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <461:cond_end>
# <460:cond_false>
10 00    # bipush 0        # false
# <461:cond_end>
14 1F 4D # aldc 8013       # s[8013] = "/afs/andrew/course/15/122/lib/parse.h0:28.6-28.48: @ensures annotation failed"
CF       # assert          # assert(\length(_result) == num_tokens(s)) [failure message on stack]
15 03    # vload 3         # _result
B0       # return          # 


#<image_width__1>
00 02             # number of arguments = 2
00 10             # number of local variables = 16
00 3E             # code length = 62 bytes
15 00    # vload 0         # image
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (image != NULL) goto <462:cond_true>
A7 00 08 # goto +8         # goto <463:cond_false>
# <462:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <464:cond_end>
# <463:cond_false>
10 00    # bipush 0        # false
# <464:cond_end>
14 1F 9B # aldc 8091       # s[8091] = "/afs/andrew/course/15/122/lib/img.h0:12.6-12.29: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 1F E9 # aldc 8169       # s[8169] = ": caller location"
B7 00 00 # invokenative 0  # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0  # string_join("/afs/andrew/course/15/122/lib/img.h0:12.6-12.29: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert(image != NULL) [failure message on stack]
15 00    # vload 0         # image
B7 00 16 # invokenative 22 # image_width(image)
36 02    # vstore 2        # _result = image_width(image);
15 02    # vload 2         # _result
10 00    # bipush 0        # 0
A3 00 06 # if_icmpgt +6    # if (_result > 0) goto <465:cond_true>
A7 00 08 # goto +8         # goto <466:cond_false>
# <465:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <467:cond_end>
# <466:cond_false>
10 00    # bipush 0        # false
# <467:cond_end>
14 1F FB # aldc 8187       # s[8187] = "/afs/andrew/course/15/122/lib/img.h0:13.6-13.26: @ensures annotation failed"
CF       # assert          # assert(_result > 0) [failure message on stack]
15 02    # vload 2         # _result
B0       # return          # 


#<image_height__1>
00 02             # number of arguments = 2
00 10             # number of local variables = 16
00 3E             # code length = 62 bytes
15 00    # vload 0         # image
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (image != NULL) goto <468:cond_true>
A7 00 08 # goto +8         # goto <469:cond_false>
# <468:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <470:cond_end>
# <469:cond_false>
10 00    # bipush 0        # false
# <470:cond_end>
14 20 47 # aldc 8263       # s[8263] = "/afs/andrew/course/15/122/lib/img.h0:17.6-17.29: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 20 95 # aldc 8341       # s[8341] = ": caller location"
B7 00 00 # invokenative 0  # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0  # string_join("/afs/andrew/course/15/122/lib/img.h0:17.6-17.29: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert(image != NULL) [failure message on stack]
15 00    # vload 0         # image
B7 00 17 # invokenative 23 # image_height(image)
36 02    # vstore 2        # _result = image_height(image);
15 02    # vload 2         # _result
10 00    # bipush 0        # 0
A3 00 06 # if_icmpgt +6    # if (_result > 0) goto <471:cond_true>
A7 00 08 # goto +8         # goto <472:cond_false>
# <471:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <473:cond_end>
# <472:cond_false>
10 00    # bipush 0        # false
# <473:cond_end>
14 20 A7 # aldc 8359       # s[8359] = "/afs/andrew/course/15/122/lib/img.h0:18.6-18.26: @ensures annotation failed"
CF       # assert          # assert(_result > 0) [failure message on stack]
15 02    # vload 2         # _result
B0       # return          # 


#<image_create__1>
00 03             # number of arguments = 3
00 10             # number of local variables = 16
00 85             # code length = 133 bytes
10 00    # bipush 0        # 0
15 00    # vload 0         # width
A1 00 06 # if_icmplt +6    # if (0 < width) goto <474:cond_true>
A7 00 17 # goto +23        # goto <475:cond_false>
# <474:cond_true>
10 00    # bipush 0        # 0
15 01    # vload 1         # height
A1 00 06 # if_icmplt +6    # if (0 < height) goto <477:cond_true>
A7 00 08 # goto +8         # goto <478:cond_false>
# <477:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <479:cond_end>
# <478:cond_false>
10 00    # bipush 0        # false
# <479:cond_end>
A7 00 05 # goto +5         # goto <476:cond_end>
# <475:cond_false>
10 00    # bipush 0        # false
# <476:cond_end>
14 20 F3 # aldc 8435       # s[8435] = "/afs/andrew/course/15/122/lib/img.h0:22.6-22.39: @requires annotation failed\n"
15 02    # vload 2         # _caller
14 21 41 # aldc 8513       # s[8513] = ": caller location"
B7 00 00 # invokenative 0  # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0  # string_join("/afs/andrew/course/15/122/lib/img.h0:22.6-22.39: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert((0 < width) && (0 < height)) [failure message on stack]
15 00    # vload 0         # width
15 01    # vload 1         # height
B7 00 18 # invokenative 24 # image_create(width, height)
36 03    # vstore 3        # _result = image_create(width, height);
15 03    # vload 3         # _result
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (_result != NULL) goto <480:cond_true>
A7 00 08 # goto +8         # goto <481:cond_false>
# <480:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <482:cond_end>
# <481:cond_false>
10 00    # bipush 0        # false
# <482:cond_end>
14 21 53 # aldc 8531       # s[8531] = "/afs/andrew/course/15/122/lib/img.h0:23.6-23.30: @ensures annotation failed"
CF       # assert          # assert(_result != NULL) [failure message on stack]
15 03    # vload 3         # _result
14 21 9F # aldc 8607       # s[8607] = "/afs/andrew/course/15/122/lib/img.h0:24.14-24.34"
B8 00 30 # invokestatic 48 # image_width__1(_result, "/afs/andrew/course/15/122/lib/img.h0:24.14-24.34")
15 00    # vload 0         # width
9F 00 06 # if_cmpeq +6     # if (image_width__1(_result, "/afs/andrew/course/15/122/lib/img.h0:24.14-24.34") == width) goto <483:cond_true>
A7 00 08 # goto +8         # goto <484:cond_false>
# <483:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <485:cond_end>
# <484:cond_false>
10 00    # bipush 0        # false
# <485:cond_end>
14 21 D0 # aldc 8656       # s[8656] = "/afs/andrew/course/15/122/lib/img.h0:24.6-24.44: @ensures annotation failed"
CF       # assert          # assert(image_width__1(_result, "/afs/andrew/course/15/122/lib/img.h0:24.14-24.34") == width) [failure message on stack]
15 03    # vload 3         # _result
14 22 1C # aldc 8732       # s[8732] = "/afs/andrew/course/15/122/lib/img.h0:25.14-25.35"
B8 00 31 # invokestatic 49 # image_height__1(_result, "/afs/andrew/course/15/122/lib/img.h0:25.14-25.35")
15 01    # vload 1         # height
9F 00 06 # if_cmpeq +6     # if (image_height__1(_result, "/afs/andrew/course/15/122/lib/img.h0:25.14-25.35") == height) goto <486:cond_true>
A7 00 08 # goto +8         # goto <487:cond_false>
# <486:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <488:cond_end>
# <487:cond_false>
10 00    # bipush 0        # false
# <488:cond_end>
14 22 4D # aldc 8781       # s[8781] = "/afs/andrew/course/15/122/lib/img.h0:25.6-25.46: @ensures annotation failed"
CF       # assert          # assert(image_height__1(_result, "/afs/andrew/course/15/122/lib/img.h0:25.14-25.35") == height) [failure message on stack]
15 03    # vload 3         # _result
B0       # return          # 


#<image_clone__1>
00 02             # number of arguments = 2
00 10             # number of local variables = 16
00 6B             # code length = 107 bytes
15 00    # vload 0         # image
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (image != NULL) goto <489:cond_true>
A7 00 08 # goto +8         # goto <490:cond_false>
# <489:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <491:cond_end>
# <490:cond_false>
10 00    # bipush 0        # false
# <491:cond_end>
14 22 99 # aldc 8857       # s[8857] = "/afs/andrew/course/15/122/lib/img.h0:29.6-29.29: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 22 E7 # aldc 8935       # s[8935] = ": caller location"
B7 00 00 # invokenative 0  # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0  # string_join("/afs/andrew/course/15/122/lib/img.h0:29.6-29.29: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert(image != NULL) [failure message on stack]
15 00    # vload 0         # image
B7 00 19 # invokenative 25 # image_clone(image)
36 02    # vstore 2        # _result = image_clone(image);
15 02    # vload 2         # _result
14 22 F9 # aldc 8953       # s[8953] = "/afs/andrew/course/15/122/lib/img.h0:30.14-30.34"
B8 00 30 # invokestatic 48 # image_width__1(_result, "/afs/andrew/course/15/122/lib/img.h0:30.14-30.34")
15 00    # vload 0         # image
14 23 2A # aldc 9002       # s[9002] = "/afs/andrew/course/15/122/lib/img.h0:30.38-30.56"
B8 00 30 # invokestatic 48 # image_width__1(image, "/afs/andrew/course/15/122/lib/img.h0:30.38-30.56")
9F 00 06 # if_cmpeq +6     # if (image_width__1(_result, "/afs/andrew/course/15/122/lib/img.h0:30.14-30.34") == image_width__1(image, "/afs/andrew/course/15/122/lib/img.h0:30.38-30.56")) goto <492:cond_true>
A7 00 08 # goto +8         # goto <493:cond_false>
# <492:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <494:cond_end>
# <493:cond_false>
10 00    # bipush 0        # false
# <494:cond_end>
14 23 5B # aldc 9051       # s[9051] = "/afs/andrew/course/15/122/lib/img.h0:30.6-30.57: @ensures annotation failed"
CF       # assert          # assert(image_width__1(_result, "/afs/andrew/course/15/122/lib/img.h0:30.14-30.34") == image_width__1(image, "/afs/andrew/course/15/122/lib/img.h0:30.38-30.56")) [failure message on stack]
15 02    # vload 2         # _result
14 23 A7 # aldc 9127       # s[9127] = "/afs/andrew/course/15/122/lib/img.h0:31.14-31.35"
B8 00 31 # invokestatic 49 # image_height__1(_result, "/afs/andrew/course/15/122/lib/img.h0:31.14-31.35")
15 00    # vload 0         # image
14 23 D8 # aldc 9176       # s[9176] = "/afs/andrew/course/15/122/lib/img.h0:31.39-31.58"
B8 00 31 # invokestatic 49 # image_height__1(image, "/afs/andrew/course/15/122/lib/img.h0:31.39-31.58")
9F 00 06 # if_cmpeq +6     # if (image_height__1(_result, "/afs/andrew/course/15/122/lib/img.h0:31.14-31.35") == image_height__1(image, "/afs/andrew/course/15/122/lib/img.h0:31.39-31.58")) goto <495:cond_true>
A7 00 08 # goto +8         # goto <496:cond_false>
# <495:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <497:cond_end>
# <496:cond_false>
10 00    # bipush 0        # false
# <497:cond_end>
14 24 09 # aldc 9225       # s[9225] = "/afs/andrew/course/15/122/lib/img.h0:31.6-31.59: @ensures annotation failed"
CF       # assert          # assert(image_height__1(_result, "/afs/andrew/course/15/122/lib/img.h0:31.14-31.35") == image_height__1(image, "/afs/andrew/course/15/122/lib/img.h0:31.39-31.58")) [failure message on stack]
15 02    # vload 2         # _result
B0       # return          # 


#<image_subimage__1>
00 06             # number of arguments = 6
00 10             # number of local variables = 16
00 67             # code length = 103 bytes
15 00    # vload 0         # image
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (image != NULL) goto <498:cond_true>
A7 00 08 # goto +8         # goto <499:cond_false>
# <498:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <500:cond_end>
# <499:cond_false>
10 00    # bipush 0        # false
# <500:cond_end>
14 24 55 # aldc 9301       # s[9301] = "/afs/andrew/course/15/122/lib/img.h0:38.6-38.29: @requires annotation failed\n"
15 05    # vload 5         # _caller
14 24 A3 # aldc 9379       # s[9379] = ": caller location"
B7 00 00 # invokenative 0  # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0  # string_join("/afs/andrew/course/15/122/lib/img.h0:38.6-38.29: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert(image != NULL) [failure message on stack]
15 00    # vload 0         # image
15 01    # vload 1         # x
15 02    # vload 2         # y
15 03    # vload 3         # width
15 04    # vload 4         # height
B7 00 1A # invokenative 26 # image_subimage(image, x, y, width, height)
36 06    # vstore 6        # _result = image_subimage(image, x, y, width, height);
15 06    # vload 6         # _result
14 24 B5 # aldc 9397       # s[9397] = "/afs/andrew/course/15/122/lib/img.h0:39.14-39.34"
B8 00 30 # invokestatic 48 # image_width__1(_result, "/afs/andrew/course/15/122/lib/img.h0:39.14-39.34")
15 03    # vload 3         # width
9F 00 06 # if_cmpeq +6     # if (image_width__1(_result, "/afs/andrew/course/15/122/lib/img.h0:39.14-39.34") == width) goto <501:cond_true>
A7 00 08 # goto +8         # goto <502:cond_false>
# <501:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <503:cond_end>
# <502:cond_false>
10 00    # bipush 0        # false
# <503:cond_end>
14 24 E6 # aldc 9446       # s[9446] = "/afs/andrew/course/15/122/lib/img.h0:39.6-39.44: @ensures annotation failed"
CF       # assert          # assert(image_width__1(_result, "/afs/andrew/course/15/122/lib/img.h0:39.14-39.34") == width) [failure message on stack]
15 06    # vload 6         # _result
14 25 32 # aldc 9522       # s[9522] = "/afs/andrew/course/15/122/lib/img.h0:40.14-40.35"
B8 00 31 # invokestatic 49 # image_height__1(_result, "/afs/andrew/course/15/122/lib/img.h0:40.14-40.35")
15 04    # vload 4         # height
9F 00 06 # if_cmpeq +6     # if (image_height__1(_result, "/afs/andrew/course/15/122/lib/img.h0:40.14-40.35") == height) goto <504:cond_true>
A7 00 08 # goto +8         # goto <505:cond_false>
# <504:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <506:cond_end>
# <505:cond_false>
10 00    # bipush 0        # false
# <506:cond_end>
14 25 63 # aldc 9571       # s[9571] = "/afs/andrew/course/15/122/lib/img.h0:40.6-40.46: @ensures annotation failed"
CF       # assert          # assert(image_height__1(_result, "/afs/andrew/course/15/122/lib/img.h0:40.14-40.35") == height) [failure message on stack]
15 06    # vload 6         # _result
B0       # return          # 


#<image_save__1>
00 03             # number of arguments = 3
00 10             # number of local variables = 16
00 2D             # code length = 45 bytes
15 00    # vload 0         # image
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (image != NULL) goto <507:cond_true>
A7 00 08 # goto +8         # goto <508:cond_false>
# <507:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <509:cond_end>
# <508:cond_false>
10 00    # bipush 0        # false
# <509:cond_end>
14 25 AF # aldc 9647       # s[9647] = "/afs/andrew/course/15/122/lib/img.h0:50.6-50.29: @requires annotation failed\n"
15 02    # vload 2         # _caller
14 25 FD # aldc 9725       # s[9725] = ": caller location"
B7 00 00 # invokenative 0  # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0  # string_join("/afs/andrew/course/15/122/lib/img.h0:50.6-50.29: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert(image != NULL) [failure message on stack]
15 00    # vload 0         # image
15 01    # vload 1         # path
B7 00 1B # invokenative 27 # image_save(image, path)
57       # pop             # (ignore result)
10 00    # bipush 0        # dummy return value
B0       # return          # 
10 00    # bipush 0        # dummy return value
B0       # return          # 


#<image_data__1>
00 02             # number of arguments = 2
00 10             # number of local variables = 16
00 4E             # code length = 78 bytes
15 00    # vload 0         # image
01       # aconst_null     # NULL
A0 00 06 # if_cmpne +6     # if (image != NULL) goto <510:cond_true>
A7 00 08 # goto +8         # goto <511:cond_false>
# <510:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <512:cond_end>
# <511:cond_false>
10 00    # bipush 0        # false
# <512:cond_end>
14 26 0F # aldc 9743       # s[9743] = "/afs/andrew/course/15/122/lib/img.h0:58.6-58.29: @requires annotation failed\n"
15 01    # vload 1         # _caller
14 26 5D # aldc 9821       # s[9821] = ": caller location"
B7 00 00 # invokenative 0  # string_join(_caller, ": caller location")
B7 00 00 # invokenative 0  # string_join("/afs/andrew/course/15/122/lib/img.h0:58.6-58.29: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert          # assert(image != NULL) [failure message on stack]
15 00    # vload 0         # image
B7 00 1C # invokenative 28 # image_data(image)
36 02    # vstore 2        # _result = image_data(image);
15 02    # vload 2         # _result
BE       # arraylength     # \length(_result)
15 00    # vload 0         # image
14 26 6F # aldc 9839       # s[9839] = "/afs/andrew/course/15/122/lib/img.h0:59.34-59.52"
B8 00 30 # invokestatic 48 # image_width__1(image, "/afs/andrew/course/15/122/lib/img.h0:59.34-59.52")
15 00    # vload 0         # image
14 26 A0 # aldc 9888       # s[9888] = "/afs/andrew/course/15/122/lib/img.h0:59.55-59.74"
B8 00 31 # invokestatic 49 # image_height__1(image, "/afs/andrew/course/15/122/lib/img.h0:59.55-59.74")
68       # imul            # (image_width__1(image, "/afs/andrew/course/15/122/lib/img.h0:59.34-59.52") * image_height__1(image, "/afs/andrew/course/15/122/lib/img.h0:59.55-59.74"))
9F 00 06 # if_cmpeq +6     # if (\length(_result) == (image_width__1(image, "/afs/andrew/course/15/122/lib/img.h0:59.34-59.52") * image_height__1(image, "/afs/andrew/course/15/122/lib/img.h0:59.55-59.74"))) goto <513:cond_true>
A7 00 08 # goto +8         # goto <514:cond_false>
# <513:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <515:cond_end>
# <514:cond_false>
10 00    # bipush 0        # false
# <515:cond_end>
14 26 D1 # aldc 9937       # s[9937] = "/afs/andrew/course/15/122/lib/img.h0:59.6-59.75: @ensures annotation failed"
CF       # assert          # assert(\length(_result) == (image_width__1(image, "/afs/andrew/course/15/122/lib/img.h0:59.34-59.52") * image_height__1(image, "/afs/andrew/course/15/122/lib/img.h0:59.55-59.74"))) [failure message on stack]
15 02    # vload 2         # _result
B0       # return          # 


#<reflect_main>
00 03             # number of arguments = 3
00 10             # number of local variables = 16
01 36             # code length = 310 bytes
14 27 1D # aldc 10013      # s[10013] = "Input image:  "
B7 00 1D # invokenative 29 # print("Input image:  ")
57       # pop             # (ignore result)
15 00    # vload 0         # input
B7 00 1E # invokenative 30 # println(input)
57       # pop             # (ignore result)
14 27 2C # aldc 10028      # s[10028] = "Output image: "
B7 00 1D # invokenative 29 # print("Output image: ")
57       # pop             # (ignore result)
15 01    # vload 1         # output
B7 00 1E # invokenative 30 # println(output)
57       # pop             # (ignore result)
15 00    # vload 0         # input
B7 00 1F # invokenative 31 # image_load(input)
36 03    # vstore 3        # source = image_load(input);
15 03    # vload 3         # source
01       # aconst_null     # NULL
9F 00 06 # if_cmpeq +6     # if (source == NULL) goto <516:then>
A7 00 0A # goto +10        # goto <517:else>
# <516:then>
14 27 3B # aldc 10043      # s[10043] = "Could not load source image"
BF       # athrow          # error "Could not load source image"
A7 00 03 # goto +3         # goto <518:endif>
# <517:else>
# <518:endif>
15 03    # vload 3         # source
14 27 57 # aldc 10071      # s[10071] = "reflect-main.c0:17.15-17.34"
B8 00 30 # invokestatic 48 # image_width__1(source, "reflect-main.c0:17.15-17.34")
36 04    # vstore 4        # width = image_width__1(source, "reflect-main.c0:17.15-17.34");
15 03    # vload 3         # source
14 27 73 # aldc 10099      # s[10099] = "reflect-main.c0:18.16-18.36"
B8 00 31 # invokestatic 49 # image_height__1(source, "reflect-main.c0:18.16-18.36")
36 05    # vstore 5        # height = image_height__1(source, "reflect-main.c0:18.16-18.36");
15 03    # vload 3         # source
14 27 8F # aldc 10127      # s[10127] = "reflect-main.c0:19.22-19.40"
B8 00 36 # invokestatic 54 # image_data__1(source, "reflect-main.c0:19.22-19.40")
36 06    # vstore 6        # inpixels = image_data__1(source, "reflect-main.c0:19.22-19.40");
14 27 AB # aldc 10155      # s[10155] = "Loaded image.  Dimensions are "
B7 00 1D # invokenative 29 # print("Loaded image.  Dimensions are ")
57       # pop             # (ignore result)
15 04    # vload 4         # width
B7 00 20 # invokenative 32 # printint(width)
57       # pop             # (ignore result)
14 27 CA # aldc 10186      # s[10186] = " by "
B7 00 1D # invokenative 29 # print(" by ")
57       # pop             # (ignore result)
15 05    # vload 5         # height
B7 00 20 # invokenative 32 # printint(height)
57       # pop             # (ignore result)
14 27 CF # aldc 10191      # s[10191] = "."
B7 00 1E # invokenative 30 # println(".")
57       # pop             # (ignore result)
14 27 D1 # aldc 10193      # s[10193] = "Running reflect transform..."
B7 00 1D # invokenative 29 # print("Running reflect transform...")
57       # pop             # (ignore result)
B7 00 21 # invokenative 33 # flush()
57       # pop             # (ignore result)
15 06    # vload 6         # inpixels
15 04    # vload 4         # width
15 05    # vload 5         # height
14 27 EE # aldc 10222      # s[10222] = "reflect-main.c0:30.26-30.58"
B8 00 27 # invokestatic 39 # reflect(inpixels, width, height, "reflect-main.c0:30.26-30.58")
36 07    # vstore 7        # resultpixels = reflect(inpixels, width, height, "reflect-main.c0:30.26-30.58");
15 07    # vload 7         # resultpixels
BE       # arraylength     # \length(resultpixels)
15 04    # vload 4         # width
10 02    # bipush 2        # 2
68       # imul            # (width * 2)
15 05    # vload 5         # height
10 02    # bipush 2        # 2
68       # imul            # (height * 2)
68       # imul            # ((width * 2) * (height * 2))
9F 00 06 # if_cmpeq +6     # if (\length(resultpixels) == ((width * 2) * (height * 2))) goto <519:cond_true>
A7 00 08 # goto +8         # goto <520:cond_false>
# <519:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <521:cond_end>
# <520:cond_false>
10 00    # bipush 0        # false
# <521:cond_end>
14 28 0A # aldc 10250      # s[10250] = "reflect-main.c0:31.6-31.65: @assert annotation failed"
CF       # assert          # assert(\length(resultpixels) == ((width * 2) * (height * 2))) [failure message on stack]
14 28 40 # aldc 10304      # s[10304] = "done."
B7 00 1E # invokenative 30 # println("done.")
57       # pop             # (ignore result)
15 04    # vload 4         # width
10 02    # bipush 2        # 2
68       # imul            # (width * 2)
15 05    # vload 5         # height
10 02    # bipush 2        # 2
68       # imul            # (height * 2)
14 28 46 # aldc 10310      # s[10310] = "reflect-main.c0:35.18-35.49"
B8 00 32 # invokestatic 50 # image_create__1((width * 2), (height * 2), "reflect-main.c0:35.18-35.49")
36 08    # vstore 8        # dest = image_create__1((width * 2), (height * 2), "reflect-main.c0:35.18-35.49");
15 08    # vload 8         # dest
14 28 62 # aldc 10338      # s[10338] = "reflect-main.c0:36.23-36.39"
B8 00 36 # invokestatic 54 # image_data__1(dest, "reflect-main.c0:36.23-36.39")
36 09    # vstore 9        # outpixels = image_data__1(dest, "reflect-main.c0:36.23-36.39");
10 00    # bipush 0        # 0
36 0A    # vstore 10       # i = 0;
# <522:loop>
A7 00 03 # goto +3         # goto <523:body>
# <523:body>
10 00    # bipush 0        # 0
15 0A    # vload 10        # i
A4 00 06 # if_icmple +6    # if (0 <= i) goto <525:cond_true>
A7 00 08 # goto +8         # goto <526:cond_false>
# <525:cond_true>
10 01    # bipush 1        # true
A7 00 05 # goto +5         # goto <527:cond_end>
# <526:cond_false>
10 00    # bipush 0        # false
# <527:cond_end>
14 28 7E # aldc 10366      # s[10366] = "reflect-main.c0:38.8-38.30: @loop_invariant annotation failed"
CF       # assert          # assert(0 <= i) [failure message on stack]
15 0A    # vload 10        # i
15 04    # vload 4         # width
10 02    # bipush 2        # 2
68       # imul            # (width * 2)
15 05    # vload 5         # height
10 02    # bipush 2        # 2
68       # imul            # (height * 2)
68       # imul            # ((width * 2) * (height * 2))
A1 00 06 # if_icmplt +6    # if (i < ((width * 2) * (height * 2))) goto <528:then>
A7 00 19 # goto +25        # goto <529:else>
# <528:then>
15 09    # vload 9         # outpixels
15 0A    # vload 10        # i
63       # aadds           # &outpixels[i]
15 07    # vload 7         # resultpixels
15 0A    # vload 10        # i
63       # aadds           # &resultpixels[i]
2E       # imload          # resultpixels[i]
4E       # imstore         # outpixels[i] = resultpixels[i];
15 0A    # vload 10        # i
10 01    # bipush 1        # 1
60       # iadd            # 
36 0A    # vstore 10       # i += 1;
A7 00 06 # goto +6         # goto <530:endif>
# <529:else>
A7 00 06 # goto +6         # break
# <530:endif>
A7 FF BC # goto -68        # goto <522:loop>
# <524:exit>
14 28 BC # aldc 10428      # s[10428] = "Saving output..."
B7 00 1D # invokenative 29 # print("Saving output...")
57       # pop             # (ignore result)
B7 00 21 # invokenative 33 # flush()
57       # pop             # (ignore result)
15 08    # vload 8         # dest
15 01    # vload 1         # output
14 28 CD # aldc 10445      # s[10445] = "reflect-main.c0:45.3-45.27"
B8 00 35 # invokestatic 53 # image_save__1(dest, output, "reflect-main.c0:45.3-45.27")
57       # pop             # (ignore result)
14 28 E8 # aldc 10472      # s[10472] = "done."
B7 00 1E # invokenative 30 # println("done.")
57       # pop             # (ignore result)
10 00    # bipush 0        # dummy return value
B0       # return          # 


#<default_output>
00 03             # number of arguments = 3
00 10             # number of local variables = 16
00 73             # code length = 115 bytes
15 00    # vload 0         # input
B7 00 01 # invokenative 1  # string_length(input)
36 04    # vstore 4        # len = string_length(input);
15 04    # vload 4         # len
10 04    # bipush 4        # 4
A3 00 06 # if_icmpgt +6    # if (len > 4) goto <534:and>
A7 00 20 # goto +32        # goto <531:then>
# <534:and>
14 28 EE # aldc 10478      # s[10478] = ".png"
15 00    # vload 0         # input
15 04    # vload 4         # len
10 04    # bipush 4        # 4
64       # isub            # (len - 4)
15 04    # vload 4         # len
14 28 F3 # aldc 10483      # s[10483] = "reflect-main.c0:51.41-51.70"
B8 00 15 # invokestatic 21 # string_sub__1(input, (len - 4), len, "reflect-main.c0:51.41-51.70")
B7 00 22 # invokenative 34 # string_equal(".png", string_sub__1(input, (len - 4), len, "reflect-main.c0:51.41-51.70"))
10 01    # bipush 1        # true
9F 00 0D # if_cmpeq +13    # if (string_equal(".png", string_sub__1(input, (len - 4), len, "reflect-main.c0:51.41-51.70")) == true) goto <532:else>
A7 00 03 # goto +3         # goto <531:then>
# <531:then>
14 29 0F # aldc 10511      # s[10511] = "Input file does not end with .png"
BF       # athrow          # error "Input file does not end with .png"
A7 00 03 # goto +3         # goto <533:endif>
# <532:else>
# <533:endif>
15 00    # vload 0         # input
10 00    # bipush 0        # 0
15 04    # vload 4         # len
10 04    # bipush 4        # 4
64       # isub            # (len - 4)
14 29 31 # aldc 10545      # s[10545] = "reflect-main.c0:55.16-55.43"
B8 00 15 # invokestatic 21 # string_sub__1(input, 0, (len - 4), "reflect-main.c0:55.16-55.43")
36 05    # vstore 5        # res = string_sub__1(input, 0, (len - 4), "reflect-main.c0:55.16-55.43");
15 05    # vload 5         # res
14 29 4D # aldc 10573      # s[10573] = "_"
14 29 4F # aldc 10575      # s[10575] = "reflect-main.c0:56.9-56.30"
B8 00 14 # invokestatic 20 # string_join__1(res, "_", "reflect-main.c0:56.9-56.30")
36 05    # vstore 5        # res = string_join__1(res, "_", "reflect-main.c0:56.9-56.30");
15 05    # vload 5         # res
15 01    # vload 1         # name
14 29 6A # aldc 10602      # s[10602] = "reflect-main.c0:57.9-57.31"
B8 00 14 # invokestatic 20 # string_join__1(res, name, "reflect-main.c0:57.9-57.31")
36 05    # vstore 5        # res = string_join__1(res, name, "reflect-main.c0:57.9-57.31");
15 05    # vload 5         # res
14 29 85 # aldc 10629      # s[10629] = ".png"
14 29 8A # aldc 10634      # s[10634] = "reflect-main.c0:58.9-58.33"
B8 00 14 # invokestatic 20 # string_join__1(res, ".png", "reflect-main.c0:58.9-58.33")
36 05    # vstore 5        # res = string_join__1(res, ".png", "reflect-main.c0:58.9-58.33");
15 05    # vload 5         # res
36 03    # vstore 3        # _result = res;
15 03    # vload 3         # _result
B0       # return          # 

00 23             # native count
# native pool
00 02 00 5C       # string_join
00 01 00 5D       # string_length
00 02 00 55       # string_charat
00 03 00 5E       # string_sub
00 02 00 56       # string_compare
00 01 00 5A       # string_fromchar
00 02 00 5F       # string_terminated
00 01 00 60       # string_to_chararray
00 01 00 58       # string_from_chararray
00 01 00 54       # char_ord
00 01 00 53       # char_chr
00 00 00 0E       # eof
00 00 00 15       # readline
00 02 00 0A       # args_flag
00 02 00 0B       # args_int
00 02 00 0D       # args_string
00 00 00 0C       # args_parse
00 02 00 50       # parse_int
00 02 00 4D       # int_tokens
00 01 00 52       # parse_tokens
00 01 00 4E       # num_tokens
00 02 00 51       # parse_ints
00 01 00 4C       # image_width
00 01 00 48       # image_height
00 02 00 46       # image_create
00 01 00 45       # image_clone
00 05 00 4B       # image_subimage
00 02 00 4A       # image_save
00 01 00 47       # image_data
00 01 00 10       # print
00 01 00 14       # println
00 01 00 49       # image_load
00 01 00 13       # printint
00 00 00 0F       # flush
00 02 00 57       # string_equal

