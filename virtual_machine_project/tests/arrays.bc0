C0 C0 FF EE       # magic number
00 0D             # version 6, arch = 1 (64 bits)

00 00             # int pool count
# int pool

00 03             # string pool total size
# string pool
0A 00  # "\n"
00  # ""

00 01             # function count
# function_pool

#<main>
00 00             # number of arguments = 0
00 04             # number of local variables = 4
00 79             # code length = 121 bytes
10 05    # bipush 5        # 5
BC 04    # newarray 4      # alloc_array(int, 5)
36 00    # vstore 0        # A = alloc_array(int, 5);
15 00    # vload 0         # A
10 03    # bipush 3        # 3
63       # aadds           # &A[3]
10 7B    # bipush 123      # 123
4E       # imstore         # A[3] = 123;
15 00    # vload 0         # A
10 03    # bipush 3        # 3
63       # aadds           # &A[3]
2E       # imload          # A[3]
B7 00 00 # invokenative 0  # printint(A[3])
57       # pop             # (ignore result)
14 00 00 # aldc 0          # s[0] = "\n"
B7 00 01 # invokenative 1  # println("\n")
57       # pop             # (ignore result)
10 00    # bipush 0        # 0
36 02    # vstore 2        # i = 0;
# <00:loop>
15 02    # vload 2         # i
10 05    # bipush 5        # 5
A1 00 06 # if_icmplt +6    # if (i < 5) goto <01:body>
A7 00 18 # goto +24        # goto <02:exit>
# <01:body>
15 00    # vload 0         # A
15 02    # vload 2         # i
63       # aadds           # &A[i]
15 02    # vload 2         # i
10 1E    # bipush 30       # 30
68       # imul            # (i * 30)
4E       # imstore         # A[i] = (i * 30);
15 02    # vload 2         # i
10 01    # bipush 1        # 1
60       # iadd            # 
36 02    # vstore 2        # i += 1;
A7 FF E4 # goto -28        # goto <00:loop>
# <02:exit>
10 00    # bipush 0        # 0
36 02    # vstore 2        # sum = 0;
10 00    # bipush 0        # 0
36 03    # vstore 3        # i = 0;
# <03:loop>
15 03    # vload 3         # i
10 05    # bipush 5        # 5
A1 00 06 # if_icmplt +6    # if (i < 5) goto <04:body>
A7 00 18 # goto +24        # goto <05:exit>
# <04:body>
15 02    # vload 2         # sum
15 00    # vload 0         # A
15 03    # vload 3         # i
63       # aadds           # &A[i]
2E       # imload          # A[i]
60       # iadd            # 
36 02    # vstore 2        # sum += A[i];
15 03    # vload 3         # i
10 01    # bipush 1        # 1
60       # iadd            # 
36 03    # vstore 3        # i += 1;
A7 FF E4 # goto -28        # goto <03:loop>
# <05:exit>
15 02    # vload 2         # sum
B7 00 00 # invokenative 0  # printint(sum)
57       # pop             # (ignore result)
14 00 02 # aldc 2          # s[2] = ""
B7 00 01 # invokenative 1  # println("")
57       # pop             # (ignore result)
10 00    # bipush 0        # 0
B0       # return          # 

00 02             # native count
# native pool
00 01 00 13       # printint
00 01 00 14       # println

